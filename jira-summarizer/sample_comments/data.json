[{"Issue key": "ZOOKEEPER-3014", "Request type": "Bug", "Datetime creation": "2018-03-28 08:48:23", "Datetime resolution": "2018-03-29 16:09:22", "Reporter login": "tassemble", "Reporter name": "CHQ", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "We have client A which create a znode ,and its path is /zk/lock/100000. Another client B thread is acquiring for the lock, so it calls the exist command with watchperiodically to check if it is available. Then Client A has finished this work, and delete this znode. Client b still calls exist command with watch. Becausethe code doesn't check node existence, when the Watch add operation comes , it will add to non-exist node path.\r\n\r\nThis problem maybe causeby the follow code.\r\n{code:java}\r\npublic Stat statNode(String path, Watcher watcher)\r\nthrows KeeperException.NoNodeException {\r\nStat stat = new Stat();\r\nDataNode n = nodes.get(path);\r\nif (watcher != null) {\r\ndataWatches.addWatch(path, watcher);\r\n}\r\nif (n == null) {\r\nthrow new KeeperException.NoNodeException();\r\n}\r\nsynchronized (n) {\r\nn.copyStat(stat);\r\nreturn stat;\r\n}\r\n}\r\n{code}\r\nThe zk version we use is 3.4.5. We meet a problem that is the zk client try toreestablishto zk cluster failed after disconnect for some reason.We find it causes by ZOOKEEPER-706. But we try to know why there are so many watches. Then we find this problem.\r\n\r\n\r\n\r\n\r\n\r\n", "Comments": ["Hi [~tassemble]\r\n\r\nThanks for the bugreport.\r\n\r\nMaybe I'm missing something here, but 2 things are suspicious in your explanation:\r\n # \"it calls the exist command with watchperiodically to check if it is available\"\r\n\r\nWhy periodically?\r\n\r\nClient should call the exist() method with a watcher parameter and check the return value:\r\n\r\nif exists() returns null, the node doesn't exist, otherwise the watcher will be triggered whenever the state changes. No need to call this manually.\r\n\r\n   2. \"the code doesn't check node existence\"\r\n\r\nWhich code?\r\n\r\nDataTree.statNode() does it indeed when checks for (n == null).", "Sorry, \"periodically \" may be misleading. May be some other cases, for example, there are threads continually towatcherone znode by calling exist(). And during this time,the znode is removed, canthese watchers be added toa pathwhichznode is not exist?\r\n\r\nI am using curator 2.1.0 and zk is3.4.5. The follow code is my test code. After I run this code ,i wish all the watchers at server should removed, but after all the znode are removed, some watchers stll exist.\r\n{code:java}\r\nfor (int i = 0; i < threadCount; i++) {\r\n    final InterProcessMutex ipm = new InterProcessMutex(this.client, \"/locks\");\r\n    final int seq = i;\r\n    es.submit(new Runnable() {\r\n\r\n        @Override\r\n        public void run() {\r\n            boolean acquire = false;\r\n            try {\r\n                //only one can acquire the locker\r\n                acquire = ipm.acquire(20, TimeUnit.SECONDS);\r\n                if (acquire) {\r\n                    LOG.info(\"i am thread No.:\" + seq);\r\n                    //waiting\r\n                    TimeUnit.SECONDS.sleep(30);\r\n                } else {\r\n                    LOG.info(\"acquired failed!, number:\" + seq);\r\n                }\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            } finally {\r\n                try {\r\n                    if (acquire) {\r\n                        LOG.info(\"i am released, number:\" + seq);\r\n                        ipm.release();\r\n                    }\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n}\r\n{code}\r\nThe following picture shows the watchers are not removed.\r\n\r\n!image-2018-03-28-22-51-33-751.png!\r\n\r\n\r\n\r\n\r\n\r\n", "here is the full code :https://github.com/Tassemble/zk-demo/blob/master/src/test/java/com/netease/edu/mooc/demo/zk/ZkApplicationTests.java", "Thanks for the clarification. I'll look into it in more detail.\r\n\r\nIn the meantime, would you please test with the latest stable version of Curator/ZooKeeper to make sure you're not reporting an issue which is fixed already?\r\n\r\nZK 3.4.12 is coming soon you might want to wait for it before doing any test.", "Hi Andor Molnar.\r\n\r\nI have tested these versions:\r\n\r\ncurator-recipes:2.1.0-incubating\r\n\r\nzookeeper:3.4.3, 3.4.5,3.4.11, and the results are in the same. There are still some watchers not removed.\r\n\r\n\r\n\r\nI also test these versions:\r\n\r\ncurator-recipes:4.0.1\r\n\r\nzookeeper:3.5.3-beta\r\n\r\nBut find the problem is resolved.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "I see curator 2.5.0 resolve the problem. The cause is that exists() will creates a watch regardless of whether the node exists or not, getData() will only create the watch if node exists.\r\n\r\nhttps://issues.apache.org/jira/browse/CURATOR-107\r\n\r\n", "Thanks [~tassemble]\r\n\r\nSo, CURATOR-107 is basically a workaround for an existing ZK issue, right?", "I can't repro your issue for some reason.\r\n\r\nTested 3.4.12 with the code snippet your provided, but a few seconds after the execution finished (lock released, proc exited), all watches are removed.\r\n\r\nWill try to compile your ZkApplicationTest.java to see if there's any difference.", "I've attached the console app that I was testing with.", "Sorry, ignore my previous comments. Now I see your point.\r\n\r\nWhen you talked about exists() method, you were actually referring to Curator's checkExists(), which eventually calls exists(), so it doesn't really matter. Later Curator fixed the issue by calling getData() instead which - as you said - doesn't add watch if the node doesn't exist, so Curator doesn't leak watches anymore.\r\n\r\nAll fine.\r\n\r\nBut that's not an issue with ZooKeeper. You should be able to setup a watch on non-existent node to get notified when it gets created. That's a feature, so I think you can close this Jira as not-an-issue.", "Thank you [~andor].\r\n\r\nYes, it is not a issue Of ZK, but a issue of curator before version 2.5.0.\r\n\r\n"]}, {"Issue key": "ZOOKEEPER-3013", "Request type": "Bug", "Datetime creation": "2018-03-27 21:21:36", "Datetime resolution": "2018-03-27 21:30:47", "Reporter login": "sanjay.pillai", "Reporter name": "Sanjay Pillai", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "Fix a minor typo in zookeeperProgrammers.html doc", "Comments": []}, {"Issue key": "ZOOKEEPER-3012", "Request type": "Improvement", "Datetime creation": "2018-03-27 15:19:26", "Datetime resolution": "2018-05-09 22:21:42", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Closed", "Description": "The following arrange methods uses hard coded values:\r\n{noformat}\r\nwhen(configMock.getDataDir()).thenReturn(\"/tmp/zookeeper\");\r\nwhen(configMock.getDataLogDir()).thenReturn(\"/tmp/zookeeperLog\");\r\n{noformat}\r\nWhich makes the test fail if the folders exist on the running machine.\r\n\r\nRandom test folders should be created and removed during cleanup.", "Comments": ["+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1666//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1666//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1666//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1667//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1667//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1667//console\n\nThis message is automatically generated.", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #16 (See [https://builds.apache.org/job/ZooKeeper-trunk/16/])\nZOOKEEPER-3012: Fix unit test: testDataDirAndDataLogDir should not use (phunt: rev 43f117ef5098573d7378956358c653475a4b993e)\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java\n"]}, {"Issue key": "ZOOKEEPER-3011", "Request type": "Bug", "Datetime creation": "2018-03-26 08:18:08", "Datetime resolution": null, "Reporter login": "xiaoheipangzi", "Reporter name": "lujie", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "Inspired by ZK-3006 ,I develop a simple static analysis tool to find other Potential NPE like ZK-3006.Due to that i am anewbie here, some of them i am not sure whether they will truly cause NPE, anyway I still list them in here(format:caller,callee):\r\n # StaticHostProvider#updateServerList,StaticHostProvider#getServerAtCurrentIndex\r\n # DataTree#getACL,ReferenceCountedACLCache#convertLong\r\n # ConnectionBean#toString,ConnectionBean#getSourceIP\r\n # Leader#propose,SerializeUtils#serializeRequest\r\n\r\nHopefully someone can confirm them and helpimprove this tool", "Comments": []}, {"Issue key": "ZOOKEEPER-3010", "Request type": "Bug", "Datetime creation": "2018-03-26 08:09:03", "Datetime resolution": null, "Reporter login": "xiaoheipangzi", "Reporter name": "lujie", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "Inspired by ZK-3006 ,I develop a simple static analysis tool to find other Potential NPE like ZK-3006. This bug is found by this tool ,and I have carefully studied it. But i am anewbie at here so i may be wrong, hope someonecouldconfirm it and help meimprove this tool.\r\nh2. Bugdescription:\r\n\r\ncalleeLearner#findLeader will return null and callee developer check it but just log:\r\n{code:java}\r\n// code placeholder\r\nif (leaderServer == null) {\r\n   LOG.warn(\"Couldn't find the leader with id = \" + current.getId());\r\n}\r\nreturn leaderServer;\r\n{code}\r\ncallerObserver#observeLeader and Follower#followLeader will directly use return value w/o null check:\r\n{code:java}\r\n//Follower#followLeader\r\nQuorumServer leaderServer = findLeader();\r\ntry {\r\n    connectToLeader(leaderServer.addr, leaderServer.hostname);\r\n    ..........\r\n}\r\n//Observer#observeLeader\r\nQuorumServer leaderServer = findLeader();\r\nLOG.info(\"Observing \" + leaderServer.addr);\r\ntry {\r\n    connectToLeader(leaderServer.addr, leaderServer.hostname);\r\n}{code}", "Comments": ["GitHub user brettKK opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/504\n\n    Potential NPE in Observer#observeLeader and Follower#followLeader\n\n    Bug description:\r\n    \r\n    callee Learner#findLeader will return null and callee developer check it but just log:\r\n    ```\r\n    // code placeholder\r\n    if (leaderServer == null) {\r\n       LOG.warn(\"Couldn't find the leader with id = \" + current.getId());\r\n    }\r\n    return leaderServer;\r\n    ```\r\n    \r\n    caller  Observer#observeLeader and Follower#followLeader will directly use return value w/o null check:\r\n    ```\r\n    //Follower#followLeader\r\n    QuorumServer leaderServer = findLeader();\r\n    try {\r\n        connectToLeader(leaderServer.addr, leaderServer.hostname);\r\n        ..........\r\n    }\r\n    //Observer#observeLeader\r\n    QuorumServer leaderServer = findLeader();\r\n    LOG.info(\"Observing \" + leaderServer.addr);\r\n    try {\r\n        connectToLeader(leaderServer.addr, leaderServer.hostname);\r\n    }\r\n    ```\r\n    \r\n    https://issues.apache.org/jira/browse/ZOOKEEPER-3010\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/brettKK/zookeeper ZOOK-3010\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/504.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #504\n    \n----\ncommit 7d8d5230c5a87faef94d038a258b159a322f3f5e\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-26T13:16:06Z\n\n    d\n\ncommit 700dfb7f48f774dd215e5bf19340a4b61eda3397\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-27T16:38:28Z\n\n    fix NPE bug\n\ncommit f71d8ce153d393dc3ab13c62d9d374e8a4aeb1cf\nAuthor: brettkk <1099446733@...>\nDate:   2018-04-22T07:19:21Z\n\n    zook3010\n\n----\n"]}, {"Issue key": "ZOOKEEPER-3009", "Request type": "Bug", "Datetime creation": "2018-03-26 07:46:57", "Datetime resolution": "2018-06-15 06:03:26", "Reporter login": "xiaoheipangzi", "Reporter name": "lujie", "Assignee login": "xiaoheipangzi", "Assignee name": "lujie", "Status": "Closed", "Description": "Inspired by ZK-3006 ,I develop a simple static analysis tool to find other Potential NPE like ZK-3006. This bug is found by this tool ,and I have carefully studied it. But i am anewbie at here so i may be wrong, hope someonecouldconfirm it and help meimprove this tool.\r\nh2. Bugdescription:\r\n\r\nclass NIOServerCnxn has three method :getSocketAddress,getRemoteSocketAddress can return null just like :\r\n{code:java}\r\n// code placeholder\r\nif (sock.isOpen() == false) {\r\n  return null;\r\n}\r\n{code}\r\nsome of their caller give null checker, some(total 3 list in below) are not.\r\n{code:java}\r\n// ServerCnxn#getConnectionInfo\r\nMap<String, Object> info = new LinkedHashMap<String, Object>();\r\ninfo.put(\"remote_socket_address\", getRemoteSocketAddress());// Map.put will throw NPE if parameter is null\r\n\r\n//IPAuthenticationProvider#handleAuthentication\r\ntring id = cnxn.getRemoteSocketAddress().getAddress().getHostAddress();\r\ncnxn.addAuthInfo(new Id(getScheme(), id));// finally call Set.add(it will throw NPE if parameter is null )\r\n\r\n//NIOServerCnxnFactory#addCnxn\r\nInetAddress addr = cnxn.getSocketAddress();\r\nSet<NIOServerCnxn> set = ipMap.get(addr);// Map.get will throw NPE if parameter is null{code}\r\nI think we should add null check in above three caller .\r\n\r\n", "Comments": ["Hi [~xiaoheipangzi]\r\n\r\nThanks for the nice contribution, I really appreciate your enthusiasm to develop such a handy tool.\r\n\r\nHowever, have you checked if it would be possible to similar check with our existing static analysis tool, findbugs?\r\n\r\nIn addition to that, there's an ongoing effort in [https://github.com/apache/zookeeper/pull/490]to integrate Google's error prone compiler for very similar purposes. I'm not sure if you've seen that, but I think it worth to consider bringing these existing tools up to speed before implementing something new from scratch.", "Hi [~andor]\r\n\r\nThinks for yourpertinent suggestions.\r\n\r\nI develop this tool fromscratch because:\r\n # I apply findbugs to check this bug , but findbugs leave it out(I assume because it does not perform interprocedural analysis in this check).\r\n # i am notvery familiar with findbugs andGoogle's error prone .\r\n # [WALA|https://github.com/wala/WALA](a famous static analysis tool developed by IBM) is my sidekicks, I have developed some static analysis tool based on it , so I chooseit again.\r\n\r\nI will try my best to check if findbugs own this rule(eg. callee return null but caller does not check), if not, i will try my best to add this rule.\r\n\r\nAnyway, I develop this tool based on my finding of zookeeper-3006 and_[Alibaba Java Coding Guidelines|https://github.com/alibaba/p3c]_whichclearly indicates that callee can return null but caller must check it.\r\n\r\nOn the other hand, massivenon-null checker also bother me, just as talk in[Avoiding != null statements|https://stackoverflow.com/questions/271526/avoiding-null-statements/271874#271874]. Now i am at the crossroads(+)\r\n\r\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1718//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1718//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1718//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1720//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1720//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1720//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1723//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1723//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1723//console\n\nThis message is automatically generated.", "Issue resolved by pull request 525\n[https://github.com/apache/zookeeper/pull/525]", "I committed your patch to 3.5 and master, and leave this issue resolved for now.\r\n\r\nThe same problem existing in 3.4, however there is a little more work required to properly structure the exception handling in 3.4 so it's on par with 3.5. [~xiaoheipangzi] if you are interested, you can send a pull request targeting branch-3.4 with your fix (and make sure the exception is caught and socket closed etc).", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #62 (See [https://builds.apache.org/job/ZooKeeper-trunk/62/])\nZOOKEEPER-3009: Potential NPE in NIOServerCnxnFactory (hanm: rev 13dd5d0db7a5c4fa926d1e44fc2047c24d5d012c)\n* (edit) src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1832//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1832//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1832//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1840//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1840//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1840//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1841//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1841//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1841//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1843//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1843//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1843//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1985//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1985//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1985//console\n\nThis message is automatically generated."]}, {"Issue key": "ZOOKEEPER-3008", "Request type": "Bug", "Datetime creation": "2018-03-26 07:42:11", "Datetime resolution": null, "Reporter login": "xiaoheipangzi", "Reporter name": "lujie", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "Inspired by ZK-3006 ,I develop a simple static analysis tool to find other Potential NPE like ZK-3006. This bug is found by this tool ,and I have carefully studied it. But i am anewbie at here so i may be wrong, hope someonecouldconfirm it and help meimprove this tool.\r\nh2. Bugdescription:\r\n\r\ncallee:SecurityUtils#createSaslClient will return null whileencounter exception\r\n{code:java}\r\n// code placeholder\r\ncatch (Exception e) {\r\n  LOG.error(\"Exception while trying to create SASL client\", e);\r\n  return null;\r\n}\r\n{code}\r\nbut its caller has no null check just like:\r\n{code:java}\r\n// code placeholder\r\nsc = SecurityUtils.createSaslClient();\r\nif (sc.hasInitialResponse()) {\r\n   responseToken = createSaslToken(new byte[0], sc, learnerLogin);\r\n}\r\n{code}\r\nI think we should add null check in caller while callee return null", "Comments": ["GitHub user brettKK opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/496\n\n    ZOOKEEPER-3008: Potential NPE in SaslQuorumAuthLearner#authenticate and SaslQuorumAuthServer#authenticate\n\n    @LJ1043041006 found a potential NPE in ZK\r\n    ----\r\n    callee :SecurityUtils#createSaslClient will return null while encounter exception\r\n    ```\r\n    // code placeholder\r\n    catch (Exception e) {\r\n      LOG.error(\"Exception while trying to create SASL client\", e);\r\n      return null;\r\n    }\r\n    ```\r\n    but its caller has no null check just like:\r\n    -----\r\n    and caller ReferenceCountedACLCache#deserialize  call it without null check\r\n    ```\r\n    // code placeholder\r\n    sc = SecurityUtils.createSaslClient();\r\n    if (sc.hasInitialResponse()) {\r\n       responseToken = createSaslToken(new byte[0], sc, learnerLogin);\r\n    }\r\n    ```\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/brettKK/zookeeper ZOOKEEPER-3008\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/496.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #496\n    \n----\ncommit 7d8d5230c5a87faef94d038a258b159a322f3f5e\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-26T13:16:06Z\n\n    d\n\ncommit 700dfb7f48f774dd215e5bf19340a4b61eda3397\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-27T16:38:28Z\n\n    fix NPE bug\n\ncommit 1ad4da8fc0269378fb2f43975954b5553b0c00e5\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T08:58:24Z\n\n    NPE inZOOKEEPER-3008\n\ncommit 4458bb32d5813272e0bf0d34364b082e51cad3ed\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:01:10Z\n\n    del unuse\n\ncommit 7fad1997be2a0401582ab315d60943475ebe1ef1\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:02:32Z\n\n    keep up with master\n\ncommit 765180fd82a554a2da1c7324843bfe99b8d0a4ed\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:04:50Z\n\n    add NPE place\n\n----\n", "Github user LJ1043041006 commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/496#discussion_r177685103\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java ---\n    @@ -94,7 +94,7 @@ public void authenticate(Socket sock, String hostName) throws IOException {\n                         principalConfig,\n                         QuorumAuth.QUORUM_SERVER_PROTOCOL_NAME,\n                         QuorumAuth.QUORUM_SERVER_SASL_DIGEST, LOG, \"QuorumLearner\");\n    -\n    +            // may happen NPE at here\n                 if (sc.hasInitialResponse()) {\n                     responseToken = createSaslToken(new byte[0], sc, learnerLogin);\n    --- End diff --\n    \n    just add sc!=null is ok?\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/496#discussion_r177697912\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java ---\n    @@ -134,6 +138,8 @@ public void authenticate(Socket sock, String hostName) throws IOException {\n     \n                 // Validate status code at the end of authentication exchange.\n                 checkAuthStatus(sock, qpStatus);\n    +        } catch (RuntimeException e) {\n    --- End diff --\n    \n    @brettKK What's the point of swallowing it here?\n", "Github user brettKK closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/496\n", "GitHub user brettKK reopened a pull request:\n\n    https://github.com/apache/zookeeper/pull/496\n\n    ZOOKEEPER-3008: Potential NPE in SaslQuorumAuthLearner#authenticate and SaslQuorumAuthServer#authenticate\n\n    @LJ1043041006 found a potential NPE in ZK\r\n    ----\r\n    callee :SecurityUtils#createSaslClient will return null while encounter exception\r\n    ```\r\n    // code placeholder\r\n    catch (Exception e) {\r\n      LOG.error(\"Exception while trying to create SASL client\", e);\r\n      return null;\r\n    }\r\n    ```\r\n    but its caller has no null check just like:\r\n    -----\r\n    and caller SaslQuorumAuthLearner#authenticate  call it without null check\r\n    ```\r\n    // code placeholder\r\n    sc = SecurityUtils.createSaslClient();\r\n    if (sc.hasInitialResponse()) {\r\n       responseToken = createSaslToken(new byte[0], sc, learnerLogin);\r\n    }\r\n    ```\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/brettKK/zookeeper ZOOKEEPER-3008\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/496.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #496\n    \n----\ncommit 7d8d5230c5a87faef94d038a258b159a322f3f5e\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-26T13:16:06Z\n\n    d\n\ncommit 700dfb7f48f774dd215e5bf19340a4b61eda3397\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-27T16:38:28Z\n\n    fix NPE bug\n\ncommit 1ad4da8fc0269378fb2f43975954b5553b0c00e5\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T08:58:24Z\n\n    NPE inZOOKEEPER-3008\n\ncommit 4458bb32d5813272e0bf0d34364b082e51cad3ed\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:01:10Z\n\n    del unuse\n\ncommit 7fad1997be2a0401582ab315d60943475ebe1ef1\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:02:32Z\n\n    keep up with master\n\ncommit 765180fd82a554a2da1c7324843bfe99b8d0a4ed\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:04:50Z\n\n    add NPE place\n\ncommit cf611d1783525df308930bb4e3cb2a1cc397ca55\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:12:31Z\n\n    fix code\n\ncommit 5eec8762b985f31eeb5e607dfd078d197b5a9980\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:46:56Z\n\n    fix jenkins error\n\ncommit 925bfd2f279852c1898d0f493ccce4ea669d8f9c\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T11:25:19Z\n\n    del catch\n\ncommit c7879123134b7145ab102a862c11891cacca8298\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T14:11:28Z\n\n    fix code\n\n----\n", "Github user brettKK closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/496\n", "GitHub user brettKK reopened a pull request:\n\n    https://github.com/apache/zookeeper/pull/496\n\n    ZOOKEEPER-3008: Potential NPE in SaslQuorumAuthLearner#authenticate and SaslQuorumAuthServer#authenticate\n\n    @LJ1043041006 found a potential NPE in ZK\r\n    ----\r\n    callee :SecurityUtils#createSaslClient will return null while encounter exception\r\n    ```\r\n    // code placeholder\r\n    catch (Exception e) {\r\n      LOG.error(\"Exception while trying to create SASL client\", e);\r\n      return null;\r\n    }\r\n    ```\r\n    but its caller has no null check just like:\r\n    -----\r\n    and caller SaslQuorumAuthLearner#authenticate  call it without null check\r\n    ```\r\n    // code placeholder\r\n    sc = SecurityUtils.createSaslClient();\r\n    if (sc.hasInitialResponse()) {\r\n       responseToken = createSaslToken(new byte[0], sc, learnerLogin);\r\n    }\r\n    ```\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/brettKK/zookeeper ZOOKEEPER-3008\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/496.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #496\n    \n----\ncommit 7d8d5230c5a87faef94d038a258b159a322f3f5e\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-26T13:16:06Z\n\n    d\n\ncommit 700dfb7f48f774dd215e5bf19340a4b61eda3397\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-27T16:38:28Z\n\n    fix NPE bug\n\ncommit 1ad4da8fc0269378fb2f43975954b5553b0c00e5\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T08:58:24Z\n\n    NPE inZOOKEEPER-3008\n\ncommit 4458bb32d5813272e0bf0d34364b082e51cad3ed\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:01:10Z\n\n    del unuse\n\ncommit 7fad1997be2a0401582ab315d60943475ebe1ef1\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:02:32Z\n\n    keep up with master\n\ncommit 765180fd82a554a2da1c7324843bfe99b8d0a4ed\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:04:50Z\n\n    add NPE place\n\ncommit cf611d1783525df308930bb4e3cb2a1cc397ca55\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:12:31Z\n\n    fix code\n\ncommit 5eec8762b985f31eeb5e607dfd078d197b5a9980\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T09:46:56Z\n\n    fix jenkins error\n\ncommit 925bfd2f279852c1898d0f493ccce4ea669d8f9c\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T11:25:19Z\n\n    del catch\n\ncommit c7879123134b7145ab102a862c11891cacca8298\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-28T14:11:28Z\n\n    fix code\n\n----\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/496\n  \n    @brettKK you don't need to close/reopen the pull request to trigger a build. Just amend your latest commit and do a force push.\n", "Github user nkalmar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/496\n  \n    +1\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/496\n  \n    @brettKK do you still work on this patch?\n", "Github user lujiefsi commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/496\n  \n    Also ping @brettKK \n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1607//testReport/\nRelease audit warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1607//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1607//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1607//console\n\nThis message is automatically generated.", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/496#discussion_r184218439\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java ---\n    @@ -94,7 +94,10 @@ public void authenticate(Socket sock, String hostName) throws IOException {\n                         principalConfig,\n                         QuorumAuth.QUORUM_SERVER_PROTOCOL_NAME,\n                         QuorumAuth.QUORUM_SERVER_SASL_DIGEST, LOG, \"QuorumLearner\");\n    -\n    +            if (sc == null) {\n    --- End diff --\n    \n    Same feedback as #495 \r\n    \r\n    1) check the callers and see if it's handled properly. Likely it will be logged there as well. Verify/report.\r\n    2) No need to say exception in an exception. The text of LOG.error line seems like it would have been a good error string for the exception itself.\r\n    3) as previously noted, add a test.\n", "Github user lujiefsi commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/496#discussion_r184251756\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java ---\n    @@ -94,7 +94,10 @@ public void authenticate(Socket sock, String hostName) throws IOException {\n                         principalConfig,\n                         QuorumAuth.QUORUM_SERVER_PROTOCOL_NAME,\n                         QuorumAuth.QUORUM_SERVER_SASL_DIGEST, LOG, \"QuorumLearner\");\n    -\n    +            if (sc == null) {\n    --- End diff --\n    \n    For #1:\r\n    Follower#77,Observer#69,QuorumCnxManager#333 all have same patern:\r\n    `try { //root caller } catch (IOException e) {//handler code}`\r\n    #2 and #3, @brettKK .\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1641//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1641//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1641//console\n\nThis message is automatically generated.", "Github user lujiefsi commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/496#discussion_r184675859\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java ---\n    @@ -94,7 +94,10 @@ public void authenticate(Socket sock, String hostName) throws IOException {\n                         principalConfig,\n                         QuorumAuth.QUORUM_SERVER_PROTOCOL_NAME,\n                         QuorumAuth.QUORUM_SERVER_SASL_DIGEST, LOG, \"QuorumLearner\");\n    -\n    +            if (sc == null) {\n    --- End diff --\n    \n    Hum, it is hard for me to write a unit test for this bug, any suggestion? @brettKK @anmolnar @phunt @nkalmar @others\n", "Github user lujiefsi commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/496#discussion_r184676603\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java ---\n    @@ -94,7 +94,10 @@ public void authenticate(Socket sock, String hostName) throws IOException {\n                         principalConfig,\n                         QuorumAuth.QUORUM_SERVER_PROTOCOL_NAME,\n                         QuorumAuth.QUORUM_SERVER_SASL_DIGEST, LOG, \"QuorumLearner\");\n    -\n    +            if (sc == null) {\n    --- End diff --\n    \n    I will try unit test written by @brettKK ~~\n", "Github user brettKK commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/496\n  \n    I have some trouble to write the test. \r\n    Anyone else have any suggestions?\r\n    If not, I consider to close this PR.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1648//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1648//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1648//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/496\n  \n    @brettKK sorry, I was on holiday in the last couple of days.\r\n    I'll take a look at it tomorrow.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/496\n  \n    @brettKK I had some trouble with sorting out everything, but managed to write a unit test.\r\n    Not perfect, but could worth to consider adding it.\r\n    \r\n    [0001-ZOOKEEPER-3008.-Added-unit-test.txt](https://github.com/apache/zookeeper/files/1971970/0001-ZOOKEEPER-3008.-Added-unit-test.txt)\r\n    \r\n\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1660//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1660//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1660//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1771//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1771//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1771//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1772//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1772//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1772//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1773//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1773//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1773//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1774//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1774//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1774//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1779//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1779//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1779//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1780//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1780//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1780//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1783//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1783//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1783//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2043//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2043//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2043//console\n\nThis message is automatically generated."]}, {"Issue key": "ZOOKEEPER-3007", "Request type": "Bug", "Datetime creation": "2018-03-26 07:30:58", "Datetime resolution": "2018-04-26 22:24:44", "Reporter login": "xiaoheipangzi", "Reporter name": "lujie", "Assignee login": "xiaoheipangzi", "Assignee name": "lujie", "Status": "Closed", "Description": "Inspired by ZK-3006 ,I develop a simple static analysis tool to find other Potential NPE like ZK-3006. This bug is found by this tool ,and I have carefully studied it. But i am anewbie at here so i may be wrong, hope someone could confirm it and help meimprove this tool.\r\nh3. Bugdescribtion:\r\n\r\ncallee BinaryInputArchive#startVector will return null:\r\n{code:java}\r\n// code placeholder\r\npublic Index startVector(String tag) throws IOException {\r\n    int len = readInt(tag);\r\n     if (len == -1) {\r\n     return null;\r\n}\r\n{code}\r\nand callerReferenceCountedACLCache#deserialize call it without null check\r\n{code:java}\r\n// code placeholder\r\nIndex j = ia.startVector(\"acls\");\r\nwhile (!j.done()) {\r\n  ACL acl = new ACL();\r\n  acl.deserialize(ia, \"acl\");\r\n}{code}\r\nbut all the other 14 caller ofBinaryInputArchive#startVector performs null checker like:\r\n{code:java}\r\n// code placeholder\r\nIndex vidx1 = a_.startVector(\"acl\");\r\n  if (vidx1!= null)\r\n     for (; !vidx1.done(); vidx1.incr()){\r\n     .....\r\n    }\r\n   }\r\n}\r\n{code}\r\nso i think we also need add null check in callerReferenceCountedACLCache#deserialize just like other 14 caller\r\n\r\n", "Comments": ["GitHub user brettKK opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/495\n\n    ZOOKEEPER-3007:Potential NPE in ReferenceCountedACLCache#deserialize\n\n    @LJ1043041006 found a potential NPE in ZK\r\n    ----\r\n    callee BinaryInputArchive#startVector will return null:\r\n    ```\r\n    // code placeholder\r\n    public Index startVector(String tag) throws IOException {\r\n        int len = readInt(tag);\r\n         if (len == -1) {\r\n         return null;\r\n    }\r\n    ```\r\n    \r\n    -----\r\n    and caller ReferenceCountedACLCache#deserialize  call it without null check\r\n    ```\r\n    // code placeholder\r\n    Index j = ia.startVector(\"acls\");\r\n    while (!j.done()) {\r\n      ACL acl = new ACL();\r\n      acl.deserialize(ia, \"acl\");\r\n    }\r\n    ```\r\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/brettKK/zookeeper master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/495.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #495\n    \n----\n\n----\n", "Github user LJ1043041006 commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/495#discussion_r177089527\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java ---\n    @@ -109,16 +109,18 @@ public synchronized void deserialize(InputArchive ia) throws IOException {\n                 }\n                 List<ACL> aclList = new ArrayList<ACL>();\n                 Index j = ia.startVector(\"acls\");\n    -            while (!j.done()) {\n    -                ACL acl = new ACL();\n    -                acl.deserialize(ia, \"acl\");\n    -                aclList.add(acl);\n    -                j.incr();\n    +            if (j != null) {\n    +                while (!j.done()) {\n    +                    ACL acl = new ACL();\n    +                    acl.deserialize(ia, \"acl\");\n    +                    aclList.add(acl);\n    +                    j.incr();\n    +                }\n    +                longKeyMap.put(val, aclList);\n    --- End diff --\n    \n    should we move 199~122 out of if to avoid endless loop?\n", "Github user maoling commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/495#discussion_r177294282\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java ---\n    @@ -109,16 +109,18 @@ public synchronized void deserialize(InputArchive ia) throws IOException {\n                 }\n                 List<ACL> aclList = new ArrayList<ACL>();\n                 Index j = ia.startVector(\"acls\");\n    -            while (!j.done()) {\n    -                ACL acl = new ACL();\n    -                acl.deserialize(ia, \"acl\");\n    -                aclList.add(acl);\n    -                j.incr();\n    +            if (j != null) {\n    --- End diff --\n    \n    - can we have a more elegant way to process this NPE ?\r\n    - BTW. incorrect commit message.   `git commit --amend -m \"your new message\"` to modify it\n", "Github user LJ1043041006 commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/495#discussion_r177296763\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java ---\n    @@ -109,16 +109,18 @@ public synchronized void deserialize(InputArchive ia) throws IOException {\n                 }\n                 List<ACL> aclList = new ArrayList<ACL>();\n                 Index j = ia.startVector(\"acls\");\n    -            while (!j.done()) {\n    -                ACL acl = new ACL();\n    -                acl.deserialize(ia, \"acl\");\n    -                aclList.add(acl);\n    -                j.incr();\n    +            if (j != null) {\n    +                while (!j.done()) {\n    +                    ACL acl = new ACL();\n    +                    acl.deserialize(ia, \"acl\");\n    +                    aclList.add(acl);\n    +                    j.incr();\n    +                }\n    +                longKeyMap.put(val, aclList);\n    --- End diff --\n    \n    Can we move code at line 119~123 out of null-checker, because it may cause endless loop due to i > 0 may always hold\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/495#discussion_r177343134\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java ---\n    @@ -109,16 +109,18 @@ public synchronized void deserialize(InputArchive ia) throws IOException {\n                 }\n                 List<ACL> aclList = new ArrayList<ACL>();\n                 Index j = ia.startVector(\"acls\");\n    -            while (!j.done()) {\n    -                ACL acl = new ACL();\n    -                acl.deserialize(ia, \"acl\");\n    -                aclList.add(acl);\n    -                j.incr();\n    +            if (j != null) {\n    +                while (!j.done()) {\n    +                    ACL acl = new ACL();\n    +                    acl.deserialize(ia, \"acl\");\n    +                    aclList.add(acl);\n    +                    j.incr();\n    +                }\n    +                longKeyMap.put(val, aclList);\n    --- End diff --\n    \n    +1 \r\n    Only the inner while-loop uses the `j` variable, so nothing else should be inside the check.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/495\n  \n    @brettKK Thanks for the fix. It'd be nice to add at least a unit test to cover the issue.\r\n    \r\n    I think adding the check alone is not enough here. Looking at the `serialize()` method, if `map` field is greater than 0, both `long` and `acls` fields must also be present.\r\n    In other words, in `deserialize()` if (i>0) then both `long` and `acls` are mandatory. As a consequence  the else branch of the check should also be implemented and an exception should be thrown indicating that the archive cannot be deserialise, because the format is incorrect.\r\n    \r\n    Does it make sense?\n", "Github user LJ1043041006 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/495\n  \n    @brettKK \r\n    so if we change code like this :\r\n    `Index j = ia.startVector(\"acls\");\r\n    if (j == null){\r\n       throw new IOException(\"errmessage\");\r\n    }\r\n    while (!j.done)\r\n    ..........\r\n    `\r\n     @maoling this change can be elegant to check null?\r\n    @anmolnar this change can be correct?\n", "Github user LJ1043041006 commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/495#discussion_r177351128\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java ---\n    @@ -109,16 +109,18 @@ public synchronized void deserialize(InputArchive ia) throws IOException {\n                 }\n                 List<ACL> aclList = new ArrayList<ACL>();\n                 Index j = ia.startVector(\"acls\");\n    -            while (!j.done()) {\n    -                ACL acl = new ACL();\n    -                acl.deserialize(ia, \"acl\");\n    -                aclList.add(acl);\n    -                j.incr();\n    +            if (j != null) {\n    --- End diff --\n    \n    just as @anmolnar  review, we should throw exception if j == null, so add code just like \r\n    \r\n    if (j == null){\r\n        throw Exception(error_message);\r\n    }\r\n    @maoling can this change be elegant? \r\n\n", "Github user brettKK commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/495\n  \n    yeah\uff0c I will fix it @anmolnar @maoling @LJ1043041006 \n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/495\n  \n    @LJ1043041006 Looking good.\r\n    RuntimeException might suit better, but I'm not sure.\n", "Github user lujiefsi commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/495\n  \n    Can we close it???\n", "Github user brettKK closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/495\n", "GitHub user brettKK reopened a pull request:\n\n    https://github.com/apache/zookeeper/pull/495\n\n    ZOOKEEPER-3007:Potential NPE in ReferenceCountedACLCache#deserialize\n\n    @LJ1043041006 found a potential NPE in ZK\r\n    ----\r\n    callee BinaryInputArchive#startVector will return null:\r\n    ```\r\n    // code placeholder\r\n    public Index startVector(String tag) throws IOException {\r\n        int len = readInt(tag);\r\n         if (len == -1) {\r\n         return null;\r\n    }\r\n    ```\r\n    \r\n    -----\r\n    and caller ReferenceCountedACLCache#deserialize  call it without null check\r\n    ```\r\n    // code placeholder\r\n    Index j = ia.startVector(\"acls\");\r\n    while (!j.done()) {\r\n      ACL acl = new ACL();\r\n      acl.deserialize(ia, \"acl\");\r\n    }\r\n    ```\r\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/brettKK/zookeeper master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/495.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #495\n    \n----\ncommit 7d8d5230c5a87faef94d038a258b159a322f3f5e\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-26T13:16:06Z\n\n    d\n\ncommit 700dfb7f48f774dd215e5bf19340a4b61eda3397\nAuthor: gongleigl.gong <gongleigl.gong@...>\nDate:   2018-03-27T16:38:28Z\n\n    fix NPE bug\n\n----\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1601//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1601//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1601//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1612//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1612//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1612//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1614//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1614//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1614//console\n\nThis message is automatically generated.", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/495#discussion_r183918644\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java ---\n    @@ -109,6 +109,10 @@ public synchronized void deserialize(InputArchive ia) throws IOException {\n                 }\n                 List<ACL> aclList = new ArrayList<ACL>();\n                 Index j = ia.startVector(\"acls\");\n    +            if (j == null) {\n    +                LOG.error(\"ERROR: incorrent format of InputArchive\" + ia);\n    --- End diff --\n    \n    You don't need an ERROR in the text here or on the next line. It's already LOG'd as an error. Same for the next line - it's a RTE.\r\n    \r\n    Also you need a space  \"... of InputArchive\" -> \".... of InputArchive \" (notice space at the end. Otw the text of ia is just appended w/o the space. Also notice that ia doesn't have a toString, so I'm not sure how helpful that is.... it's fine to leave I guess.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/495\n  \n    I ran out of time to answer this question, perhaps you can tell me - what happens when the RTE is thrown? Is the caller handling it appropriately/reasonably, or are we just pushing the problem somewhere else?\n", "Github user lujiefsi commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/495\n  \n    @phunt :\r\n    I think the reason that @brettKK  use RuntimeException to replace NullPointerException is :(1)NullPointerException  is subclass of RuntimeException (2) give the semantic reason instead  ugly NPE.(3)@brettkk may dost not think over what happens when the RTE is thrown. He/She may just do it due to (2) .\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/495\n  \n    Understood on throwing the exception (1&2). I'm interested in 3 - when it is thrown is it handled correctly or some unexpected sideeffect. If we're going to try to fix we should really ensure we fix it.\n", "Github user lujiefsi commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/495\n  \n    @phunt \r\n    I got it. I have found all \"deserialize\" root caller and callsite postion:\r\n    (1)QuorumPeer#1208,#1154,#1152,#1182,#1154,#1194,#1195: their code have same format:\r\n    ` try {\r\n                       //root caller\r\n                        } catch (Exception e) {\r\n                            LOG.warn(\"Unexpected exception\",e);\r\n           }\r\n    } `   \r\n    So i think the RuntimeException in the patch  is ok in here\r\n    (2)QuorumPeer#860,852:  there is another \"throw new RuntimeException\" at #520. So i think the RuntimeException in the patch  is ok in here\r\n    (3)ZooKeeperServerMain#64  SnapshotFormatter#53 : these two caller are main function, when run into RuntimeException , it will exit, I am not sure the \"RuntimeException\" in the patch  whether is ok in here.\r\n\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1628//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1628//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1628//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/495\n  \n    Ok, that (call site analysis) makes sense. \r\n    \r\n    I'm afraid I was unclear, when I said\r\n    \r\n    \"You don't need an ERROR in the text here or on the next line.\"\r\n    \r\n    What I mean is that the text string should not start with \"ERROR\" given the error string is in an exception and the logging (from one of the callers) will determine the severity to assign. As such my recommendation would be something like:\r\n    \r\n    > throw new RuntimeException(\"Incorrect format of InputArchive when deserialize DataTree - missing acls\");\r\n    \r\n    Notice: 1) the removal of \"ERROR\" and the addition of \"missing acls\" in order to give the person diagnosing the problem a bit more insight (otw they have to find the source line in order to get more insight into what they formatting issue might be).\r\n    \r\n    If you clear this up (this one line) I think we should be good for commit.\r\n    \r\n    Thanks!\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1632//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1632//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1632//console\n\nThis message is automatically generated.", "Github user lujiefsi commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/495\n  \n    Seems that unit test error is not caused by this patch?\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/495\n", "Issue resolved by pull request 495\n[https://github.com/apache/zookeeper/pull/495]", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/495\n  \n    +1. Yes, it looks like those failures are unrelated (tests passed for me). Thanks @lujiefsi and @brettKK \n", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3821 (See [https://builds.apache.org/job/ZooKeeper-trunk/3821/])\nZOOKEEPER-3007: Potential NPE in ReferenceCountedACLCache#deserialize (phunt: rev 2c0168ad37b529447ac8cb1bf866d014f8a97981)\n* (edit) src/java/test/org/apache/zookeeper/server/ReferenceCountedACLCacheTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/ReferenceCountedACLCache.java\n"]}, {"Issue key": "ZOOKEEPER-3006", "Request type": "Bug", "Datetime creation": "2018-03-24 08:16:21", "Datetime resolution": "2018-04-06 04:04:40", "Reporter login": "xiaoheipangzi", "Reporter name": "lujie", "Assignee login": "eribeiro", "Assignee name": "Edward Ribeiro", "Status": "Resolved", "Description": "I have found apotential NPE inZKDatabase#calculateTxnLogSizeLimit:\r\n\r\n\r\n{code:java}\r\n//ZKDatabase\r\npublic long calculateTxnLogSizeLimit() {\r\nlong snapSize = 0;\r\ntry {\r\nsnapSize = snapLog.findMostRecentSnapshot().length();\r\n} catch (IOException e) {\r\nLOG.error(\"Unable to get size of most recent snapshot\");\r\n}\r\nreturn (long) (snapSize * snapshotSizeFactor);\r\n}\r\n{code}\r\ninFileTxnSnapLog#findMostRecentSnapshot(), it will return the result of FileSnap#findMostRecentSnapshot:\r\n{code:java}\r\n// called by FileTxnSnapLog#findMostRecentSnapshot()\r\npublic File findMostRecentSnapshot() throws IOException {\r\nList<File> files = findNValidSnapshots(1);\r\nif (files.size() == 0) {\r\nreturn null;\r\n}\r\nreturn files.get(0);\r\n}\r\n{code}\r\nSo it will return null when the files sizes is 0, but ZKDatabase#calculateTxnLogSizeLimit has no null checker\r\n\r\n\r\n\r\n", "Comments": ["GitHub user edwardoliveira opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/493\n\n    ZOOKEEPER-3006: Potential NPE in ZKDatabase#calculateTxnLogSizeLimit\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/eribeiro/zookeeper zk-3006-potential-npe\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/493.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #493\n    \n----\ncommit c0a9763c5a0fc63d2cad99ea9d219c08fd454d2e\nAuthor: Edward Ribeiro <edward.ribeiro@...>\nDate:   2018-03-24T15:35:27Z\n\n    ZOOKEEPER-3006: Potential NPE in ZKDatabase#calculateTxnLogSizeLimit\n\n----\n", "Github user LJ1043041006 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/493\n  \n    +1 lgtm,  but \"All checks have failed\" makes me wonder and i think the error is not cause by this patch, am i right.\n", "Github user eribeiro commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/493\n  \n    @anmoldar thanks for the feedback! Gonna update the description and add a test case asap. Btw, I am not the one who found this potential npe, but I am glad to help. :) Last but not least, I opened the PR for master, but should we address this issue on previous branches too? \r\n    \r\n    @LJ1043041006 yup, I don't think the failed tests are related to this patch at all. Gonna take a closer look really soon. ZK has some flaky tests, but looks like there was an exception that prevented any test from running.\n", "Github user LJ1043041006 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/493\n  \n    @eribeiro , I found this  potential npe  and open issue [zk-3006](https://issues.apache.org/jira/browse/ZOOKEEPER-3006), but i am not  very familiar with zookeeper code, so could you please add a unit test? thinks!\n", "Github user maoling commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/493\n  \n    +1,LGTM\n", "Github user edwardoliveira commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/493\n  \n    Hey, @LJ1043041006, I have just added a unit test. Cheers!\n", "Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/493\n  \n    @edwardoliveira : could you please share your email so I can put it in commit message when merge this? \r\n    Also, could you please create a JIRA account if you don't have one on https://issues.apache.org/jira/projects/ZOOKEEPER so I can assign ZOOKEEPER-3006 to you? This is to make sure we distribute commit credits to contributors.\n", "Github user eribeiro commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/493\n  \n    Hi @hanm,\r\n    \r\n    Excuse me for the mess up and subsequent confusion. @edwardoliveira is me, @eribeiro (on GH and JIRA), but I inadvertedly opened the PR using my second GH account. :(\r\n    \r\n    My e-mail is edward.ribeiro@gmail.com\r\n    \r\n    If you prefer, I may close this PR and open a new PR from my main account. The referenced branch comes from the right account, already.\r\n    \r\n    I have already assigned the issue to myself, btw. \r\n    \r\n    Cheers!\n", "Github user LJ1043041006 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/493\n  \n    Hi guys, **one more thing**\r\n    I have developed a very simple tool to find Potential NPE in Zookeeper(based on  [WALA](https://github.com/wala/WALA)), I list the result in ZK-3007~3010\r\n    , so anyone can help me confirm them and  improve this tool (hopefully it can be open source  ) \n", "Issue resolved by pull request 493\n[https://github.com/apache/zookeeper/pull/493]", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/493\n", "Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/493\n  \n    @edwardoliveira that's fine, I did not know that's you :-). Patch committed.\n", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3790 (See [https://builds.apache.org/job/ZooKeeper-trunk/3790/])\nZOOKEEPER-3006: Potential NPE in ZKDatabase#calculateTxnLogSizeLimit (hanm: rev fbd21329d32f185d198344f2d394175c92a82f9e)\n* (edit) src/java/main/org/apache/zookeeper/server/ZKDatabase.java\n* (edit) src/java/test/org/apache/zookeeper/test/ZkDatabaseCorruptionTest.java\n"]}, {"Issue key": "ZOOKEEPER-3005", "Request type": "Improvement", "Datetime creation": "2018-03-22 23:23:15", "Datetime resolution": null, "Reporter login": "mjarosch", "Reporter name": "Mike J", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "Update thezkEnv.cmd script to not override ZOOCFGDIR, ZOO_LOG_DIR,orZOO_LOG4J_PROPif they have already been set. This would match the functionality that currently exists in zkEnv.sh.\r\n\r\nAlso, add the ability to set the config file name using theZOOCFG environment variable. This would match functionality that currently exists in zkEnv.sh.", "Comments": []}, {"Issue key": "ZOOKEEPER-3004", "Request type": "Bug", "Datetime creation": "2018-03-22 19:15:27", "Datetime resolution": null, "Reporter login": "abrahamfine", "Reporter name": "Abraham Fine", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "3.4 currently supports Java 6. While working on the release of 3.4.12 I noticed a minor issue while using java 6 to build zookeeper (see the linked issue). We should have a jenkins job that continuously tests 3.4 and pull requests targeting 3.4 against this older jdk.", "Comments": []}, {"Issue key": "ZOOKEEPER-3003", "Request type": "Bug", "Datetime creation": "2018-03-22 19:12:10", "Datetime resolution": null, "Reporter login": "abrahamfine", "Reporter name": "Abraham Fine", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "While working on the release of 3.4.12 and testing under jdk 6 I noticed that our javadoc task currently fails due to the yetus api compatability annotations we have. The yetus annotations target jdk 7.\r\n\r\nWhile I don't think this is too much of a problem since it should not impact ZooKeeper operation under jdk 6 we should definitely avoid silent failures.", "Comments": []}, {"Issue key": "ZOOKEEPER-3002", "Request type": "Task", "Datetime creation": "2018-03-22 17:55:11", "Datetime resolution": "2018-04-17 04:57:49", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "nkalmar", "Assignee name": "Norbert Kalm\u00e1r", "Status": "Resolved", "Description": "We upgrade the minimum required Java version to compile and run ZooKeeper on 3.5 and master branches to Java 1.8.", "Comments": ["GitHub user nkalmar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/502\n\n    ZOOKEEPER-3002 upgrade to jdk 8\n\n    Set minimum requirement to java 1.8\r\n    The code successfully compiled with 8.0.161-oracle and 8.0.163-zulu.\r\n    \r\n    Checking the generated class file it reports 1.8 as version:\r\n    javap -verbose build/classes/org/apache/zookeeper/server/ServerStats.class | grep version\r\n    minor version: 0\r\n    major version: 52\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/nkalmar/zookeeper ZOOKEEPER-3002_java1.8\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/502.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #502\n    \n----\ncommit 9878706c1157ed7442a7f2a4d623b4c68dbff601\nAuthor: Norbert Kalmar <nkalmar@...>\nDate:   2018-04-14T15:01:27Z\n\n    ZOOKEEPER-3002 upgrade to jdk 8\n\n----\n", "Issue resolved by pull request 502\n[https://github.com/apache/zookeeper/pull/502]", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/502\n"]}, {"Issue key": "ZOOKEEPER-3001", "Request type": "Bug", "Datetime creation": "2018-03-18 14:13:23", "Datetime resolution": "2018-03-26 01:49:42", "Reporter login": "sel-fish", "Reporter name": "selfish finch", "Assignee login": "sel-fish", "Assignee name": "selfish finch", "Status": "Resolved", "Description": "The log message when trying to delete a container node is not proper, missing\r\n*_String.format_*", "Comments": ["GitHub user sel-fish opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/491\n\n    ZOOKEEPER-3001: Incorrect log message when try to delete container node\n\n    Missing `String.format` when print the log.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/sel-fish/zookeeper ZOOKEEPER-3001\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/491.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #491\n    \n----\ncommit 1f90b95f2e8ad73d58ac804aeec5cfdc13aeaf86\nAuthor: \u6f20\u51b0 <mobing.fql@...>\nDate:   2018-03-18T14:17:17Z\n\n    ZOOKEEPER-3001: Incorrect log message when try to delete container node\n\n----\n", "Github user sel-fish closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/491\n", "GitHub user sel-fish opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/492\n\n    ZOOKEEPER-3001: Incorrect log message when try to delete container node\n\n    Missing `String.format`.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/sel-fish/zookeeper ZOOKEEPER-3001\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/492.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #492\n    \n----\ncommit 814b3b2eed398671b7d124509b4a2b5a87e3680d\nAuthor: sel-fish <fqlgy@...>\nDate:   2018-03-18T14:20:42Z\n\n    ZOOKEEPER-3001: Incorrect log message when try to delete container node\n\n----\n", "Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/492#discussion_r175293565\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ContainerManager.java ---\n    @@ -116,8 +116,8 @@ public void checkContainers()\n                 Request request = new Request(null, 0, 0,\n                         ZooDefs.OpCode.deleteContainer, path, null);\n                 try {\n    -                LOG.info(\"Attempting to delete candidate container: %s\",\n    -                        containerPath);\n    +                LOG.info(String.format(\"Attempting to delete candidate container: %s\",\n    --- End diff --\n    \n    As this a log message you could use \r\n    `LOG.info(\"Attempting to delete candidate container: {}\", container Path);`\n", "Github user sel-fish commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/492#discussion_r175313093\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ContainerManager.java ---\n    @@ -116,8 +116,8 @@ public void checkContainers()\n                 Request request = new Request(null, 0, 0,\n                         ZooDefs.OpCode.deleteContainer, path, null);\n                 try {\n    -                LOG.info(\"Attempting to delete candidate container: %s\",\n    -                        containerPath);\n    +                LOG.info(String.format(\"Attempting to delete candidate container: %s\",\n    --- End diff --\n    \n    to use the same logging style as the other code.\r\n    \r\n                    LOG.error(String.format(\"Could not delete container: %s\" ,\r\n                            containerPath), e);\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/492#discussion_r175386273\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ContainerManager.java ---\n    @@ -116,8 +116,8 @@ public void checkContainers()\n                 Request request = new Request(null, 0, 0,\n                         ZooDefs.OpCode.deleteContainer, path, null);\n                 try {\n    -                LOG.info(\"Attempting to delete candidate container: %s\",\n    -                        containerPath);\n    +                LOG.info(String.format(\"Attempting to delete candidate container: %s\",\n    --- End diff --\n    \n    +1 for @eribeiro \r\n    We already use that form at various places in the codebase, so feel free to use the better one. Existing String.formats should be refactored in the long term, but that probably will happen in small refactorings like this.\n", "Github user eribeiro commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/492\n  \n    +1 lgtm\n", "Issue resolved by pull request 492\n[https://github.com/apache/zookeeper/pull/492]", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/492\n", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3777 (See [https://builds.apache.org/job/ZooKeeper-trunk/3777/])\nZOOKEEPER-3001: Incorrect log message when try to delete container node (hanm: rev 8cfca3add9c7fd705f9114daf4adaac9fc90f040)\n* (edit) src/java/main/org/apache/zookeeper/server/ContainerManager.java\n"]}, {"Issue key": "ZOOKEEPER-3000", "Request type": "Improvement", "Datetime creation": "2018-03-17 17:21:30", "Datetime resolution": null, "Reporter login": "leventov", "Reporter name": "Roman Leventov", "Assignee login": "leventov", "Assignee name": "Roman Leventov", "Status": "Open", "Description": "See http://errorprone.info/", "Comments": ["GitHub user leventov opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/490\n\n    ZOOKEEPER-3000: Use error-prone compiler\n\n    Fix some bugs in tests.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/leventov/zookeeper error-prone\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/490.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #490\n    \n----\ncommit d03fcb3bbe9bde8aaab2603dd8face4b5c0b256f\nAuthor: leventov <leventov@...>\nDate:   2018-03-17T17:22:42Z\n\n    ZOOKEEPER-3000: Use error-prone compiler\n\n----\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    Also would you please elaborate a little bit more on reasoning in Jira's description for the records?\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r175393694\n  \n    --- Diff: build.xml ---\n    @@ -475,23 +484,36 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n                         pattern=\"${ivy.lib}/[artifact]-[revision].[ext]\"/>\n           <ivy:cachepath pathid=\"mvn-ant-task-classpath\" conf=\"mvn-ant-task\"/>\n         </target>\n    -    <target name=\"compile\" depends=\"ivy-retrieve,clover,build-generated\">\n    -        <javac srcdir=\"${java.src.dir}\" destdir=\"${build.classes}\" includeantruntime=\"false\"\n    +    <target name=\"compile\" depends=\"ivy-retrieve,clover,build-generated,ivy-retrieve-error_prone\">\n    --- End diff --\n    \n    Could we add the error prone compiler as an optional tool, so that similarly to e.g. code coverage tools, the build could be run with or without the tool?\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r175393897\n  \n    --- Diff: build.xml ---\n    @@ -475,23 +484,36 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n                         pattern=\"${ivy.lib}/[artifact]-[revision].[ext]\"/>\n           <ivy:cachepath pathid=\"mvn-ant-task-classpath\" conf=\"mvn-ant-task\"/>\n         </target>\n    -    <target name=\"compile\" depends=\"ivy-retrieve,clover,build-generated\">\n    -        <javac srcdir=\"${java.src.dir}\" destdir=\"${build.classes}\" includeantruntime=\"false\"\n    +    <target name=\"compile\" depends=\"ivy-retrieve,clover,build-generated,ivy-retrieve-error_prone\">\n    +        <javac compiler=\"com.google.errorprone.ErrorProneAntCompilerAdapter\"\n    +               srcdir=\"${java.src.dir}\" destdir=\"${build.classes}\" includeantruntime=\"false\"\n                    target=\"${javac.target}\" source=\"${javac.source}\" debug=\"on\" encoding=\"${build.encoding}\">\n    +            <compilerclasspath>\n    +              <pathelement location=\"${ivy.error_prone.lib}/error_prone_ant-${error_prone.version}.jar\"/>\n    +            </compilerclasspath>\n                 <classpath refid=\"java.classpath\"/>\n                 <compilerarg value=\"-Xlint:all\"/>\n                 <compilerarg value=\"-Xlint:-path\"/>\n    +\n             </javac>\n         </target>\n     \n    -    <target name=\"compile-test\" depends=\"ivy-retrieve-test,compile\">\n    +    <target name=\"compile-test\" depends=\"ivy-retrieve-test,compile,ivy-retrieve-error_prone\">\n    --- End diff --\n    \n    Could we add the error prone compiler as an optional tool, so that similarly to e.g. code coverage tools, the build could be run with or without the tool?\n", "Github user mfenes commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    Hi @leventov, in the commits, there are test code changes, too. Are these related to the error prone compiler change, or these are just other bugs which you've fixed?\n", "Github user leventov commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    > However we already integrated findbugs tool in our build process, don't you think it would be better to replace that instead of using two similar tools side-by-side?\r\n    \r\n    @anmolnar no, static analysis tools complement each other. Bugs found by one tool are not found by another, and vice versa. So it's good to run them all.\r\n    \r\n    > Additionally I think it would be better for reviewers to split this PR into 1) integration of new static analyis tool, 2) test fixes.\r\n    \r\n    Test problems are catched by the tool. If the tool is integrated first, the compilation will fail briefly. So I don't see the point of the separation. The whole PR is not that big, after all.\r\n    \r\n    \r\n    > Could we add the error prone compiler as an optional tool, so that similarly to e.g. code coverage tools, the build could be run with or without the tool?\r\n    \r\n    @mfenes I'm not proficient in Ant, I managed to run the tool the simplest way possible that I could figure out. If you could implement this so that the tool is optional, you could do this. I don't know how to do this.\r\n    \r\n    > in the commits, there are test code changes, too. Are these related to the error prone compiler change, or these are just other bugs which you've fixed?\r\n    \r\n    All changes in this PR are imposed by error-prone only.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r175416374\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/AsyncHammerTest.java ---\n    @@ -61,6 +61,7 @@ protected void restart() throws Exception {\n             qb.startServers();\n         }\n     \n    +    @SuppressWarnings(\"JUnit4TearDownNotRun\")\n    --- End diff --\n    \n    Why not annotate with After instead?\r\n    Does it break any test?\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r175416977\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/ZooKeeperTestClient.java ---\n    @@ -71,13 +71,14 @@ private void deleteZKDir(ZooKeeper zk, String nodeName)\n         }\n     \n         List<String> children1 = zk.getChildren(nodeName, false);\n    -    List<String> c2 = zk.getChildren(nodeName, false, stat);\n    +    Stat stat2 = new Stat();\n    --- End diff --\n    \n    Which rule has triggered this change?\n", "Github user leventov commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r175555748\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/ZooKeeperTestClient.java ---\n    @@ -71,13 +71,14 @@ private void deleteZKDir(ZooKeeper zk, String nodeName)\n         }\n     \n         List<String> children1 = zk.getChildren(nodeName, false);\n    -    List<String> c2 = zk.getChildren(nodeName, false, stat);\n    +    Stat stat2 = new Stat();\n    --- End diff --\n    \n    \"SelfEquals\" (see a few lines below in diff)\n", "Github user leventov commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r175569277\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/AsyncHammerTest.java ---\n    @@ -61,6 +61,7 @@ protected void restart() throws Exception {\n             qb.startServers();\n         }\n     \n    +    @SuppressWarnings(\"JUnit4TearDownNotRun\")\n    --- End diff --\n    \n    Because it's called from test bodies directly. I've fixed that by making the methods private instead of adding suppression.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r175718655\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/ZooKeeperTestClient.java ---\n    @@ -71,13 +71,14 @@ private void deleteZKDir(ZooKeeper zk, String nodeName)\n         }\n     \n         List<String> children1 = zk.getChildren(nodeName, false);\n    -    List<String> c2 = zk.getChildren(nodeName, false, stat);\n    +    Stat stat2 = new Stat();\n    --- End diff --\n    \n    Cool, thanks.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r175718970\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/AsyncHammerTest.java ---\n    @@ -61,6 +61,7 @@ protected void restart() throws Exception {\n             qb.startServers();\n         }\n     \n    +    @SuppressWarnings(\"JUnit4TearDownNotRun\")\n    --- End diff --\n    \n    Wow, that's crazy. We must fix this sometime.\r\n    Do you think it could fit into this PR?\n", "Github user leventov commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r175777029\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/AsyncHammerTest.java ---\n    @@ -61,6 +61,7 @@ protected void restart() throws Exception {\n             qb.startServers();\n         }\n     \n    +    @SuppressWarnings(\"JUnit4TearDownNotRun\")\n    --- End diff --\n    \n    Fixed what?\n", "Github user maoling commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r175774472\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/ZooKeeperTestClient.java ---\n    @@ -71,13 +71,14 @@ private void deleteZKDir(ZooKeeper zk, String nodeName)\n         }\n     \n         List<String> children1 = zk.getChildren(nodeName, false);\n    -    List<String> c2 = zk.getChildren(nodeName, false, stat);\n    +    Stat stat2 = new Stat();\n    +    List<String> c2 = zk.getChildren(nodeName, false, stat2);\n    --- End diff --\n    \n    **stat** has been changed(copyed) in **zk.getChildren()** .   `stat.equals(stat) `is right in findbugs\n", "Github user maoling commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r175772100\n  \n    --- Diff: src/java/systest/org/apache/zookeeper/test/system/InstanceManager.java ---\n    @@ -266,7 +282,7 @@ synchronized public void removeInstance(String name) throws InterruptedException\n             if (assigned == null) {\n                 return;\n             }\n    -        assignments.get(assigned.container).remove(name);\n    +        assignments.get(assigned.container).remove(new Assigned(name, 0));\n             doDelete(assignmentsNode + '/' + assigned.container + '/' + name);\n    --- End diff --\n    \n    +1\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r175778556\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/AsyncHammerTest.java ---\n    @@ -61,6 +61,7 @@ protected void restart() throws Exception {\n             qb.startServers();\n         }\n     \n    +    @SuppressWarnings(\"JUnit4TearDownNotRun\")\n    --- End diff --\n    \n    Annotate with After and remove the call the tests.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    @leventov I've just verified your patch on my local machine.\r\n    \r\n    Is Java8 a requirement for error-prone to work?\r\n    Because running `ant clean test` with java7 I got the following error message:\r\n    > BUILD FAILED\r\n    /Users/andor/git/my-zookeeper/build.xml:1417: The following error occurred while executing this line:\r\n    /Users/andor/git/my-zookeeper/build.xml:490: Class com.google.errorprone.ErrorProneAntCompilerAdapter could not be loaded because of an invalid dependency.\r\n    \r\n    If that's the case, I'm afraid we can only merge this patch to master, once we upgraded to java8 which is coming soon, but not there yet.\r\n    \r\n    Additionally running with Java8 I got 75 warning messages. Is that accurate?\n", "Github user leventov commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/490#discussion_r177043995\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/AsyncHammerTest.java ---\n    @@ -61,6 +61,7 @@ protected void restart() throws Exception {\n             qb.startServers();\n         }\n     \n    +    @SuppressWarnings(\"JUnit4TearDownNotRun\")\n    --- End diff --\n    \n    I would keep it as is for symmetry with setup() method, that couldn't be declared `@Before` because it has a parameter.\n", "Github user leventov commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    @anmolnar see http://errorprone.info/docs/installation, the first paragraph: \"Please note that Error Prone must be run on JDK 8 or newer. It can be used to build Java 6 or 7 code by setting the appropriate -source / -target / -bootclasspath flags.\"\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    @leventov Got that, however my issue still stands: why `ant test` command doesn't compile with java7?\r\n    Is it just me who experience it? Have you tested the patch with java7?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    @leventov do you still work on this patch?\n", "Github user leventov commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    I didn't have time to consider your latest questions yet\n", "Github user leventov commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    Yes, Java 8 is required for the build, but the produced bytecode could target Java 6 or 7. Here is a citation from http://errorprone.info/docs/installation: \r\n    \r\n    > Our goal is to make it simple to add Error Prone checks to your existing Java compilation. Please note that Error Prone must be run on JDK 8 or newer. It can be used to build Java 6 or 7 code by setting the appropriate -source / -target / -bootclasspath flags.\n", "Github user leventov commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    @anmolnar if you try to run `ant test` while the test are not compiled yet (i. e. they have to be compiled), and Ant uses Java 7 which is installed on your machine for compilation, yes, this is expected that it will fail. You would need to run with Java 8.\r\n    \r\n    However, I see that `javac.source` and `javac.target` in `build.xml` already set to 1.8, how do you test it with Java 7 anyway?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    We just upgraded master and 3.5 branches to Java 8 a few days ago. I wrote my comment almost a month back. \r\n    In which case your patch is targeted to master and 3.5 branches only and won't be merged to 3.4. Is that okay for you?\n", "Github user leventov commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    Yes.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/490\n  \n    This is a good addition, thanks for bringing to our attention @leventov .\r\n    \r\n    Unfortunately however we can't replace the std javac compiler with error_prone in the toolchain outright - we can have a separate option/target to do this, but it can't be the default. \r\n    \r\n    I would recommend separating this into two jiras/pullrequests - one to change the build, the other to address the found issues.\r\n    \r\n    @leventov you mentioned \"I'm not proficient in Ant\" - perhaps one of the other folks could help with this? @anmolnar you mentioned hbase is using it - anything we can pull from there wrt how they integrate it into their build?\r\n    \r\n    ps. I like the idea of also getting this into 3.4 branch as well, which means it needs to be optional so that the user can run it when they have java8+, but otw not. Which matches my intent/statement above.\r\n    \r\n    pps. looks like there is a new version of error_prone, might want to take this opportunity to update the dependency version. I notice the library is ASL2.0 which is also good (license is in the COPYING file currently)\n"]}, {"Issue key": "ZOOKEEPER-2999", "Request type": "Improvement", "Datetime creation": "2018-03-09 21:29:56", "Datetime resolution": "2018-04-16 04:30:14", "Reporter login": "andschwa", "Reporter name": "Andrew Schwartzmeyer", "Assignee login": "andschwa", "Assignee name": "Andrew Schwartzmeyer", "Status": "Resolved", "Description": "Originally suggested in [GitHub PR #386|https://github.com/apache/zookeeper/pull/386], the CMake build I wrote used {{include_directories}}, which has global side effects, instead of the more explicit {{target_include_directories}}, to include directories per target (and with private or public scoping).\r\n\r\nFurthermore, it should also use {{CMAKE_CURRENT_SOURCE_DIR}} over {{CMAKE_SOURCE_DIR}} in order to allow inclusion in other projects via {{add_subdirectory()}}, and we can reduce the minimally required CMake version to 3.5 from 3.6.", "Comments": ["GitHub user andschwa opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/486\n\n    ZOOKEEPER-2999: CMake build should use target-level commands\n\n    CMake is using `include_directories`, which has global side effects,\r\n    instead of the more explicit `target_include_directories`, to include\r\n    directories per target (and with private or public scoping).\r\n    \r\n    Furthermore, CMake should also use `CMAKE_CURRENT_SOURCE_DIR` over\r\n    `CMAKE_SOURCE_DIR` in order to allow inclusion in other projects via\r\n    `add_subdirectory()`, and we can reduce the minimally required CMake\r\n    version to 3.5 from 3.6.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/andschwa/zookeeper ZOOKEEPER-2999\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/486.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #486\n    \n----\ncommit 5e184a2b56561af012a09d395e687a0a2cf3cf42\nAuthor: proller <proller@...>\nDate:   2017-09-28T14:40:38Z\n\n    ZOOKEEPER-2999: CMake build should use target-level commands\n    \n    CMake is using `include_directories`, which has global side effects,\n    instead of the more explicit `target_include_directories`, to include\n    directories per target (and with private or public scoping).\n    \n    Furthermore, CMake should also use `CMAKE_CURRENT_SOURCE_DIR` over\n    `CMAKE_SOURCE_DIR` in order to allow inclusion in other projects via\n    `add_subdirectory()`, and we can reduce the minimally required CMake\n    version to 3.5 from 3.6.\n\n----\n", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/486\n  \n    @phunt This replaces #386.\n", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/486\n  \n    @proller I cherry-picked and kept your authorship \ud83d\udc4d \n", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/486\n  \n    [JIRA: ZOOKEEPER-2999](https://issues.apache.org/jira/browse/ZOOKEEPER-2999)\n", "https://github.com/apache/zookeeper/pull/486", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/486\n  \n    CI failures look spurious...\n", "Github user andschwa commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/486#discussion_r176987184\n  \n    --- Diff: src/c/CMakeLists.txt ---\n    @@ -14,14 +14,13 @@\n     # See the License for the specific language governing permissions and\n     # limitations under the License.\n     \n    -cmake_minimum_required(VERSION 3.6)\n    +cmake_minimum_required(VERSION 3.5)\n    --- End diff --\n    \n    I guess this needs a rebase now.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/486\n  \n    @andschwa try to trigger another build with amend commit\r\n    Those are probably just flaky tests.\n", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/486\n  \n    @anmolnar Here goes...\n", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/486\n  \n    FWIW I was able to build and run tests using CMake just fine. That said, this was failing\r\n    \r\n    ```\r\n    1: Zookeeper_simpleSystem::testAsyncWatcherAutoResetterminate called after throwing an instance of 'CppUnit::Exception'\r\n    1:   what():  equality assertion failed\r\n    1: - Expected: -101\r\n    1: - Actual  : -4\r\n    ```\r\n    \r\n    But I don't know if it's a failure on `master` or configuration related or what. I can't see how the posted changes would affect one particular unit test like this.\n", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/486\n  \n    @anmolnar So here's what failed on Jenkins, but it makes no sense because Jenkins doesn't even use CMake. It can't be related:\r\n    \r\n    ```\r\n         [exec]      [exec] /home/jenkins/jenkins-slave/workspace/PreCommit-ZOOKEEPER-github-pr-build/src/c/tests/TestReconfig.cc:577: Assertion: assertion failed [Expression: numClientsPerHost.at(i) <= upperboundClientsPerServer(numClients, numServers)]\r\n         [exec]      [exec] Failures !!!\r\n         [exec]      [exec] Run: 37   Failure total: 1   Failures: 1   Errors: 0\r\n         [exec]      [exec] FAIL: zktest-st\r\n    ```\n", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/486\n  \n    @anmolnar Same here. The changes made in this PR are not executed in the Jenkins build; but the tests are quite flaky.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/486\n  \n    @andschwa I always get confused with these cpp unit tests. They're flaky for sure, but can't really tell why.\r\n    \r\n    I tested your changes and was able to build the client successfully with CMake. I've also run the tests multiple times on Docker and Virtualbox (centos7) and got test failed in `testAsyncMulti()` and `testReadOnly()` and also successful runs.\r\n    \r\n    You might want to take a closer look at C++ tests why they're failing - I suspect you have massive experience - or just keep trying to trigger builds for a green run.\n", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/486\n  \n    @anmolnar Yay! Flaky tests passed CI.\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/486\n", "Issue resolved by pull request 486\n[https://github.com/apache/zookeeper/pull/486]", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/486\n  \n    Thanks @hanm!\n"]}, {"Issue key": "ZOOKEEPER-2998", "Request type": "Bug", "Datetime creation": "2018-03-09 21:05:59", "Datetime resolution": "2018-03-26 02:17:16", "Reporter login": "andschwa", "Reporter name": "Andrew Schwartzmeyer", "Assignee login": "andschwa", "Assignee name": "Andrew Schwartzmeyer", "Status": "Resolved", "Description": "The \\{{CMakeLists.txt}} file in the master branch declares version 3.5.3 instead of 3.6.0.", "Comments": ["GitHub user andschwa opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/484\n\n    ZOOKEEPER-2998: CMake declares incorrect ZooKeeper version\n\n    This was not updated for the current development branch; it should be\r\n    3.6.0.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/andschwa/zookeeper ZOOKEEPER-2998\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/484.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #484\n    \n----\ncommit 76d4f9708e9015438f5709cf19c866cd177314a5\nAuthor: Andrew Schwartzmeyer <andrew@...>\nDate:   2018-03-09T21:09:15Z\n\n    ZOOKEEPER-2998: CMake declares incorrect ZooKeepeer version\n    \n    This was not updated for the current development branch; it should be\n    3.6.0.\n\n----\n", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/484\n  \n    That CI failure looks spurious...\n", "https://github.com/apache/zookeeper/pull/484", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/484\n  \n    [JIRA: ZOOKEEPER-2998](https://issues.apache.org/jira/browse/ZOOKEEPER-2998)\n", "Issue resolved by pull request 484\n[https://github.com/apache/zookeeper/pull/484]", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/484\n", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3778 (See [https://builds.apache.org/job/ZooKeeper-trunk/3778/])\nZOOKEEPER-2998: CMake declares incorrect ZooKeeper version (hanm: rev 29a892907eb175adc0c6908a1fde3e7bf8d655b6)\n* (edit) src/c/CMakeLists.txt\n"]}, {"Issue key": "ZOOKEEPER-2997", "Request type": "Bug", "Datetime creation": "2018-03-09 21:00:23", "Datetime resolution": "2018-03-26 02:19:48", "Reporter login": "andschwa", "Reporter name": "Andrew Schwartzmeyer", "Assignee login": "andschwa", "Assignee name": "Andrew Schwartzmeyer", "Status": "Resolved", "Description": "When writing the CMake build, I erroneously forced ZooKeeper to link to the Windows CRT statically. Instead of setting this, we should rely on CMake's defaults, and let users override it if they choose to by configuring with setting {{CMAKE_CXX_ARGS}}.", "Comments": ["GitHub user andschwa opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/483\n\n    ZOOKEEPER-2997: CMake should not force static CRT linking\n\n    By removing this code, CMake will use its own defaults for the CRT\r\n    flags (e.g., `/MDd` for debug configurations). With it removed, the\r\n    user can override this behavior by setting the `CMAKE_CXX_FLAGS`\r\n    manually when configuring ZooKeeper.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/andschwa/zookeeper master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/483.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #483\n    \n----\ncommit 45a997ad0e281d967460f4eb205a4b18e4219ecd\nAuthor: Andrew Schwartzmeyer <andrew@...>\nDate:   2018-03-09T21:00:48Z\n\n    ZOOKEEPER-2997: CMake should not force static CRT linking\n    \n    By removing this code, CMake will use its own defaults for the CRT\n    flags (e.g., `/MDd` for debug configurations). With it removed, the\n    user can override this behavior by setting the `CMAKE_CXX_FLAGS`\n    manually when configuring ZooKeeper.\n\n----\n", "Github user andschwa closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/483\n", "GitHub user andschwa opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/485\n\n    ZOOKEEPER-2997: CMake should not force static CRT linking\n\n    By removing this code, CMake will use its own defaults for the CRT\r\n    flags (e.g., `/MDd` for debug configurations). With it removed, the\r\n    user can override this behavior by setting the `CMAKE_CXX_FLAGS`\r\n    manually when configuring ZooKeeper.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/andschwa/zookeeper ZOOKEEPER-2997\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/485.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #485\n    \n----\ncommit 45a997ad0e281d967460f4eb205a4b18e4219ecd\nAuthor: Andrew Schwartzmeyer <andrew@...>\nDate:   2018-03-09T21:00:48Z\n\n    ZOOKEEPER-2997: CMake should not force static CRT linking\n    \n    By removing this code, CMake will use its own defaults for the CRT\n    flags (e.g., `/MDd` for debug configurations). With it removed, the\n    user can override this behavior by setting the `CMAKE_CXX_FLAGS`\n    manually when configuring ZooKeeper.\n\n----\n", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/485\n  \n    I had to reopen this because I changed which branch it was from.\n", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/485\n  \n    [JIRA: ZOOKEEPER-2997](https://issues.apache.org/jira/browse/ZOOKEEPER-2997)\n", "https://github.com/apache/zookeeper/pull/485", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/485\n  \n    CI errors look spurious...\n", "Issue resolved by pull request 485\n[https://github.com/apache/zookeeper/pull/485]", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/485\n", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3778 (See [https://builds.apache.org/job/ZooKeeper-trunk/3778/])\nZOOKEEPER-2997: CMake should not force static CRT linking (hanm: rev 13c9f899ff62be6a2eacb28e522d06703f1dab08)\n* (edit) src/c/CMakeLists.txt\n", "Github user andschwa commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/485\n  \n    Thanks @hanm!\n"]}, {"Issue key": "ZOOKEEPER-2996", "Request type": "Bug", "Datetime creation": "2018-03-09 05:28:51", "Datetime resolution": null, "Reporter login": "cdprashanth", "Reporter name": "prashantkumar", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "I see below core with3.5.1-alpha\r\n\r\n{code:java}\r\n\r\n#0  __GI_raise (sig=sig@entry=6) at /usr/src/debug/glibc/2.24-r0/git/sysdeps/unix/sysv/linux/raise.c:58\r\n58\t/usr/src/debug/glibc/2.24-r0/git/sysdeps/unix/sysv/linux/raise.c: No such file or directory.\r\n[Current thread is 1 (LWP 20486)]\r\n(gdb) bt\r\n#0  __GI_raise (sig=sig@entry=6) at /usr/src/debug/glibc/2.24-r0/git/sysdeps/unix/sysv/linux/raise.c:58\r\n#1  0x00007f39f9f439a1 in __GI_abort () at /usr/src/debug/glibc/2.24-r0/git/stdlib/abort.c:89\r\n#2  0x00007f39f9f81ac0 in __libc_message (do_abort=do_abort@entry=1, fmt=fmt@entry=0x7f39fa078959 \"%s\") at /usr/src/debug/glibc/2.24-r0/git/sysdeps/posix/libc_fatal.c:175\r\n#3  0x00007f39f9f81b0a in __GI___libc_fatal (message=0x7f39e68c3350 \"Unexpected error 9 on netlink descriptor 20\") at /usr/src/debug/glibc/2.24-r0/git/sysdeps/posix/libc_fatal.c:185\r\n#4  0x00007f39fa019315 in __GI___netlink_assert_response (fd=fd@entry=20, result=<optimized out>) at /usr/src/debug/glibc/2.24-r0/git/sysdeps/unix/sysv/linux/netlink_assert_response.c:103\r\n#5  0x00007f39fa0189f2 in make_request (pid=<optimized out>, fd=<optimized out>) at /usr/src/debug/glibc/2.24-r0/git/sysdeps/unix/sysv/linux/check_pf.c:171\r\n#6  __check_pf (seen_ipv4=seen_ipv4@entry=0x7f39e68c4642, seen_ipv6=seen_ipv6@entry=0x7f39e68c4643, in6ai=in6ai@entry=0x7f39e68c4650, in6ailen=in6ailen@entry=0x7f39e68c4658) at /usr/src/debug/glibc/2.24-r0/git/sysdeps/unix/sysv/linux/check_pf.c:329\r\n#7  0x00007f39f9fe9679 in __GI_getaddrinfo (name=<optimized out>, name@entry=0x7f39e560d2a0 \"128.0.0.4\", service=service@entry=0x7f39e560d2aa \"2181\", hints=hints@entry=0x7f39e68c4b60, pai=pai@entry=0x7f39e68c4b38) at /usr/src/debug/glibc/2.24-r0/git/sysdeps/posix/getaddrinfo.c:2338\r\n#8  0x00007f39f5d33ca5 in resolve_hosts (avec=0x7f39e68c4b40, hosts_in=0x7f39e560d250 \"128.0.0.4:2181\", zh=0x7f39e8756000) at /usr/src/debug/zookeeper/3.5.1-alpha-r0/zookeeper-3.5.1-alpha/src/c/src/zookeeper.c:723\r\n#9  update_addrs (zh=zh@entry=0x7f39e8756000) at /usr/src/debug/zookeeper/3.5.1-alpha-r0/zookeeper-3.5.1-alpha/src/c/src/zookeeper.c:862\r\n#10 0x00007f39f5d36611 in zookeeper_interest (zh=zh@entry=0x7f39e8756000, fd=fd@entry=0x7f39e68c4ce8, interest=interest@entry=0x7f39e68c4cec, tv=tv@entry=0x7f39e68c4d00) at /usr/src/debug/zookeeper/3.5.1-alpha-r0/zookeeper-3.5.1-alpha/src/c/src/zookeeper.c:2167\r\n#11 0x00007f39f5d42ca8 in do_io (v=0x7f39e8756000) at /usr/src/debug/zookeeper/3.5.1-alpha-r0/zookeeper-3.5.1-alpha/src/c/src/mt_adaptor.c:380\r\n#12 0x00007f3a00967490 in start_thread (arg=0x7f39e68eb700) at /usr/src/debug/glibc/2.24-r0/git/nptl/pthread_create.c:456\r\n#13 0x00007f39f9ffc41f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:105\r\n\r\n{code}\r\n\r\n", "Comments": []}, {"Issue key": "ZOOKEEPER-2995", "Request type": "Bug", "Datetime creation": "2018-03-08 05:31:36", "Datetime resolution": null, "Reporter login": "abrahamfine", "Reporter name": "Abraham Fine", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "When attempting to compile the documentation (with JAVA_HOME set to 1.7) I see output like this:\r\n{code}\r\n$ ant clean \r\ndocs -Dforrest.home=$(brew info apache-forrest | grep /Cellar | awk '{print $1;}') -d\r\nApache Ant(TM) version 1.9.7 compiled on April 9 2016\r\nTrying the default build file: build.xml\r\nBuildfile: REDACTED/zookeeper/build.xml\r\nAdding reference: ant.PropertyHelper\r\nDetected Java version: 1.7 in: /Library/Java/JavaVirtualMachines/jdk1.7.0_80.jdk/Contents/Home/jre\r\n\r\nOTHER STUFF\r\n\r\ndocs:\r\nClass org.apache.tools.ant.taskdefs.condition.Os loaded from parent loader (parentFirst)\r\nCondition false; setting forrest.exec to forrest\r\nSetting project property: forrest.exec -> forrest\r\n     [exec] Current OS is Mac OS X\r\n     [exec] Executing '/usr/local/Cellar/apache-forrest/0.9/bin/forrest'\r\n     [exec] The ' characters around the executable and arguments are\r\n     [exec] not part of the command.\r\nExecute:Java13CommandLauncher: Executing '/usr/local/Cellar/apache-forrest/0.9/bin/forrest'\r\nThe ' characters around the executable and arguments are\r\nnot part of the command.\r\n     [exec] Apache Forrest.  Run 'forrest -projecthelp' to list options\r\n     [exec]\r\n     [exec] Buildfile: /usr/local/Cellar/apache-forrest/0.9/libexec/main/forrest.build.xml\r\n     [exec]\r\n     [exec] check-java-version:\r\n     [exec] This is apache-forrest-0.9\r\n     [exec] Using Java 1.6 from /Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk/Contents/Home\r\n\r\nMORE STUFF\r\n\r\n     [exec]\r\n     [exec] BUILD FAILED\r\n     [exec] /usr/local/Cellar/apache-forrest/0.9/libexec/main/targets/site.xml:180: Warning: Could not find file REDACTED/zookeeper/src/docs/build/tmp/brokenlinks.xml to copy.\r\n     [exec]\r\n     [exec] Total time: 3 seconds\r\n     [exec] -Djava.endorsed.dirs=/usr/local/Cellar/apache-forrest/0.9/libexec/lib/endorsed:${java.endorsed.dirs} is not supported. Endorsed standards and standalone APIs\r\n     [exec] Error: Could not create the Java Virtual Machine.\r\n     [exec] in modular form will be supported via the concept of upgradeable modules.\r\n     [exec] Error: A fatal exception has occurred. Program will exit.\r\n     [exec]\r\n     [exec]   Copying broken links file to site root.\r\n     [exec]\r\n\r\nBUILD FAILED\r\nREDACTED/zookeeper/build.xml:501: exec returned: 1\r\n\tat org.apache.tools.ant.taskdefs.ExecTask.runExecute(ExecTask.java:644)\r\n\tat org.apache.tools.ant.taskdefs.ExecTask.runExec(ExecTask.java:670)\r\n\tat org.apache.tools.ant.taskdefs.ExecTask.execute(ExecTask.java:496)\r\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:293)\r\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\r\n\tat org.apache.tools.ant.Target.execute(Target.java:435)\r\n\tat org.apache.tools.ant.Target.performTasks(Target.java:456)\r\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1405)\r\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1376)\r\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\r\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1260)\r\n\tat org.apache.tools.ant.Main.runBuild(Main.java:854)\r\n\tat org.apache.tools.ant.Main.startAnt(Main.java:236)\r\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:285)\r\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:112)\r\n{code}\r\n\r\nThe build succeeds when I uninstall java 9.\r\n", "Comments": []}, {"Issue key": "ZOOKEEPER-2994", "Request type": "New Feature", "Datetime creation": "2018-03-07 15:31:51", "Datetime resolution": "2018-04-23 22:26:15", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Closed", "Description": "In the even that the zookeeper transaction log or snapshot become corrupted and fail CRC checks (preventing startup) we should have a mechanism to get the cluster running again.\r\n\r\nPreviouslywe achieved this by loading the broken transaction log with a modified version of ZK with disabled CRC check and forced it to snapshot.\r\n\r\nIt'd very handy to have a tool which can do this for us. LogFormatter and SnapshotFormatter have already been designed to dump log and snapshot files, it'd be nice to extend their functionality and add ability for such recovery.\r\n\r\nIt has proven that once you end up with the corrupt txn log there is no way to recover except manually modifying the crc check. That's basically why the tool is needed.", "Comments": ["GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/487\n\n    ZOOKEEPER-2994 Tool required to recover log and snapshot entries with CRC errors\n\n    In the even that the zookeeper transaction log become corrupted and fail CRC checks (preventing startup) we should have a mechanism to get the cluster running again.\r\n    \r\n    Previously we achieved this by loading the broken transaction log with a modified version of ZK with disabled CRC check and forced it to snapshot.\r\n    \r\n    It has proven that once you end up with the corrupt txn log there is no way to recover except manually modifying the crc check. That's basically why the tool is needed.\r\n    \r\n    It's called TxnLogToolkit, a new console application similar to LogFormatter and SnapshotFormatter, but it's intentionally separated to keep backward compatibility in the existing tools.\r\n    \r\n    This PR contains TXN log tool only.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2994\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/487.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #487\n    \n----\ncommit 2936846d3b778fd9410910ec16659079a715e96b\nAuthor: Andor Molnar <andor@...>\nDate:   2018-03-07T15:33:23Z\n\n    ZOOKEEPER-2994. Added new tool TxnLogTool for txn log file recovery\n\ncommit 240fdb6f4841c66d76378b296a27ef3c373d2e9c\nAuthor: Andor Molnar <andor@...>\nDate:   2018-03-09T13:55:03Z\n\n    ZOOKEEPER-2994. Refactor FileTxnLog's padding logic to separate class for reusability\n\ncommit b6fe47da610cba46ba52b3870c3a72b9b63ea895\nAuthor: Andor Molnar <andor@...>\nDate:   2018-03-10T10:55:28Z\n\n    ZOOKEEPER-2994. Added padding, tool renamed to TxnLogToolkit,\n    interactive mode, etc.\n\n----\n", "Github user nkalmar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/487\n  \n    Useful addition, +1\r\n    \r\n    As @phunt pointed out, docs in zookeeperAdmin.xml could be updated.\n", "Github user nkalmar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/487\n  \n    I used your updated documentation, and managed to recover a corrupted log file:\r\n    \r\n    bin/zkTxnLogToolkit.sh -d ~/workspace/zookeeper/standalone/version-2/log.1\r\n    ZooKeeper Transactional Log File with dbid 0 txnlog format version 2\r\n    4/9/18 3:13:19 PM CEST session 0x10000ebe13a0000 cxid 0x0 zxid 0x1 createSession 30000\r\n    4/9/18 3:15:21 PM CEST session 0x10000ebe13a0000 cxid 0x0 zxid 0x2 closeSession null\r\n    4/9/18 3:17:41 PM CEST session 0x10000ebe13a0001 cxid 0x0 zxid 0x3 createSession 30000\r\n    4/9/18 3:18:13 PM CEST session 0x10000ebe13a0001 cxid 0x0 zxid 0x4 closeSession null\r\n    EOF reached after 4 txns.\r\n    \r\n    Corrupted log.1 file\r\n    \r\n    bin/zkTxnLogToolkit.sh -d ~/workspace/zookeeper/standalone/version-2/log.1\r\n    ZooKeeper Transactional Log File with dbid 0 txnlog format version 2\r\n    CRC ERROR - 4/10/18 5:12:11 AM CEST session 0x10000ebe13a0000 cxid 0x0 zxid 0x1 createSession 30000\r\n    4/10/18 5:12:11 AM CEST session 0x10000ebe13a0000 cxid 0x0 zxid 0x1 createSession 30000\r\n    4/9/18 3:15:21 PM CEST session 0x10000ebe13a0000 cxid 0x0 zxid 0x2 closeSession null\r\n    CRC ERROR - 4/9/18 3:17:41 PM CEST session 0x10044aa44aaaaaa cxid 0x0 zxid 0x3 createSession 30000\r\n    4/9/18 3:17:41 PM CEST session 0x10044aa44aaaaaa cxid 0x0 zxid 0x3 createSession 30000\r\n    4/9/18 3:18:13 PM CEST session 0x10000ebe13a0001 cxid 0x0 zxid 0x4 closeSession null\r\n    EOF reached after 4 txns.\r\n    \r\n    bin/zkTxnLogToolkit.sh -r ~/workspace/zookeeper/standalone/version-2/log.1\r\n    ZooKeeper Transactional Log File with dbid 0 txnlog format version 2\r\n    CRC ERROR - 4/10/18 5:12:11 AM CEST session 0x10000ebe13a0000 cxid 0x0 zxid 0x1 createSession 30000\r\n    Would you like to fix it (Yes/No/Abort) ? Y\r\n    EOF reached after 4 txns.\r\n    Recovery file /Users/norbertkalmar/workspace/zookeeper/standalone/version-2/log.1.fixed has been written with 1 fixed CRC error(s)\r\n    \r\n    bin/zkTxnLogToolkit.sh -d ~/workspace/zookeeper/standalone/version-2/log.1.fixed\r\n    ZooKeeper Transactional Log File with dbid 0 txnlog format version 2\r\n    4/9/18 3:13:19 PM CEST session 0x10000ebe13a0000 cxid 0x0 zxid 0x1 createSession 30000\r\n    4/9/18 3:15:21 PM CEST session 0x10000ebe13a0000 cxid 0x0 zxid 0x2 closeSession null\r\n    4/9/18 3:17:41 PM CEST session 0x10044aa44aaaaaa cxid 0x0 zxid 0x3 createSession 30000\r\n    4/9/18 3:18:13 PM CEST session 0x10000ebe13a0001 cxid 0x0 zxid 0x4 closeSession null\r\n    EOF reached after 4 txns.\r\n    \r\n    \r\n    LGTM!\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/487\n  \n    @phunt I added documentation to ZookeeperAdmin docs.\r\n    @nkalmar thanks!\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/487\n", "Issue resolved by pull request 487\n[https://github.com/apache/zookeeper/pull/487]", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/487\n  \n    +1 Thanks @anmolnar this looks good. Please consider backporting to 3.4 (separate jira).\r\n    \r\n    Also in future please don't include any changed files from the toplevel docs directory (html/pdf files) as these are regenerated during commit.\n", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3810 (See [https://builds.apache.org/job/ZooKeeper-trunk/3810/])\nZOOKEEPER-2994: Tool required to recover log and snapshot entries with (phunt: rev 154f9c536f7c696b774361937c6b4b08603d16cf)\n* (add) bin/zkTxnLogToolkit.cmd\n* (edit) src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml\n* (add) src/java/main/org/apache/zookeeper/server/persistence/FilePadding.java\n* (add) src/java/main/org/apache/zookeeper/server/persistence/TxnLogToolkit.java\n* (edit) src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java\n* (edit) docs/zookeeperAdmin.pdf\n* (edit) src/java/test/org/apache/zookeeper/server/persistence/FileTxnLogTest.java\n* (add) src/java/test/org/apache/zookeeper/server/persistence/TxnLogToolkitTest.java\n* (add) bin/zkTxnLogToolkit.sh\n* (edit) docs/zookeeperAdmin.html\n* (edit) src/java/test/org/apache/zookeeper/test/ClientBase.java\n* (add) src/java/test/data/invalidsnap/version-2/log.42\n", "GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/508\n\n    ZOOKEEPER-2994 Tool required to recover log and snapshot entries with CRC errors (3.4)\n\n    This is the 3.4 version of https://github.com/apache/zookeeper/pull/487\r\n    @phunt I've just realized that the patch must introduce a new dependency: commons-cli.\r\n    Not sure if you're willing to merge it in this case.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2994_34\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/508.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #508\n    \n----\ncommit 3bc2e5f7257ae23ccce1ff72a83510322efe716e\nAuthor: Andor Molnar <andor@...>\nDate:   2018-04-23T22:20:26Z\n\n    ZOOKEEPER-2994: Tool required to recover log and snapshot entries with CRC errors\n    \n    https://issues.apache.org/jira/browse/ZOOKEEPER-2994\n    \n    In the event  of ZooKeeper transaction log becomes corrupted and fail CRC checks (preventing startup) we should have a mechanism to get the cluster running again.\n    \n    Previously we achieved this by loading the broken transaction log with a modified version of ZK with disabled CRC check and forced it to write new txn log files.\n    \n    It has proven that once you end up with the corrupt txn log there is no way to recover except manually modifying the crc check. That's basically why the tool is needed.\n    \n    It's called TxnLogToolkit, a new console application similar to LogFormatter and SnapshotFormatter, but it's intentionally separated to keep backward compatibility in the existing tools.\n    \n    This PR contains TXN log tool only.\n    \n    You probably also notice a refactoring to extract file padding logic from FileTxnLog to reuse in the new tool. Related code changes can be reviewed alone in a separate commit if preferred.\n    \n    Author: Andor Molnar <andor@cloudera.com>\n    \n    Reviewers: phunt@apache.org\n    \n    Closes #487 from anmolnar/ZOOKEEPER-2994 and squashes the following commits:\n    \n    221760ccc [Andor Molnar] ZOOKEEPER-2994. Added documentation and startup scripts\n    a69d7297b [Andor Molnar] ZOOKEEPER-2994. Fix findbugs warning\n    0b95efefd [Andor Molnar] ZOOKEEPER-2994. Fix for unit test\n    15fa45c68 [Andor Molnar] ZOOKEEPER-2994. Added padding, tool renamed to TxnLogToolkit, interactive mode, etc.\n    6a1ad0ec4 [Andor Molnar] ZOOKEEPER-2994. Refactor FileTxnLog's padding logic to separate class for reusability\n    0d089ccdd [Andor Molnar] ZOOKEEPER-2994. Added new tool TxnLogTool for txn log file recovery\n    \n    Change-Id: I7560362633a7bc919ae6d3ca7e3588e196a1919c\n\n----\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 11 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1627//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1627//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1627//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/508\n  \n    tbh would rather not. Given it's available here as a patch for anyone that needs it why don't we just include it in 3.5+ . Anyone that wants it can apply themselves and use it using what you've provided here.\r\n    \r\n    Make sense @anmolnar ? If so close this. Otw lmk.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/508\n  \n    I will rather remove the dependency and change the implementation to behave similarly without it, so that we can merge this safely.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/508\n  \n    @phunt Done. Now it's using a custom parser and no additional dependency requirement.\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 13 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1630//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1630//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1630//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/508\n  \n    +1. Great. Thanks @anmolnar . I've committed for 3.4.13.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/508\n  \n    @anmolnar you will have to close this manually as it's not master branch.\r\n\n", "Github user anmolnar closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/508\n"]}, {"Issue key": "ZOOKEEPER-2993", "Request type": "Bug", "Datetime creation": "2018-03-05 19:48:26", "Datetime resolution": "2018-05-23 03:44:16", "Reporter login": "taoist", "Reporter name": "jason wang", "Assignee login": "taoist", "Assignee name": "jason wang", "Status": "Closed", "Description": "There are Rcc.java and other required files under thesrc/java/main/org/apache/jute/compiler/generated directory.\r\n\r\nHowever, when I tried to add the source distribution to our own git repo, the .gitignore file has \"generated\" as a key word in line 55 - which prevents the dir and files under that dir to be added to the repo. The compilation later fails due to the missing dir and files.\r\n\r\n*compile_jute*\r\n :*19:02:54* [mkdir] Created dir: /home/jenkins/workspace/3PA/PMODS/zookeeper-pgdi-patch-in-maven-repo/src/java/generated*\r\n\r\n19:02:54* [mkdir] Created dir: /home/jenkins/workspace/3PA/PMODS/zookeeper-pgdi-patch-in-maven-repo/src/c/generated*\r\n\r\n19:02:54* [java] Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8\r\n\r\n*19:02:54* [java] Error: Could not find or load main class org.apache.jute.compiler.generated.Rcc*\r\n\r\n19:02:54* [java] Java Result: 1*19:02:54* [java] Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8\r\n\r\n*19:02:54* [java] Error: Could not find or load main class org.apache.jute.compiler.generated.Rcc*\r\n\r\n19:02:54* [java] Java Result: 1*19:02:54* [touch] Creating /home/jenkins/workspace/3PA/PMODS/zookeeper-pgdi-patch-in-maven-repo/src/java/generated/.generated*\r\n\r\n\r\n\r\nFix is to remove or comment out the generated key word in line 55.\r\n\r\n#\r\n #generated\r\n #\r\n\r\n", "Comments": ["[~taoist]\r\n\r\nNice catch, thanks for creating the Jira.\r\n\r\nI think the name of the directory (generated) is a little bit misleading, because these files are part of the codebase since the very beginning and have mistakenly put on ignore by [~cnauroth] in [https://github.com/apache/zookeeper/commit/fa5955afa0962147268241163b7ca47dcdd074e0]\r\n\r\nAre you happy to contribute and file a new PR on GitHub to address the issue as suggested?", "GitHub user asutosh936 opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/488\n\n    ZOOKEEPER-2993 - Removed 'generated' line from .gitignore\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/asutosh936/zookeeper ZOOKEEPER-2993\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/488.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #488\n    \n----\ncommit a02ef3db8d18cc738a1a3e24eafcaa0b5379d297\nAuthor: asutosh936 <asutosh.pandya@...>\nDate:   2018-02-25T23:40:14Z\n\n    ZOOKEEPER-2936 - Removed duplicate code\n\ncommit 6a17613be090835286f6fd15b3fb5c40e269a25f\nAuthor: asutosh936 <asutosh.pandya@...>\nDate:   2018-03-01T01:22:30Z\n\n    ZOOKEEPER-2936 - Deleted duplicate code\n\ncommit ad55832eafbe4e341e113a1bdeb0385674025b8e\nAuthor: asutosh936 <asutosh.pandya@...>\nDate:   2018-03-03T18:09:01Z\n\n    Merge branch 'master' of https://github.com/apache/zookeeper\n\ncommit 67d454b5ab91b72f20b878c90c7d9f7a45bcdf88\nAuthor: asutosh936 <asutosh.pandya@...>\nDate:   2018-03-07T01:39:40Z\n\n    Merge branch 'master' of https://github.com/apache/zookeeper\n\ncommit 13f8a235bad6f361120babf96f05aa2fc0cdcdb0\nAuthor: asutosh936 <asutosh.pandya@...>\nDate:   2018-03-12T01:06:57Z\n\n    ZOOKEEPER-2993 - Removed 'generated' line from .gitignore\n\n----\n", "Github user asutosh936 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    @anmolnar - Please review\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    @asutosh936 lgtm\r\n    It would be nice to squash your commits into one. Thanks.\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    I agree with @anmolnar. This change should be fine from what I can tell but it would be nice to have a note as to why the change was made.\n", "Github user asutosh936 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    @anmolnar @afine - Thank You for the review comments.\r\n    \r\n    The change is to remove 'generated' keyword from .gitignore because it prevents the dir and files under generated dir to be added to the repo.  The compilation later fails due to the missing dir and files.\r\n    \r\n    Also I am trying to squash the previous commits but somehow git is not allowing me to do so. Let me know if the changes looks good and to be merged or I need to close this PR and create new one.\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    > The change is to remove 'generated' keyword from .gitignore because it prevents the dir and files under generated dir to be added to the repo. The compilation later fails due to the missing dir and files.\r\n    \r\n    Which files are you referring to? I don't think we have any top level `generated` directory and I also don't think we would want to add such files to the repo.\r\n    \r\n    Don't worry about squashing, I should be able to take care of that when it comes time to commit.\n", "Github user asutosh936 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    @afine - Currently there is a folder named 'generated' at below location.\r\n    https://github.com/apache/zookeeper/tree/master/src/java/main/org/apache/jute/compiler/generated\r\n    \r\n    As per the defect any java file added to above location, it will be ignored by git to add to repository.\n", "Github user tamaashu commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    @asutosh936 Sorry but I don't think that the generated directory is ignored by a defect.\r\n    We should never add generated files to git, they must be ignored.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    @tamaashu Generally speaking I agree with you, but that directory is somewhat different. There is code in it which we don't generate during our build process, but it's been in git since the beginning of ZooKeeper.\r\n    I have no idea why that directory named 'generated'. It's quite misleading.\r\n    @afine @tamaashu please take a closer look before making a judgement.\r\n\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    @asutosh936 I agree with @anmolnar That directory exists, it is currently in version control, and I don't think any generated files actually end up there. My guess is that it is there purely for historical reasons and to contain the rcc.jj file.\r\n    \r\n    In other words, I don't think your change to the gitignore will impact that directory. According to the gitignore documentation (https://git-scm.com/docs/gitignore):\r\n    \r\n    > If the pattern does not contain a slash /, Git treats it as a shell glob pattern and checks for a match against the pathname relative to the location of the .gitignore file (relative to the toplevel of the work tree if not from a .gitignore file).\r\n    \r\n    Since there are not any top level files called `generated` I don't think this line in the gitignore has any impact on the repository. Am I missing something here?\r\n    \r\n\n", "Github user jason95 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    Hi folks,\r\n    \r\n    Sorry for not keeping up with the jira.\r\n    @asutosh936 - thanks for the PR and others for reviewing.\r\n    \r\n    Here are some info - hope it will shed some clarity.\r\n    \r\n    - There exists in the repo/source code a dir named: src/java/main/org/apache/jute/compiler/generated\r\n    - In that dir it has Rcc.java and other files\r\n    - Files in that dir is required to for successful compilation\r\n    \r\n    - However, the .gitignore has the keyword \"generated\"\r\n    - when I add the source code tree into out company repo, the src/java/main/org/apache/jute/compiler/generated was effectively ignored - and thus not added into our company repo\r\n    - I ran a jenkins job to compile the code from the repo - it failed - due to the missing Rcc and other required java sources under that excluded directory.\r\n    \r\n    When I did a git status - everything was in sync even though my workspace has the Rcc.java - but my company repo actually is missing that dir.  My local compile succeeds every time.  But jenkins job compile using company repo always fails.  After some comparison - then I noticed the missing dir on the company repo side.\r\n    \r\n    Once I removed the generated keyword from the .gitignore - git immediately detected the generated dir in my workspace as new.  I was able to git add/commit/push to make the jenkins compile successful.\r\n    \r\n    Hope this help clarify the situation.\r\n    \r\n    I prefer to have generated keyword removed.  In the future, if the compile will generate artifacts that should be ignored, then modify the .gitignore and rename the src/java/main/org/apache/jute/compiler/generated dir - so the 2 does not conflict.\r\n    \r\n    My 2 cents.\r\n    \r\n    Thanks\r\n\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    @afine In the other way around: if there's no '/' at the beginning of the keyword, git will check the entire path relative to the root for the string `generated` and if it finds a match, it'll ignore all files underneath.\r\n    \r\n    My suggestion is to remove `generated` keyword from .gitignore - like in this PR -, because 'real' generated folders are already excluded explicitly. There could be other possible solutions to the problem, I'm open to them.\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    @anmolnar It looks like you are right. removing this line does not impact which files git ignores. Thanks for persisting @jason95 @asutosh936\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    I would like to have this change in 3.4 so I will merge after the 3.4.12 release.\n", "Github user jason95 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/488\n  \n    Thanks everyone!! @afine @asutosh936 @anmolnar @tamaashu \n", "Issue resolved by pull request 488\n[https://github.com/apache/zookeeper/pull/488]", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #36 (See [https://builds.apache.org/job/ZooKeeper-trunk/36/])\nZOOKEEPER-2993: Removed 'generated' line from .gitignore (hanm: rev 07228badc4691ca96f0d35e5aaa5ebcb2b9891cb)\n* (edit) .gitignore\n"]}, {"Issue key": "ZOOKEEPER-2992", "Request type": "Bug", "Datetime creation": "2018-03-04 16:51:45", "Datetime resolution": "2018-03-05 02:52:15", "Reporter login": "elyograg", "Reporter name": "Shawn Heisey", "Assignee login": "elyograg", "Assignee name": "Shawn Heisey", "Status": "Resolved", "Description": "The eclipse build target downloads a component from sourceforge.  It does this download with http, but sourceforge now requires https downloads.  The sourceforge page redirects to https, but ant is refusing to follow the redirect because it changes protocol.\r\n\r\nThe download in build.xml just needs to be changed to https and it will work.\r\n", "Comments": ["GitHub user elyograg opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/479\n\n    ZOOKEEPER-2992: Fix sourceforge download url\n\n    ZOOKEEPER-2992 is the Jira issue.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/elyograg/zookeeper master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/479.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #479\n    \n----\ncommit 3c22cbdc8c34a372779135a392344317adc1dadc\nAuthor: Shawn Heisey <elyograg@...>\nDate:   2018-03-04T17:39:47Z\n\n    ZOOKEEPER-2992: Fix sourceforge download url.\n\n----\n", "Looks like you're not using a text changelog.  If there is any credit given somewhere else, please use my full name rather than my apache username.\r\n", "Github user eribeiro commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/479\n  \n    LGTM. Let's wait for a commiter's review and Merge.\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/479\n", "Issue resolved by pull request 479\n[https://github.com/apache/zookeeper/pull/479]", "Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/479\n  \n    merged to master: https://github.com/apache/zookeeper/commit/99c9bbb0ab1eef469e1662086532c58078b9909a\r\n    3.5:\r\n    https://github.com/apache/zookeeper/commit/005b3fb8ddb3ef03183fd0539a40ceb86fe8f4ac\r\n    3.4:\r\n    https://github.com/apache/zookeeper/commit/7b9176cbbe5878d7471b2ef02e1748d9229adb59\n", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3756 (See [https://builds.apache.org/job/ZooKeeper-trunk/3756/])\nZOOKEEPER-2992: The eclipse build target fails due to protocol (hanm: rev 99c9bbb0ab1eef469e1662086532c58078b9909a)\n* (edit) build.xml\n"]}, {"Issue key": "ZOOKEEPER-2991", "Request type": "Bug", "Datetime creation": "2018-03-02 10:45:33", "Datetime resolution": null, "Reporter login": "paulmillar", "Reporter name": "Paul Millar", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "Commit d497aac4 introduced the ZooKeeperServer#registerServerShutdownHandler method and corresponding ZooKeeperServerShutdownHandler class. Both the method and class are package-protected, resulting in the expectation that non-ZK code should not use either.\r\n\r\nHowever, if registerServerShutdownHandler is *not* called, then ZK will log an error:\r\n{quote}ZKShutdownHandler is not registered, so ZooKeeper server won't take any action on ERROR or SHUTDOWN server state changes\r\n{quote}\r\nThere are several problems here. In order of importance (for me, at least!)\r\n\r\nFirst, (most important) this certainly should not be logged as an error. Depending on usage, there may be no need for a shutdown handler. Always logging an error (with no opportunity to silence it) is therefore wrong.\r\n\r\nSecond, the ability to learn of state changes may be of general interest (monitoring, etc); however, this is not possible if the method is protected.\r\n\r\nThird, the method accepts a concrete class that is designed to use a CountDownLatch. This is not appropriate in all cases. The method should be updated to accept an interface.", "Comments": ["ZOOKEEPER-2795 is almost the same as this bug report"]}, {"Issue key": "ZOOKEEPER-2990", "Request type": "Improvement", "Datetime creation": "2018-03-02 07:30:48", "Datetime resolution": null, "Reporter login": "bkanivets", "Reporter name": "Bogdan Kanivets", "Assignee login": "bkanivets", "Assignee name": "Bogdan Kanivets", "Status": "Open", "Description": "It would be nice to have an ability to do probabilistic tracing similar to Cassandra [nodetool|https://docs.datastax.com/en/dse/5.1/dse-admin/datastax_enterprise/tools/nodetool/toolsSetTraceProbability.html]\r\n\r\nThis will help debugissues in prod systems.\r\n\r\nI'd like to contribute if everyone is ok with the feature.\r\n\r\nMy suggestion is to add an extra parameter to ZooTrace to handle it. Questions:\r\n * should it be one global param or per each ZooTrace mask? I'm thinking per mask\r\n * should it be a new 4lw orpart of 'stmk'? Leaning towards new word and refactoring param passing to words (stmkis a special case right now).\r\n * there are places in the code that use LOG.trace directly. That will have to change to ZooTrace\r\n\r\nI canmake some initial implementation for demo/review.\r\n\r\n", "Comments": ["[~bkanivets]\r\n\r\nI strongly believe this will be a very useful new feature for ZooKeeper.\r\n\r\nLooking forward to your contribution at GitHub.\r\n\r\n\r\n\r\nThanks!", "My suggestions:\r\n # Per mask would be the best I would say. It's the most sophisticated.\r\n # I can't seea reason why not to add it to existing 4lw ('stmk'). Currently it's a special case of 1.0 probability for all trace messages, so the probability values could be an optional parameter of the existing command. However you could face some difficulties adding such a lot of new values to the command input nicely.\r\n # Agreed. They should use a shortcut in ZooTrace meaning: log at trace level with 1.0 probability.\r\n\r\n", "[~bkanivets]\r\n\r\nWhat are the target versions of this patch?\r\n\r\nI suggest 3.5 and 3.6 only, because it's a minor improvement. (should only fix critical and security issues in 3.4)", "[~andor]Sounds good. I'll do the PR for 3.5/3.6. I agreethat new features should be in 3.5, but at the same time this is more of an 'operations' improvement. If there are more user requests for this one, maybe we can consider 3.4 later.", "We can talk about it, but I would rather create stable release of 3.5 as soon as possible and push users to upgrade."]}, {"Issue key": "ZOOKEEPER-2989", "Request type": "Bug", "Datetime creation": "2018-03-01 20:34:50", "Datetime resolution": "2019-08-28 03:41:59", "Reporter login": "rtrudeau", "Reporter name": "Rick Trudeau", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "We're using ZK 3.5.3-beta.\r\n\r\nWhen using literal IPv6 addresses in the zoo.cfg.dynamic file, ZK fails to come up withthe connection to the peer ZKs keeps getting reset.\r\n\r\nzookeeper.log indicates a badly formed address is the cause.\r\n{noformat}\r\n<2018.03.01 15:14:30 163 -0500><E><sdn3></2001:db8:0:0:0:0:0:4:3888><org.apache.zookeeper.server.quorum.QuorumCnxManager> org.apache.zookeeper.server.quorum.QuorumCnxManager$InitialMessage$InitialMessageException: Badly formed address: 2001:db8:0:0:0:0:0:2:3888{noformat}\r\nOur zoo.cfg.dynamic uses literal IPv6 addresses which according to ZOOKEEPER-1460 is supported.\r\n{noformat}\r\nserver.1=[2001:db8::2]:2888:3888\r\nserver.2=[2001:db8::3]:2888:3888\r\nserver.3=[2001:db8::4]:2888:3888{noformat}\r\n\r\n\r\nDigging into QuorumCnxManager.java, InitialMessage.parse attemps to seperate the host portion from the port portion using \":\" as a delimeter, which is a problem for IPv6 IPs. And there's this comment:\r\n{code:java}\r\n// FIXME: IPv6 is not supported. Using something like Guava's HostAndPort\r\n// parser would be good.{code}\r\nSo it looks like peers address:port is failing to be parsed if they are specified as literal IPv6 addresses. To confirm a workaround, I replaced my zoo.cfg.dynamic with hostnames instead, and everything worked as expected.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "Comments": ["GitHub user troodes opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/489\n\n    ZOOKEEPER-2989: IPv6 literal address causes problems for Quorum members\n\n    Handle tokenizing of \"address:port\" when address is an IPv6 literal address.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/troodes/zookeeper ZOOKEEPER-2989\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/489.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #489\n    \n----\ncommit 9e31f3448b6d5a950ea70ae715f26a8a0ca456d0\nAuthor: Rick Trudeau <rick.trudeau@...>\nDate:   2018-03-13T19:41:43Z\n\n    ZOOKEEPER-2989: IPv6 literal address causes problems for Quorum members\n\n----\n", "Github user maoling commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/489\n  \n    @troodes  can we move on ?\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1755//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1755//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1755//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1758//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1758//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1758//console\n\nThis message is automatically generated."]}, {"Issue key": "ZOOKEEPER-2988", "Request type": "Bug", "Datetime creation": "2018-03-01 20:18:13", "Datetime resolution": "2018-04-30 04:35:29", "Reporter login": "nixon", "Reporter name": "Brian Nixon", "Assignee login": "nixon", "Assignee name": "Brian Nixon", "Status": "Closed", "Description": "We've observed the following behavior in elections when a node is lagging behind the quorum in its view of the ensemble topology.\r\n\r\n- Node A is operating with node B in its voting view, but without view of node C.\r\n\r\n- B votes for C.\r\n\r\n- A then switches its vote to C, but throws a NPE when attempting to connect.\r\n\r\nThis causes the QuorumPeer to spin up a Follower only to immediately have it shutdown by the exception.\r\n\r\nIdeally, A would not advertise a vote for a server that it will not follow.", "Comments": ["GitHub user enixon opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/476\n\n    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server \u2026\n\n    \u2026id not in their voting view\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-2988\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/476.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #476\n    \n----\ncommit 1862a718168ee07287d0b9769a0f4ce20bd1bd32\nAuthor: Brian Nixon <nixon@...>\nDate:   2018-03-01T19:19:51Z\n\n    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server id not in their voting view\n\n----\n", "GitHub user enixon opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/477\n\n    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server \u2026\n\n    \u2026id not in their voting view\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-2988-3.5\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/477.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #477\n    \n----\ncommit a1364d8c4ec9fdf1c4210b6485a6a143c1e14f5f\nAuthor: Brian Nixon <nixon@...>\nDate:   2018-03-01T19:21:47Z\n\n    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server id not in their voting view\n\n----\n", "GitHub user enixon opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/478\n\n    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server \u2026\n\n    \u2026id not in their voting view\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/enixon/zookeeper ZOOKEEPER-2988-3.4\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/478.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #478\n    \n----\ncommit 6fc857a1cfe97a46a4f453613b95f9682adcce96\nAuthor: Brian Nixon <nixon@...>\nDate:   2018-03-01T19:19:51Z\n\n    ZOOKEEPER-2988: NPE triggered if server receives a vote for a server id not in their voting view\n\n----\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171972029\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {\n                 Assert.assertNull(\"server \" + i + \" should not have /zk\" + leader, servers.zk[i].exists(\"/zk\" + leader, false));\n             }\n         }\n    +\n    +    /**\n    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.\n    +     */\n    +    @Test\n    +    public void testLeaderOutOfView() throws Exception {\n    +        ClientBase.setupTestEnv();\n    +\n    +        Layout layout = new PatternLayout(\"%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n\");\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.DEBUG);\n    +        Logger qlogger = Logger.getLogger(\"org.apache.zookeeper.server.quorum\");\n    +        qlogger.addAppender(appender);\n    +\n    +        try {\n    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();\n    +\n    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + \"\\n\" + getUniquePortCfgForId(2);\n    +            String quorumCfgComplete = quorumCfgIncomplete + \"\\n\" + getUniquePortCfgForId(3);\n    +\n    +            // Node 1 is started without the leader (3) in its config view\n    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);\n    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);\n    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);\n    +\n    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3\n    +            q1.start();\n    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up\n    +            q3.start();\n    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 2 started last, kicks off leader election\n    +            q2.start();\n    +\n    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state\n    +            Assert.assertTrue(\"waiting for server 2 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));\n    +\n    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);\n    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);\n    +\n    +            q1.shutdown();\n    +            q2.shutdown();\n    +            q3.shutdown();\n    +\n    +            Assert.assertTrue(\"waiting for server 1 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP1,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 2 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP2,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP3,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +\n    +        } finally {\n    +            qlogger.removeAppender(appender);\n    +        }\n    +\n    +        // Verify that Node 1 never threw an exception\n    +        LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));\n    +        String line;\n    +        boolean found = false;\n    +        Pattern p = Pattern.compile(\".*java.lang.NullPointerException.*\");\n    +        while ((line = r.readLine()) != null) {\n    +            found = p.matcher(line).matches();\n    +            if (found) {\n    +                break;\n    +            }\n    +        }\n    +\n    +        Assert.assertFalse(\"Node should not attempt connection to out of view leader\", found);\n    +    }\n    +\n    +    private String getUniquePortCfgForId(int id) {\n    +        return String.format(\"server.%d=127.0.0.1:%d:%d\", id, PortAssignment.unique(), PortAssignment.unique());\n    +    }\n    +\n    +    private QuorumPeer waitForQuorumPeer(MainThread mainThread, int timeout) {\n    +        long start = Time.currentElapsedTime();\n    +        while (true) {\n    +            QuorumPeer quorumPeer = mainThread.getQuorumPeer();\n    +            if (quorumPeer != null) {\n    +                return quorumPeer;\n    +            }\n    +\n    +            if (Time.currentElapsedTime() > start + timeout) {\n    +                LOG.error(\"Timed out while waiting for QuorumPeer\");\n    +                break;\n    +            }\n    +\n    +            try {\n    +                Thread.sleep(250);\n    +            } catch (InterruptedException e) {\n    +                // ignore\n    +            }\n    +        }\n    +        throw new NullPointerException();\n    --- End diff --\n    \n    Can we use a better exception?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171972608\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {\n                 Assert.assertNull(\"server \" + i + \" should not have /zk\" + leader, servers.zk[i].exists(\"/zk\" + leader, false));\n             }\n         }\n    +\n    +    /**\n    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.\n    +     */\n    +    @Test\n    +    public void testLeaderOutOfView() throws Exception {\n    +        ClientBase.setupTestEnv();\n    +\n    +        Layout layout = new PatternLayout(\"%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n\");\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.DEBUG);\n    +        Logger qlogger = Logger.getLogger(\"org.apache.zookeeper.server.quorum\");\n    +        qlogger.addAppender(appender);\n    +\n    +        try {\n    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();\n    +\n    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + \"\\n\" + getUniquePortCfgForId(2);\n    +            String quorumCfgComplete = quorumCfgIncomplete + \"\\n\" + getUniquePortCfgForId(3);\n    +\n    +            // Node 1 is started without the leader (3) in its config view\n    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);\n    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);\n    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);\n    +\n    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3\n    +            q1.start();\n    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up\n    +            q3.start();\n    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 2 started last, kicks off leader election\n    +            q2.start();\n    +\n    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state\n    +            Assert.assertTrue(\"waiting for server 2 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));\n    +\n    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);\n    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);\n    +\n    +            q1.shutdown();\n    --- End diff --\n    \n    is there a way we can use the existing tearDown code. So we make sure we never leave any servers running even if an assertion fails?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171972228\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {\n                 Assert.assertNull(\"server \" + i + \" should not have /zk\" + leader, servers.zk[i].exists(\"/zk\" + leader, false));\n             }\n         }\n    +\n    +    /**\n    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.\n    +     */\n    +    @Test\n    +    public void testLeaderOutOfView() throws Exception {\n    +        ClientBase.setupTestEnv();\n    +\n    +        Layout layout = new PatternLayout(\"%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n\");\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.DEBUG);\n    +        Logger qlogger = Logger.getLogger(\"org.apache.zookeeper.server.quorum\");\n    +        qlogger.addAppender(appender);\n    +\n    +        try {\n    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();\n    +\n    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + \"\\n\" + getUniquePortCfgForId(2);\n    +            String quorumCfgComplete = quorumCfgIncomplete + \"\\n\" + getUniquePortCfgForId(3);\n    +\n    +            // Node 1 is started without the leader (3) in its config view\n    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);\n    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);\n    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);\n    +\n    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3\n    +            q1.start();\n    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up\n    +            q3.start();\n    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 2 started last, kicks off leader election\n    +            q2.start();\n    +\n    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state\n    +            Assert.assertTrue(\"waiting for server 2 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));\n    +\n    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);\n    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);\n    +\n    +            q1.shutdown();\n    +            q2.shutdown();\n    +            q3.shutdown();\n    +\n    +            Assert.assertTrue(\"waiting for server 1 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP1,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 2 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP2,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP3,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +\n    +        } finally {\n    +            qlogger.removeAppender(appender);\n    +        }\n    +\n    +        // Verify that Node 1 never threw an exception\n    +        LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));\n    +        String line;\n    +        boolean found = false;\n    +        Pattern p = Pattern.compile(\".*java.lang.NullPointerException.*\");\n    +        while ((line = r.readLine()) != null) {\n    +            found = p.matcher(line).matches();\n    +            if (found) {\n    +                break;\n    +            }\n    +        }\n    +\n    +        Assert.assertFalse(\"Node should not attempt connection to out of view leader\", found);\n    +    }\n    +\n    +    private String getUniquePortCfgForId(int id) {\n    +        return String.format(\"server.%d=127.0.0.1:%d:%d\", id, PortAssignment.unique(), PortAssignment.unique());\n    +    }\n    +\n    +    private QuorumPeer waitForQuorumPeer(MainThread mainThread, int timeout) {\n    --- End diff --\n    \n    I believe this has the potential to be flaky since we can return `quorumPeer` before the thread actually starts. We should ensure that the thread started.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171970721\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {\n                 Assert.assertNull(\"server \" + i + \" should not have /zk\" + leader, servers.zk[i].exists(\"/zk\" + leader, false));\n             }\n         }\n    +\n    +    /**\n    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.\n    +     */\n    +    @Test\n    +    public void testLeaderOutOfView() throws Exception {\n    +        ClientBase.setupTestEnv();\n    +\n    +        Layout layout = new PatternLayout(\"%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n\");\n    --- End diff --\n    \n    It would be great if we did not specify the pattern as a literal. Take a look at some of the other tests and see if the way they get the patternlayout could apply here (`testElectionFraud` for example).\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171973588\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -1012,4 +1012,113 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {\n                 Assert.assertNull(\"server \" + i + \" should not have /zk\" + leader, servers.zk[i].exists(\"/zk\" + leader, false));\n             }\n         }\n    +\n    +    /**\n    +     * Verify that a node without the leader in its view will not attempt to connect to the leader.\n    +     */\n    +    @Test\n    +    public void testLeaderOutOfView() throws Exception {\n    +        ClientBase.setupTestEnv();\n    +\n    +        Layout layout = new PatternLayout(\"%d{ISO8601} [,yid:%X{myid}] - %5p [%t:%C{1}@%L] - %m%n\");\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.DEBUG);\n    +        Logger qlogger = Logger.getLogger(\"org.apache.zookeeper.server.quorum\");\n    +        qlogger.addAppender(appender);\n    +\n    +        try {\n    +            final int CLIENT_PORT_QP1 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP2 = PortAssignment.unique();\n    +            final int CLIENT_PORT_QP3 = PortAssignment.unique();\n    +\n    +            String quorumCfgIncomplete = getUniquePortCfgForId(1) + \"\\n\" + getUniquePortCfgForId(2);\n    +            String quorumCfgComplete = quorumCfgIncomplete + \"\\n\" + getUniquePortCfgForId(3);\n    +\n    +            // Node 1 is started without the leader (3) in its config view\n    +            MainThread q1 = new MainThread(1, CLIENT_PORT_QP1, quorumCfgIncomplete);\n    +            MainThread q2 = new MainThread(2, CLIENT_PORT_QP2, quorumCfgComplete);\n    +            MainThread q3 = new MainThread(3, CLIENT_PORT_QP3, quorumCfgComplete);\n    +\n    +            // Node 1 must be started first, before quorum is formed, to trigger the attempted invalid connection to 3\n    +            q1.start();\n    +            QuorumPeer quorumPeer1 = waitForQuorumPeer(q1, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer1.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 3 started second to avoid 1 and 2 forming a quorum before 3 starts up\n    +            q3.start();\n    +            QuorumPeer quorumPeer3 = waitForQuorumPeer(q3, CONNECTION_TIMEOUT);\n    +            Assert.assertTrue(quorumPeer3.getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +\n    +            // Node 2 started last, kicks off leader election\n    +            q2.start();\n    +\n    +            // Nodes 2 and 3 now form quorum and fully start. 1 attempts to vote for 3, fails, returns to LOOKING state\n    +            Assert.assertTrue(\"waiting for server 2 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP2, CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 to start\",\n    +                    ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT_QP3, CONNECTION_TIMEOUT));\n    +\n    +            Assert.assertTrue(q1.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LOOKING);\n    +            Assert.assertTrue(q2.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.FOLLOWING);\n    +            Assert.assertTrue(q3.getQuorumPeer().getPeerState() == QuorumPeer.ServerState.LEADING);\n    +\n    +            q1.shutdown();\n    +            q2.shutdown();\n    +            q3.shutdown();\n    +\n    +            Assert.assertTrue(\"waiting for server 1 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP1,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 2 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP2,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +            Assert.assertTrue(\"waiting for server 3 down\",\n    +                    ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT_QP3,\n    +                            ClientBase.CONNECTION_TIMEOUT));\n    +\n    +        } finally {\n    +            qlogger.removeAppender(appender);\n    +        }\n    +\n    +        // Verify that Node 1 never threw an exception\n    +        LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));\n    +        String line;\n    +        boolean found = false;\n    +        Pattern p = Pattern.compile(\".*java.lang.NullPointerException.*\");\n    --- End diff --\n    \n    It would be great to have a more direct way of expressing that this member never enters the following state. Can we check the logs for `FOLLOWING` like in `testElectionFraud`?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171972767\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---\n    @@ -1064,7 +1065,12 @@ else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {\n                             break;\n                         }\n                     } else {\n    -                    LOG.warn(\"Ignoring notification from non-cluster member \" + n.sid);\n    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.leader)) {\n    +                        LOG.warn(\"Ignoring notification for non-cluster member sid {} from sid {}\", n.leader, n.sid);\n    +                    }\n    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.sid)) {\n    +                        LOG.warn(\"Ignoring notification from non-cluster member sid {}\", n.sid);\n    --- End diff --\n    \n    nit: lets say \"quorum\" instead of \"cluster\"\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r171964902\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---\n    @@ -1064,7 +1065,12 @@ else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {\n                             break;\n                         }\n                     } else {\n    -                    LOG.warn(\"Ignoring notification from non-cluster member \" + n.sid);\n    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.leader)) {\n    +                        LOG.warn(\"Ignoring notification for non-cluster member sid {} from sid {}\", n.leader, n.sid);\n    +                    }\n    +                    if (!self.getCurrentAndNextConfigVoters().contains(n.sid)) {\n    +                        LOG.warn(\"Ignoring notification from non-cluster member sid {}\", n.sid);\n    --- End diff --\n    \n    lets log which member was voted for\n", "Github user maoling commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    @enixon can we move on ?\n", "Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    @maoling I was about 2/3 done with cleaning up this diff when I got dragged into different projects. Thanks for the ping, I'll try to update here this week.\n", "Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    Made all changes requested in comments, I can alter the pull requests for the other ZooKeeper branches once we reach agreement on this one.\n", "Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    @enixon testLeaderOutOfView deterministically fails for me both locally and on Jenkins. Please take a look.\n", "Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    Tests passing again.\r\n    \r\n    This is what can happen when you use a different logging config and your tests rely on scraping the logs.  :(\n", "Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r182127687\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---\n    @@ -927,10 +927,11 @@ public Vote lookForLeader() throws InterruptedException {\n                                 tmpTimeOut : maxNotificationInterval);\n                         LOG.info(\"Notification time out: \" + notTimeout);\n                     } \n    -                else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {\n    +                else if (self.getCurrentAndNextConfigVoters().contains(n.sid) &&\n    --- End diff --\n    \n    As this PR modifies this line and add similar ones, wouldn't be the case of creating a private method with a meaningful name like below?\r\n    ```\r\n    private boolean configVotersContains(long sid) {\r\n        return self.getCurrentAndNextConfigVoters().contains(sid);\r\n    }\r\n    ```\r\n    \r\n    This makes this line and the lines below more readable, imho.\n", "Github user enixon commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/476#discussion_r182175483\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java ---\n    @@ -927,10 +927,11 @@ public Vote lookForLeader() throws InterruptedException {\n                                 tmpTimeOut : maxNotificationInterval);\n                         LOG.info(\"Notification time out: \" + notTimeout);\n                     } \n    -                else if (self.getCurrentAndNextConfigVoters().contains(n.sid)) {\n    +                else if (self.getCurrentAndNextConfigVoters().contains(n.sid) &&\n    --- End diff --\n    \n    There are five uses of `getCurrentAndNextConfigVoters().contains` in the class, seems reasonable to make it a method.\n", "Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    What's the build failure on this commit?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/476\n  \n    @enixon this: https://issues.apache.org/jira/browse/INFRA-16349\n", "Issue resolved by pull request 476\n[https://github.com/apache/zookeeper/pull/476]", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/476\n", "I've committed this to 3.5 and master. Thanks for the patch [~nixon]. Is the patch also applicable to 3.4? I assume this happens only in 3.5+ with dynamic reconfiguration.", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #6 (See [https://builds.apache.org/job/ZooKeeper-trunk/6/])\nZOOKEEPER-2988: NPE triggered if server receives a vote for a server \u2026 (hanm: rev 2022766ec907f63b1b43fc5455e9e7761cd332f6)\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java\n", "[~hanm] thanks for merging it to 3.5 too, I'll shut down that second pr. This bug is applicable to 3.4 as well - imo it's a worse danger on that branch since its easy for configuration files to be stale. I'll fix up pr 478 for the 3.4 branch to reflect the comments I got on pr 476 so it can be ready for review.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1655//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1655//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1655//console\n\nThis message is automatically generated.", "Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/477\n  \n    Change merged to branch-3.5 with https://github.com/apache/zookeeper/pull/476, closing this PR as redundant. \n", "Github user enixon closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/477\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1656//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1656//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1656//console\n\nThis message is automatically generated.", "Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/478\n  \n    The only failure report out of Jenkins is \"Test org.apache.zookeeper.test.FollowerResyncConcurrencyTest FAILED (crashed)\". I'm unable to repro any issue with that test on my branch locally, is there a good way to re-run the test?\n", "Github user hanm commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/478\n  \n    @enixon \"FollowerResyncConcurrencyTest \" is a known flaky test (and the error in this case is infrastructure issues - the JVM abnormally exit). I tested your patch using a Jenkins job and everything looks good. Committed, please close this pull request.\r\n    \r\n    >> is there a good way to re-run the test\r\n    \r\n    P.S. to kick off the pre-commit build bot, you can close the pull request and reopen it.\n", "{quote}This bug is applicable to 3.4 as well - imo it's a worse danger on that branch since its easy for configuration files to be stale.\r\n{quote}\r\nMake sense. Just committed the patch for branch-3.4, and updated the Jira fixed version to include 3.4.", "Github user enixon commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/478\n  \n    Thanks, @hanm !\n", "Github user enixon closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/478\n"]}, {"Issue key": "ZOOKEEPER-2987", "Request type": "Bug", "Datetime creation": "2018-02-28 22:22:40", "Datetime resolution": null, "Reporter login": "hamsterready@gmail.com", "Reporter name": "Maciej Lopacinski", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "The order of params passed to thePurgeTxnLog via the zkCleanup.sh script is invalid.\r\n\r\n\r\n\r\nSee PR for details.", "Comments": ["Github user hamsterready commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/475\n  \n    https://issues.apache.org/jira/browse/ZOOKEEPER-2987\n"]}, {"Issue key": "ZOOKEEPER-2986", "Request type": "Bug", "Datetime creation": "2018-02-22 19:25:57", "Datetime resolution": null, "Reporter login": "moetemad", "Reporter name": "Mohammad Etemad", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "Zookeeper 3.5.3-beta is throwing the following error.I am facing the issue of\"My id 1 not in the peer list\". If I use the alpha version (3.5.2) and then upgrade to the 3.5.3 beta version, the problem goes away. But if I implement the 3.5.3 version directly, the clustering never happens and I get the error. To give you a bit more overview of the implementation:\r\n \r\n The pods use a persistent volume claim on a gluster volume. Each pod is assigned its own volume on the gluster file system. I run zookeeper as a stateful set with 3 pods.\r\n \r\n In my cfg file I have:\r\n \r\n{code:java}\r\nstandaloneEnabled=false \r\ntickTime=2000 \r\ninitLimit=10 \r\nsyncLimit=5 \r\n#snapshot file dir \r\ndataDir=/data \r\n#tran log dir \r\ndataLogDir=/dataLog \r\n#zk log dir \r\nlogDir=/logs \r\n4lw.commands.whitelist=* \r\ndynamicConfigFile=/opt/zookeeper/conf/zoo_replicated1.cfg.dynamic{code}\r\n\r\n and in my cfg.dynamic file I have:\r\n \r\n{code:java}\r\nserver.0=zookeeper-0:2888:3888 \r\nserver.1=zookeeper-1:2888:3888 \r\nserver.2=zookeeper-2:2888:3888{code}\r\n\r\n Has there been any change on the clustering side of things that makes the new version not work?\r\n Sample logs:\r\n{code:java}\r\n2018-02-22 19:21:18,078 [myid:1] - ERROR [main:QuorumPeerMain@98] - Unexpected exception, exiting abnormally\r\n java.lang.RuntimeException: My id 1 not in the peer list\r\n at org.apache.zookeeper.server.quorum.QuorumPeer.start(QuorumPeer.java:770)\r\n at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:185)\r\n at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:120)\r\n at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:79){code}", "Comments": ["[~moetemad]\r\n\r\nHave you found the fact?\r\n\r\nmay be a mistake in your conf file?", "[~maoling]No. I had to revert back to zookeeper 3.4.11 to get the issue fixed.", "[~moetemad]\r\n\r\nOoo, unbelievable. Let me recheck the*Zookeeper 3.5.3-beta*"]}, {"Issue key": "ZOOKEEPER-2985", "Request type": "Bug", "Datetime creation": "2018-02-22 16:59:02", "Datetime resolution": null, "Reporter login": "cthunes", "Reporter name": "Chris Thunes", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "We recently observed an inconsistency in our Kafka cluster which we tracked down to ZooKeeper sessions expiring and then re-appearing after a ZooKeeper leadership failover. The Kafka nodes received session \"Expired\" events, leading to them starting new sessions and attempting to re-create some ephemeral nodes (broker ID nodes in kafka/brokers/ids specifically). However, between receiving the session Expired event and establishing a new session a leadership failover occurred within the ZooKeeper cluster which resulted in the expired session re-appearing. When Kafka attempted to re-create the ephemeral nodes mentioned above it (unexpectedly) received NODEEXISTS errors.\r\n\r\nThis behavior is a result of how session expiration is handled by the leader. Specifically, the expired session is marked as \"closing\" immediately upon expiration (in SessionTrackerImpl) and_before_ the corresponding \"closeSession\" entry is committed. A client can therefore receive a session Expired event before its session is fully closed. A leadership failover which results in the loss of the (uncommitted) closeSession entry thus leads to the sessions' ephemeral nodes \"re-appearing\" until another expiration of the old session on the new leader takes place.\r\n\r\nI'm not certain if this should be considered a bug or an edge case that client are expected to handle. If it is the latter then I think it would be good to include this in the Programmer's Guide in the documentation.\r\n\r\nIf it's helpful I have code to reproduce this on an in-process cluster running 3.4.11 or 3.5.3-beta.", "Comments": ["Hi.Chris Thunes. We have met this bug in our product. But we didn't find out the cause then. We deleted the ephemeral node that should have been expired and let the bug go.\r\n\r\nMay you tell me how to find out the detail cause? by debug log ? or something else?\r\n\r\nthanks a lot.\r\n\r\n", "[~cthunes]\r\n\r\nThanks for reporting this.\r\n\r\nI think this is related to https://issues.apache.org/jira/browse/ZOOKEEPER-1208which has intentionally introduced the closing state for events which have been expired, but `closeSession` has not been acknowledged by the quorum.\r\n\r\nWill the ephemerals be removed eventually once the quorum established or they survive forever because of the race condition?", "The ephemeral nodes do eventually get removed once thenew ZK leader marks the session as expired and performs the associated session tear down.\r\n\r\nOne fix may be to have the server close the client connection, _without_ sending the Expired event, if it finds the session is in the closing state with an uncommitted closeSession entry. Alternatively, session re-validation could be blocked for \"closing\" sessions until their corresponding closeSession entry is committed.", "{quote}\r\nIf it's helpful I have code to reproduce this on an in-process cluster running 3.4.11 or 3.5.3-beta.\r\n{quote}\r\n[~cthunes], Test code surely be helpful in understanding this issue. Please share the test code, if you already have,  which can reproduce this issue."]}, {"Issue key": "ZOOKEEPER-2984", "Request type": "Bug", "Datetime creation": "2018-02-21 08:21:47", "Datetime resolution": null, "Reporter login": "yayan", "Reporter name": "Yayan Sinchan", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "h2. ", "Comments": ["Hi too,,,yeez", "[~Yayan]\r\n\r\nCould you plz give this issue more details?"]}, {"Issue key": "ZOOKEEPER-2983", "Request type": "Improvement", "Datetime creation": "2018-02-20 13:43:33", "Datetime resolution": "2018-06-27 14:40:48", "Reporter login": "mfenes", "Reporter name": "Mark Fenes", "Assignee login": "mfenes", "Assignee name": "Mark Fenes", "Status": "Resolved", "Description": "Printing the classpath helps to verify that we have only the intended classes, jars on the classpath, e.g. clover.jar is included only when running coverage tests.\r\n\r\n\r\n\r\n", "Comments": ["GitHub user mfenes opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/469\n\n    ZOOKEEPER-2983: Print the classpath when running compile and test ant targets\n\n    ZOOKEEPER-2983: Print the classpath when running compile and test ant targets\r\n    \r\n    I've added 2 new ant targets to print the compile and test classpath in a formatted way.\r\n    Printing the classpath helps to verify that we have only the intended classes, jars on the classpath, e.g. clover.jar is included only when running coverage tests.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2983\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/469.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #469\n    \n----\ncommit 44b1f07cd129bc1f77fcb27bb509d9890d10207f\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-02-20T14:12:52Z\n\n    ZOOKEEPER-2983: Print the classpath when running compile and test ant targets\n\n----\n", "GitHub user mfenes opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/470\n\n    ZOOKEEPER-2983: Print the classpath when running compile and test ant targets\n\n    ZOOKEEPER-2983: Print the classpath when running compile and test ant targets\r\n    \r\n    I've added 2 new ant targets to print the compile and test classpath in a formatted way.\r\n    Printing the classpath helps to verify that we have only the intended classes, jars on the classpath, e.g. clover.jar is included only when running coverage tests.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2983_3.5\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/470.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #470\n    \n----\ncommit 4e3b2d16be7f58064ff73206d96f5fe477c3d3fa\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-02-20T15:58:04Z\n\n    ZOOKEEPER-2983: Print the classpath when running compile and test ant targets\n\n----\n", "GitHub user mfenes opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/471\n\n    ZOOKEEPER-2983: Print the classpath when running compile and test ant targets\n\n    ZOOKEEPER-2983: Print the classpath when running compile and test ant targets\r\n    \r\n    I've added 2 new ant targets to print the compile and test classpath in a formatted way.\r\n    Printing the classpath helps to verify that we have only the intended classes, jars on the classpath, e.g. clover.jar is included only when running coverage tests.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2983_3.4\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/471.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #471\n    \n----\ncommit 56ac30cd88744f8b0bc850235263ad627804c36c\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-02-20T16:07:46Z\n\n    ZOOKEEPER-2983: Print the classpath when running compile and test ant targets\n\n----\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/469#discussion_r169435199\n  \n    --- Diff: build.xml ---\n    @@ -1861,4 +1861,18 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n            <delete dir=\"${build.dir.eclipse}\" />\n          </target>\n     \n    +    <target name=\"print_compile_classpath\">\n    --- End diff --\n    \n    nit: I think most of our other ant targets use \"-\" instead of \"_\" between words.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/469#discussion_r169435681\n  \n    --- Diff: build.xml ---\n    @@ -1861,4 +1861,18 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n            <delete dir=\"${build.dir.eclipse}\" />\n          </target>\n     \n    +    <target name=\"print_compile_classpath\">\n    +        <pathconvert pathsep=\"${line.separator}|   |-- \" property=\"echo.compile.classpath\" refid=\"java.classpath\"/>\n    --- End diff --\n    \n    I found a \"one-liner\" for this here: http://ant.apache.org/manual/using.html#pathshortcut\r\n    \r\n    For example:\r\n    ```xml\r\n    <echo>${toString:java.classpath}</echo>\r\n    ```\r\n    \r\n    What do you think?\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/469#discussion_r169691663\n  \n    --- Diff: build.xml ---\n    @@ -1861,4 +1861,18 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n            <delete dir=\"${build.dir.eclipse}\" />\n          </target>\n     \n    +    <target name=\"print_compile_classpath\">\n    +        <pathconvert pathsep=\"${line.separator}|   |-- \" property=\"echo.compile.classpath\" refid=\"java.classpath\"/>\n    --- End diff --\n    \n    The difference between the two is that the one I used prints the paths in a pretty printed way, while the \"one-liner\" prints all paths continuously which is hard to read.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/469#discussion_r169695831\n  \n    --- Diff: build.xml ---\n    @@ -1861,4 +1861,18 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n            <delete dir=\"${build.dir.eclipse}\" />\n          </target>\n     \n    +    <target name=\"print_compile_classpath\">\n    --- End diff --\n    \n    True, my intention with the \"_\" was to indicate that these targets are purely utility targets i.e. it does not make too much sense to run them individually, unlike clean, compile, test-core-java etc. targets. If you don't like this idea, I can replace the \"_\"-s with \"-\"-s if you wish.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/469#discussion_r170379824\n  \n    --- Diff: build.xml ---\n    @@ -1861,4 +1861,18 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n            <delete dir=\"${build.dir.eclipse}\" />\n          </target>\n     \n    +    <target name=\"print_compile_classpath\">\n    --- End diff --\n    \n    let's replace them for the sake of consistency\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/469#discussion_r170379991\n  \n    --- Diff: build.xml ---\n    @@ -1861,4 +1861,18 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n            <delete dir=\"${build.dir.eclipse}\" />\n          </target>\n     \n    +    <target name=\"print_compile_classpath\">\n    +        <pathconvert pathsep=\"${line.separator}|   |-- \" property=\"echo.compile.classpath\" refid=\"java.classpath\"/>\n    --- End diff --\n    \n    fine with me\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/469#discussion_r179420191\n  \n    --- Diff: build.xml ---\n    @@ -1861,4 +1861,18 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n            <delete dir=\"${build.dir.eclipse}\" />\n          </target>\n     \n    +    <target name=\"print_compile_classpath\">\n    --- End diff --\n    \n    @afine ok, I've replaced \"_\" with \"-\" in the new ant target names.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/469\n  \n    @phunt @afine I believe @mfenes finished all the requested changes on this patch. Shall we merge it?\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/469\n  \n    @mfenes @anmolnar @afine   - ant already has a -d and a -v option, why do we need to add additional? Is it really necessary that all the builds include this information? Why is -d/-v not sufficient?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/469\n  \n    @phunt This approach is a bit prettier and might help diagnose classpath-related problems on build servers, but I can live without it. Given that we're migrating to Maven, this patch wouldn't make any difference now.\n", "Github user mfenes commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/469\n  \n    @phunt @anmolnar Should I close this PR then?\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/469\n  \n    Yes, please close it out. Thanks @mfenes , et. al.\n", "Github user mfenes closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/469\n", "Github user mfenes closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/470\n", "Github user mfenes closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/471\n"]}, {"Issue key": "ZOOKEEPER-2982", "Request type": "Bug", "Datetime creation": "2018-02-19 19:28:06", "Datetime resolution": "2018-05-08 22:57:31", "Reporter login": "eronwright", "Reporter name": "Eron Wright", "Assignee login": "fpj", "Assignee name": "Flavio Paiva Junqueira", "Status": "Resolved", "Description": "ZOOKEEPER-1506 fixed a DNS resolution issue in 3.4.  Some portions of the fix haven't yet been ported to 3.5.\r\n\r\nTo recap the outstanding problem in 3.5, if a given ZK server is started before all peer addresses are resolvable, that server may cache a negative lookup result and forever fail to resolve the address.    For example, deploying ZK 3.5 to Kubernetes using a StatefulSet plus a Service (headless) may fail because the DNS records are created lazily.\r\n\r\n{code}\r\n2018-02-18 09:11:22,583 [myid:0] - WARN  [QuorumPeer[myid=0](plain=/0:0:0:0:0:0:0:0:2181)(secure=disabled):Follower@95] - Exception when following the leader\r\njava.net.UnknownHostException: zk-2.zk.default.svc.cluster.local\r\n        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)\r\n        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n        at java.net.Socket.connect(Socket.java:589)\r\n        at org.apache.zookeeper.server.quorum.Learner.sockConnect(Learner.java:227)\r\n        at org.apache.zookeeper.server.quorum.Learner.connectToLeader(Learner.java:256)\r\n        at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:76)\r\n        at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1133)\r\n{code}\r\n\r\nIn the above example, the address `zk-2.zk.default.svc.cluster.local` was not resolvable when the server started, but became resolvable shortly thereafter.    The server should eventually succeed but doesn't.", "Comments": ["Looking at `Learner` in 3.4 versus 3.5, a necessary call within `findLeader` to `recreateSocketAddresses` was added in 3.4 but not ported to 3.5.  The suggested fix is to add the call.\r\n\r\nNote that other elements of ZOOKEEPR-1506 were already ported:\r\nhttps://github.com/apache/zookeeper/commit/d2a49163b7bc7c9589140dbba7f60e591028f908\r\n", "GitHub user EronWright opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/468\n\n    ZOOKEEPER-2982: Re-try DNS hostname -> IP resolution if node connection fails\n\n    This PR ports a fix from the 3.4 to the 3.5 branch, that was originally made in ZOOKEEPER-1506.\r\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/EronWright/zookeeper ZOOKEEPER-2982\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/468.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #468\n    \n----\ncommit 4f8f3ce8074b878f2a6e32c15ec177f4dcd050e0\nAuthor: Eron Wright <eron.wright@...>\nDate:   2018-02-19T23:05:44Z\n\n    ZOOKEEPER-2982 Re-try DNS hostname -> IP resolution if node connection fails\n\n----\n", "I'm wondering if  [~rthille] can chime in on this.\r\n\r\nIt looks like the change this JIRA is talking about is referenced by https://issues.apache.org/jira/browse/ZOOKEEPER-1506?focusedCommentId=14711955&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-14711955\r\n\r\nIs there a reason why this change was left out of branch-3.5 (and master)?\r\n\r\nMy guess is that in master and branch-3.5 we always call `recreateSocketAddresses` in `connectOne` which should be called during leader election of communication to another quorum member stops. Again, it would be great to have [~rthille] confirm/tell me how wrong I am.", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/468\n  \n    @EronWright I left a comment in the JIRA. \n", "I can confirm that the fix is effective in my K8s environment.  I discovered the problem while using 3.5.3-beta.", "I don't see a reason why it would be a problem to invoke \\{recreateSocketAddresses} from \\{Learner.findLeader}. That method is simply returning the \\{QuorumServer} instance corresponding to the server it believes to be the leader.\r\n\r\nThe thing that is puzzling is how a server ended up voting for another server that it can't talk to (because the name doesn't resolve). Is it a race that eventually goes away?", "Looking at the code a bit, the learner makes a raw socket connection (`connectToLeader` -> `sockConnect`) not involving `QuorumCnxManager`.   Sorry I don't know all the details.   ", "[~eronwright]a follower invokes followLeader after leader election completes. followLeader makes a call to connectToLeader.", "Sorry I was just responding to [~abrahamfine] regarding why `connectOne` doesn't cover all cases.\r\n\r\nBased on empirical evidence I think this patch is critical for ZK 3.5.", "[~eronwright] in your set up, once you get that exception, is it the case that the ensemble never recovers (it is never able to elect a leader)?", "[~fpj] that is correct; without the patch, the ensemble never comes online.", "[~eronwright] I think `connectToLeader` uses the address from `findLeader` which should read the `QuorumVerifier` updated by `recreateSocketAddresses` called in `connectOne`.\r\n\r\nI have a feeling it would be tough, but if you could come up with a test to reproduce the issue you are facing or give us step by step instructions to reproduce (ideally outside of K8s) that would help us confirm the problem.", "The step-by-step instructions are:\r\n1. configure a three node ensemble (0,1,2).\r\n2. by whatever means, configure 0 such that it cannot resolve the DNS address of 1 and/or 2.   Do likewise for other servers.\r\n3. Start the ensemble, observing the {{UnknownHostException}} as shown in the description.\r\n4. While the servers are running, fix the DNS issue so that the addresses may be resolved.\r\n5. Observe that the exception continues to occur.", "[~eronwright] could you upload some server logs so that we can have a look, please?", "Attached 'fixed.log' which demonstrates the behavior after the fix is applied.   Let me know if you also need to see the output from an unpatched cluster (I would prefer not to spend the time to get that).", "[~eronwright]\r\n\r\nI've tried this on localhost by adding fake dns names to /etc/hosts like this:\r\n{noformat}\r\n127.0.0.1 one.andor.org\r\n127.0.0.1 two.andor.org\r\n#127.0.0.1 three.andor.org{noformat}\r\nFirst, all of the 3 entries were commented out and I started ZooKeeper nodes with the following server config:\r\n{noformat}\r\nserver.1=one.andor.org:2222:2223\r\nserver.2=two.andor.org:3333:3334\r\nserver.3=three.andor.org:4444:4445\r\n{noformat}\r\nNodes were unable to connect because of the following resolution error:\r\n{noformat}\r\n2018-02-21 14:33:25,509 [myid:1] - WARN [QuorumPeer[myid=1](plain=/0:0:0:0:0:0:0:0:2181)(secure=disabled):QuorumPeer$QuorumServer@172] - Failed to resolve address: two.andor.org\r\njava.net.UnknownHostException: two.andor.org\r\nat java.net.InetAddress.getAllByName0(InetAddress.java:1273)\r\nat java.net.InetAddress.getAllByName(InetAddress.java:1185)\r\nat java.net.InetAddress.getAllByName(InetAddress.java:1119)\r\nat java.net.InetAddress.getByName(InetAddress.java:1069)\r\nat org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer.recreateSocketAddresses(QuorumPeer.java:170)\r\nat org.apache.zookeeper.server.quorum.QuorumPeer.recreateSocketAddresses(QuorumPeer.java:726)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:686)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectAll(QuorumCnxManager.java:720)\r\nat org.apache.zookeeper.server.quorum.FastLeaderElection.lookForLeader(FastLeaderElection.java:919)\r\nat org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1171){noformat}\r\nSimilar entries are keep repeated in both server logs. As I can see ZK is trying to call recreateSocketAddresses() and tries to re-resolve the address every time it's trying to connect.\r\n\r\nThis is the case _without_ your patch.\r\n\r\nWhen I enabled the entries in /etc/hosts, the following error showed up in the logs:\r\n{noformat}\r\n2018-02-21 14:37:07,178 [myid:1] - WARN [QuorumPeer[myid=1](plain=/0:0:0:0:0:0:0:0:2181)(secure=disabled):QuorumCnxManager@663] - Cannot open channel to 2 at election address two.andor.org/127.0.0.1:3334\r\njava.net.ConnectException: Connection refused (Connection refused)\r\nat java.net.PlainSocketImpl.socketConnect(Native Method)\r\nat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)\r\nat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)\r\nat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)\r\nat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\nat java.net.Socket.connect(Socket.java:580)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:641)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:692)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectAll(QuorumCnxManager.java:720)\r\nat org.apache.zookeeper.server.quorum.FastLeaderElection.lookForLeader(FastLeaderElection.java:919)\r\nat org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1171){noformat}\r\nThe error shows that DNS resolution was successful (127.0.0.1) and the connection issue is different (Connection refused) which might be related to my silly test environment (socket has not been created on the other side), but the key takeaway here is that [~abrahamfine] is probably right and the re-resolution happens properly.\r\n\r\nI repeated the test with your patch too and the results are the same. No difference.\r\n\r\nMaybe I'm missing something and the test might not be relevant at all, but at least it's a little bit confusing.\r\n\r\n[~eronwright]Would you please attach logs running the same ensemble_without_your patch too?", "From the logs, we can see the same exception being raised when the server is trying to connect to elect a leader:\r\n\r\n{noformat}\r\n2018-02-20 20:41:25,669 [myid:1] - WARN  [QuorumPeer[myid=1](plain=/0:0:0:0:0:0:0:0:2181)(secure=disabled):QuorumPeer$QuorumServer@173] - Failed to resolve address: pravega-zookeeper-2.pravega-zookeeper-headless.default.svc.cluster.local\r\njava.net.UnknownHostException: pravega-zookeeper-2.pravega-zookeeper-headless.default.svc.cluster.local\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1280)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1192)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1126)\r\n\tat java.net.InetAddress.getByName(InetAddress.java:1076)\r\n\tat org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer.recreateSocketAddresses(QuorumPeer.java:171)\r\n\tat org.apache.zookeeper.server.quorum.QuorumPeer.recreateSocketAddresses(QuorumPeer.java:727)\r\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectOne(QuorumCnxManager.java:682)\r\n\tat org.apache.zookeeper.server.quorum.QuorumCnxManager.connectAll(QuorumCnxManager.java:716)\r\n\tat org.apache.zookeeper.server.quorum.FastLeaderElection.lookForLeader(FastLeaderElection.java:919)\r\n\tat org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1190)\r\n{noformat}\r\n\r\nOnce the address resolves and it can connect, the exception goes away and the notification messages flow regularly. The question is why the update performed during leader election to the quorum view in {{QuorumCnxManager.connectOne}} is not taking any effect in the view that {{Learner.findLeader}} uses to get the `QuorumServer` instance to connect to the leader. Two possibilities I can think of:\r\n\r\n1- The server hasn't connected to the elected server during leader election, in which case the address wasn't updated.\r\n2- The quorum view that the learner is using to get the quorum server instance is not the one that was updated in {{QuorumCnxManager}}.\r\n\r\n", "Thanks everyone for your patience.  I've attached a log showing the unpatched behavior (3.5.3-beta).   You'll observe two ongoing exceptions, one from {{QuorumCnxManager}}, the other from {{Learner}}.     Around {{2018-02-21 17:23:36,746}}, the DNS record finally comes up and {{QuorumCnxManager}} recovers whereas {{Learner}} doesn't.", "I think I know what's going on. It is correct that {{connectOne}} invokes {{recreateSocketAddresses}}, but that invocation won't happen in the case that the server receives a connection request rather than starting the connection. In fact, servers with larger ids are always supposed to start the connections.\r\n\r\nI think the patch proposed here of invoking {{recreateSocketAddresses}} in {{findLeader}} in the learner class makes sense to compensate for {{recreateSocketAddresses}} not being invoked during leader election. Any other insight or anything I'm missing?\r\n\r\n", "[~fpj] I think you're right.\r\n\r\nLooking at the logfile that [~eronwright]uploaded recently I see connections are being receivedfrom other members of the ensembe on the election port. myid=1 is just unable to initiate due to DNS error and doesn't either give up connection, because not realizing that myid=1 < id of the other connection.\r\n\r\nI believe the ensembe looks like this:\r\n\r\nmyid=1 zookeeper-0.zookeeper-headless.default.svc.cluster.local 10.8.2.14\r\nmyid=2 zookeeper-1.zookeeper-headless.default.svc.cluster.local 10.8.0.6\r\nmyid=3 zookeeper-2.zookeeper-headless.default.svc.cluster.local 10.8.1.7\r\n\r\n\r\n\r\n", "Looks like that sock.connect() in connectToLeader() requires the address to be resolved already.\r\n\r\nIf QuorumCnxnManager() fails to do that, connectToLeader() should be able to detect & fix it by doing resolution explicitly when addr.isUnresolved() == true.\r\n\r\nNot sure if it's any better than doing recreateSocketAddress() in findLeader(), but it may be another option to consider.", "I have tried your recipe for reproducing as well [~andor] by changing {{/etc/hosts}} and got the same issue. The problem is that the leader fails to bind to the port, which actually makes me wonder whether we need to do anything about the leader with respect to this issue:\r\n\r\n{noformat}\r\njava.net.SocketException: Unresolved address\r\n\tat java.net.ServerSocket.bind(ServerSocket.java:368)\r\n\tat java.net.ServerSocket.bind(ServerSocket.java:329)\r\n\tat org.apache.zookeeper.server.quorum.Leader.<init>(Leader.java:240)\r\n\tat org.apache.zookeeper.server.quorum.QuorumPeer.makeLeader(QuorumPeer.java:1023)\r\n\tat org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1226)\r\n{noformat}\r\n\r\nYour suggestion of the alternative change is sensible, but I'd say that for consistency, it is better that we simply do the same that we have in 3.4, which is to make the change in {{findLeader}}.\r\n\r\nOne thing that I believe we haven't been able to do is to have a test case to report it. It would be good to have it, but I'm not sure what would be a good way.", "[~fpj] Sounds reasonable to me.\r\n\r\nI'll think about how to test this and will let you know when I can come up with something.", "[~fpj] ready to merge this fix?", "[~fpj] I believe your diagnosis to be correct and I agree that [~eronwright]'s fix would solve the problem in the case that DNS eventually is fixed. My concern with the current solution is that it could cause us to jump back and forth between leader election and the quorum when the DNS stays in a bad state. For example, imagine a 3 node cluster {z1, z2, z3}. z3 is always offline and z2 has no entry in dns. z2 will connect to z1 and win the leader election. When it comes time to form the quorum z1 will be unable to follow z2 as it wont be able to resolve its address.\r\n\r\nJust spitballing here, but what if we had z1 connect to the {{remoteSocketAddress}} of the socket created from the connection it received in {{QuorumCnxManager}}? I understand there are some security concerns here and I'm not sure how much we care about that since they would be cured by Kerberos or TLS (one day). We could also do a reverse dns lookup and reject the connection if the reverse lookup does not align with our expected hostname. \r\n\r\nWhat do you guys think?\r\n", "My humble opinion is that there's no risk in taking this patch as-is, since it fixes a regression.   Improvements could be made from there, on their own strength.", "[~andor] are you driving this issue now?   Would you please assign the bug appropriately?\r\n\r\nI'm keen to see the patch make it into 3.5.4.", "[~abrahamfine] are you OK with accepting this patch as-is for now?  This would fix the regression between 3.4 and 3.5.  Thanks!", "hey guys, here are some comments based on the latest points:\r\n\r\n[~abrahamfine] the improvement you are proposing requires further discussion. for one thing, the user has told us to use names and now we are trying to second-guess how to connect to the server. I'm not saying this is necessarily a bad idea, but I feel it needs to be addressed separately. I think we should go for now with the fix that [~eronwright] is proposing as it fixes an issue with the port.\r\n\r\n[~andor] do you think you will be able to come up with a test case? To recap, I think we need to test that we are able to resolve names correctly despite changes in the mapping of name to address. I'm not sure what a good way of testing it would be.", "Are we ready to accept this patch yet?   ", "[~fpj] would you please assign this issue to someone and clarify what your expectations are? ", "Can someone please comment onwhether this is getting merged in 3.5.4?? When is 3.5.4 expected?", "Based on this comment, I'm +1 from this change:\r\n\r\nhttps://issues.apache.org/jira/browse/ZOOKEEPER-2982?focusedCommentId=16371886&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16371886\r\n\r\nIt would have been good to have a test case, but we haven't been able to come up with anything, so I suggest we leave it for future work. We also have a +1 from [~andor] in the pull request.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1665//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1665//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1665//console\n\nThis message is automatically generated.", "Note that I opened two PRs - one for {{branch-3.5}} andthe otherfor {{master}} branch.", "Issue resolved by pull request 513\n[https://github.com/apache/zookeeper/pull/513]", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #15 (See [https://builds.apache.org/job/ZooKeeper-trunk/15/])\nZOOKEEPER-2982: Re-try DNS hostname -> IP resolution if node connection (fpj: rev b1f6279a8c4708d1df7dd1128dc4fdf41fc7e24a)\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/Learner.java\n"]}, {"Issue key": "ZOOKEEPER-2981", "Request type": "Sub-task", "Datetime creation": "2018-02-14 10:54:04", "Datetime resolution": "2018-02-14 20:07:32", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Resolved", "Description": "The commit (5ae5f1076e56947db5694ff8ab06c3d0b4f5d802) which has been cherry-picked from master for ZOOKEEPER-2939 caused build failure.", "Comments": ["Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/463\n  \n    Thanks @anmolnar \r\n    \r\n    This has been merged. For whatever reason the merge script decided not to close this PR so please do that.\r\n    \r\n\n", "Github user anmolnar closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/463\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/463\n  \n    Thanks @afine \r\n    Hopefully the build goes green now.\n"]}, {"Issue key": "ZOOKEEPER-2980", "Request type": "Sub-task", "Datetime creation": "2018-02-12 15:11:56", "Datetime resolution": "2018-05-11 20:57:47", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Closed", "Description": "Backport ZOOKEEPER-2939 to branch-3.4.", "Comments": ["Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/462#discussion_r168179473\n  \n    --- Diff: build.xml ---\n    @@ -220,7 +220,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle\">\n     \n         <property name=\"netty.version\" value=\"3.10.6.Final\"/>\n     \n    -    <property name=\"junit.version\" value=\"4.8.1\"/>\n    +    <property name=\"junit.version\" value=\"4.12\"/>\n    --- End diff --\n    \n    This version change comes from master/3.5. Do we really intend to upgrade to JUnit version 4.12 in this PR?\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/462#discussion_r168192201\n  \n    --- Diff: build.xml ---\n    @@ -220,7 +220,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle\">\n     \n         <property name=\"netty.version\" value=\"3.10.6.Final\"/>\n     \n    -    <property name=\"junit.version\" value=\"4.8.1\"/>\n    +    <property name=\"junit.version\" value=\"4.12\"/>\n    --- End diff --\n    \n    Yes, I need this to use assertNotEquals().\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/462#discussion_r168271141\n  \n    --- Diff: build.xml ---\n    @@ -220,7 +220,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle\">\n     \n         <property name=\"netty.version\" value=\"3.10.6.Final\"/>\n     \n    -    <property name=\"junit.version\" value=\"4.8.1\"/>\n    +    <property name=\"junit.version\" value=\"4.12\"/>\n    --- End diff --\n    \n    Ok\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/462\n  \n    The patch looks good. I'm just wondering why we need this in 3.4. As I believe we generally try not to add features to that branch at this point that don't improve security or stability.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/462\n  \n    @afine That's a valid point, I close this PR.\n", "Github user anmolnar closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/462\n", "Only critical bugfixes and test reliability changes should be backported to 3.4", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/462\n  \n    @phunt This PR is the dependency of https://github.com/apache/zookeeper/pull/466 \r\n    Previously we dropped this, because it's a new feature which we usually don't add to 3.4, but these new metrics would be crucial for monitoring. I'd like to revisit this and merge this patch before the other if it's acceptable.\n", "GitHub user anmolnar reopened a pull request:\n\n    https://github.com/apache/zookeeper/pull/462\n\n    ZOOKEEPER-2980 Backport ZOOKEEPER-2939 Deal with maxbuffer as it relates to proposals - branch-3.4\n\n    Branch 3.4 version of https://github.com/apache/zookeeper/pull/415\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2939_34\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/462.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #462\n    \n----\ncommit 4b70395eeb3f9a5591cf7d6b9aea91a77c350cf4\nAuthor: Andor Molnar <andor@...>\nDate:   2018-02-12T14:17:12Z\n\n    ZOOKEEPER-2939. Deal with maxbuffer as it relates to proposals\n\n----\n", "Issue resolved by pull request 462\n[https://github.com/apache/zookeeper/pull/462]"]}, {"Issue key": "ZOOKEEPER-2979", "Request type": "Sub-task", "Datetime creation": "2018-02-12 15:09:21", "Datetime resolution": "2018-10-02 09:38:30", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Resolved", "Description": "This Jira in intended to be the successor of ZOOKEEPER-2939.\r\n\r\nBy using dropwizard library's Histogram component we'll be able to provide more sophisticated statistics on Proposal sizes.\r\n\r\nFrom the docs:\r\n\"A histogram measures the statistical distribution of values in a stream of data. In addition to minimum, maximum, mean, etc., it also measures median, 75th, 90th, 95th, 98th, 99th, and 99.9th percentiles.\"\r\n\r\n[http://metrics.dropwizard.io/3.1.0/manual/core/#histograms]", "Comments": ["Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/440\n  \n    @aberghage Did you have a chance to take look?\r\n    @afine I changed the implementation to use a configurable sliding window. Do you see any other thing that I should improve?\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/440\n  \n    @anmolnar I believe you misunderstood my comment above:\r\n    \r\n    > likely this change will go into master (3.6.0+) - impact on backports. I'm assuming we would want to take advantage of this library across the board. (can we do that? I assume yes?)\r\n    \r\n    > Sure, I'll have to backport it to branch-3.4, it will need some manual work for sure, but I don't expect it to be the end of the world.\r\n    \r\n    I meant that I was planning to only commit this change for 3.6.0+ - I am generally reticent to add a new dependency so late in the 3.5 train. Do you feel strongly otw?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/440\n  \n    @phunt right, I misunderstood your comment.\r\n    \r\n    I think not merging this patch to 3.4 is acceptable, but I'd argue with 3.5/3.6 a little bit. Given that how much time is needed to release a major version of ZooKeeper - even if we're successful at accelerating a little bit - I'm afraid this patch won't see a stable release in the foreseeable future.\r\n    \r\n    That's my only reason why I'd put this into 3.5 and keep the dumb implementation (last/min/max) in 3.4.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/440\n  \n    3.5 is still in beta, so I'm not super worried wrt it being an addition. I also think it's super valuable to improve reporting. I'm erring on the side of inclusion - any objections?\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 16 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1662//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1662//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1662//console\n\nThis message is automatically generated.", "Reverted. There's an ongoing work to implement a generic solution for ZooKeeper monitoring. No point doing this separately."]}, {"Issue key": "ZOOKEEPER-2978", "Request type": "Bug", "Datetime creation": "2018-02-12 13:57:11", "Datetime resolution": "2018-02-20 22:38:57", "Reporter login": "achimbab", "Reporter name": "achimbab", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "At line 518, 'existWatches.remove(clientPath)' is null because watches for clientPath is already removed.\r\n\r\nhttps://github.com/apache/zookeeper/pull/461/commits/a6044af23ae1096a8c5305633320fa139cf730b2\r\n\r\n", "Comments": ["Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/461\n  \n    @achimbab Thanks for the patch.\r\n    \r\n    I'm wondering if you ran into this bug while running ZooKeeper? This code is pretty old and should never actually be executed (for reasons described here: https://github.com/apache/zookeeper/pull/461/files#diff-e08c1cfd3802a0c3156847175ab8e24bR514). \r\n    \r\n    I would be happy to merge in this fix but please rename the JIRA and the pull request to something more descriptive (as I do not have permissions to change the name of a Pull Request). Something like \"fix potential null pointer exception when deleting node\".\n", "Github user achimbab commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/461\n  \n    @afine \r\n    No, I didn't run into this bug.\r\n    I'm renamed the JIRA, the pull request and the commit message.\r\n    Thank you.\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/461\n", "Issue resolved by pull request 461\n[https://github.com/apache/zookeeper/pull/461]", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3733 (See [https://builds.apache.org/job/ZooKeeper-trunk/3733/])\nZOOKEEPER-2978: fix potential null pointer exception when deleting node (afine: rev f0b67b6e49acec5f022bee25e08f82a29572c97a)\n* (edit) src/java/main/org/apache/zookeeper/ZooKeeper.java\n"]}, {"Issue key": "ZOOKEEPER-2977", "Request type": "Bug", "Datetime creation": "2018-02-12 03:40:47", "Datetime resolution": "2023-05-17 12:47:07", "Reporter login": "sumitagrawal", "Reporter name": "Sumit Agrawal", "Assignee login": "sumitagrawal", "Assignee name": "Sumit Agrawal", "Status": "Resolved", "Description": "When client performs multiple times addAuth with different credential at follower concurrently, the communication between follower gets corrupt. This causes shutdown of Follower due to the failure.\r\n\r\nAnalysis:\r\n\r\nInorg.apache.zookeeper.server.quorum.QuorumPacket.serialize method,\r\n * calla_.startVector(authinfo,\"authinfo\"); which write the length of authinfo to packet (suppose it writes length 1)\r\n * get length of authinfo to write all details in loop (here gets length as 2)\r\n\r\n<-- Here in concurrency scenario, buffer gets corrupt having extra bytes in channel for additional authinfo.\r\n\r\n\r\n\r\nSo When Leader reads next quorum packet, it reads previous extra bytes (incorrect) and possibly identify greater size of message (as corrupt byte pattern) causes exception...\r\n\r\nCoordination > Unexpected exception causing shutdown while sock still open (LearnerHandler.java:633)\r\n java.io.IOException: Unreasonable length = 1885430131\r\n\r\n\r\n\r\n\r\n\r\nServerCnxn.getAuthInfo returns Unmodifiable list, but while addAuthInfo, there is no check. So this causes concurrency issue.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "Comments": ["To avoid this issue, below method can return copy of authinfo:\r\n\r\norg.apache.zookeeper.server.ServerCnxn.addAuthInfo(Id){\r\n\r\n  //return Collections.unmodifiableList(authInfo);\r\n\r\n  return Collections.unmodifiableList(new ArrayList(authInfo));\r\n\r\n}", "Hi [~sumitagrawal]\r\n\r\nI think this a great fix and it looks like it has been accidentally fixed in 3.5 and master branches by ZOOKEEPER-1525.\r\n\r\nWould you mind creating a Pull Request on GitHub and possibly put together a small unit test to validate the behaviour?", "Hi [~andor]\r\n\r\nAttached the patch with test case as similar to other test cases. Please suggest changes related to test case if needed.", "Thanks [~sumitagrawal]\r\n\r\nWould you please kindly create a pull request on github, so that more eyes of the communitycould see it?\r\n\r\nThanks!", "GitHub user sumitagrawl opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/474\n\n    ZOOKEEPER-2977: Concurrency for addAuth corrupts quorum packets\n\n    get copy of authInfo in ServerCnxn to avoid corrupt of quorum packets\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/sumitagrawl/zookeeper branch-3.4\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/474.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #474\n    \n----\ncommit 870e2d98b1c5b8847b8f32c9d5f0a49ad696812c\nAuthor: sumitagrawal <sumit.jecrc@...>\nDate:   2018-02-26T15:52:46Z\n\n    ZOOKEEPER-2977: Concurrency for addAuth corrupts quorum packets\n    \n    get copy of authInfo in ServerCnxn\n\n----\n", "Hi[~andor],\r\n\r\nPlease help in getting reviewed.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/474\n  \n    @sumitagrawl Thanks for opening this pull request and thanks for the contribution.\r\n    This stuff with the test looks good to me.\r\n    Given that this is a fix in base class (ServerCnxn) rather than the NIO implementation, have you considered adding similar test to Netty as well?\r\n    It might be even better to have a separate test file for the common code, so we don't have to replicate tests every time we test something in here.\r\n    What do you think?\n", "Github user rakeshadr commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/474\n  \n    @sumitagrawl Good analysis and fix. Few minor comments,\r\n    - Please take care indentation in the tests.  Presently, it uses tab.\r\n    - Please add comments in test as a quick reference to the issue to show the expectations and background of this test,  something like, https://github.com/apache/zookeeper/blob/master/src/java/test/org/apache/zookeeper/server/DataTreeTest.java#L70\r\n    - break; is not needed in loop, pls remove.\r\n\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/474#discussion_r171980950\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java ---\n    @@ -103,4 +105,22 @@ public void testValidSelectionKey() throws Exception {\n                 zk.close();\n             }\n         }\n    +\n    +    @Test(timeout = 30000)\n    +    public void testServerCnxnGetAuthInfoWithCopy() throws Exception {\n    +        final ZooKeeper zk = createZKClient(hostPort, 3000);\n    +        try {\n    +            Iterable<ServerCnxn> connections = serverFactory.getConnections();\n    +            for (ServerCnxn serverCnxn : connections) {\n    +            \tList<Id> authInfo = serverCnxn.getAuthInfo();\n    +            \tId id = new Id(\"testscheme\", \"test\");\n    +\t\t\t\tserverCnxn.addAuthInfo(id);\n    +\t\t\t\tAssert.assertTrue(!authInfo.contains(id));\n    --- End diff --\n    \n    nit: let's use assertFalse\n", "Github user sumitagrawl commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/474\n  \n    @rakeshadr @anmolnar @afine \r\n    Changes are done creating separate ServerCnxnTest.java for this purpose to avoid test duplicates. Also all above review comments are handled.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/474#discussion_r173243505\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/ServerCnxnTest.java ---\n    @@ -0,0 +1,129 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.zookeeper.server;\n    +\n    +import java.io.IOException;\n    +import java.net.InetAddress;\n    +import java.net.InetSocketAddress;\n    +import java.nio.ByteBuffer;\n    +import java.util.List;\n    +\n    +import org.apache.jute.Record;\n    +import org.apache.zookeeper.WatchedEvent;\n    +import org.apache.zookeeper.ZKTestCase;\n    +import org.apache.zookeeper.data.Id;\n    +import org.apache.zookeeper.proto.ReplyHeader;\n    +import org.junit.Assert;\n    +import org.junit.Test;\n    +\n    +public class ServerCnxnTest extends ZKTestCase {\n    +\n    +    /**\n    +     * Test getting a copy of authinfo to avoid parallel modification impact\n    +     */\n    +    @Test\n    +    public void testServerCnxnGetAuthInfoWithCopy() throws Exception {\n    +            MockServerCnxn serverCnxn = new MockServerCnxn();\n    +                List<Id> authInfo = serverCnxn.getAuthInfo();\n    --- End diff --\n    \n    nit: please fix this indentation\n", "-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12911964/2977.patch\n  against trunk revision a2623a625a4778720f7d5482d0a66e9b37ae556f.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    -1 patch.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3693//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1823//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1823//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1823//console\n\nThis message is automatically generated.", "-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12911964/2977.patch\n  against trunk revision 27db6bd28e3297cdafe19c204b42c3db20c45ad6.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    -1 patch.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3704//console\n\nThis message is automatically generated."]}, {"Issue key": "ZOOKEEPER-2976", "Request type": "Bug", "Datetime creation": "2018-02-03 18:01:26", "Datetime resolution": "2018-02-21 12:25:21", "Reporter login": "ilovezfs", "Reporter name": "ilovezfs", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "https://www.apache.org/dyn/closer.cgi?path=zookeeper/stable\r\n\r\n\r\n\r\nshows3.4.10. But 3.4.11 is shown onhttp://zookeeper.apache.org/", "Comments": ["3.4.11 contains a major bug.\r\n\r\nIf possible, please use 3.4.10 until 3.4.12 is released."]}, {"Issue key": "ZOOKEEPER-2975", "Request type": "Bug", "Datetime creation": "2018-02-02 10:27:46", "Datetime resolution": null, "Reporter login": "dhav.mari", "Reporter name": "Marimuthu PMS Dhavamani", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "1) Create session from zk Client (Self client)\r\n2) Stop the zkServer where still the zk Client connected\r\n3) Wait for the socket to be cleared in server side\r\n\u00e8Server side TCP session should be removed from TIME_WAIT status.\r\n4) Start the zkServer\r\n5) Now, re connection from ZK Client is denied ..Please analyse... Re connection should happen without any problem...", "Comments": []}, {"Issue key": "ZOOKEEPER-2974", "Request type": "Bug", "Datetime creation": "2018-02-02 00:42:01", "Datetime resolution": null, "Reporter login": "aertoria", "Reporter name": "Ethan Wang", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "Curator users are assumed to know ZooKeeper. A good place to start is here: [http://zookeeper.apache.org/doc/trunk/zookeeperStarted.html]", "Comments": []}, {"Issue key": "ZOOKEEPER-2973", "Request type": "Bug", "Datetime creation": "2018-01-31 08:45:14", "Datetime resolution": null, "Reporter login": "wanggang_123", "Reporter name": "wanggang_123", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "I am running a three node ZooKeeper cluster. At 2018-01-28 17:56:30,leader node has error log:\r\n\r\n2018-01-28 17:56:30 [UTC:20180128T175630+0800]|ERROR||LearnerHandler-/118.123.180.23:44836hread|Coordination > Unexpected exception causing shutdown while sock still open (LearnerHandler.java:633)\r\njava.io.IOException: Unreasonable length = 1885430131\r\nat org.apache.jute.BinaryInputArchive.readBuffer(BinaryInputArchive.java:95)\r\nat org.apache.zookeeper.server.quorum.QuorumPacket.deserialize(QuorumPacket.java:85)\r\nat org.apache.jute.BinaryInputArchive.readRecord(BinaryInputArchive.java:103)\r\nat org.apache.zookeeper.server.quorum.LearnerHandler.run(LearnerHandler.java:546)\r\n2018-01-28 17:56:30 [UTC:20180128T175630+0800]|WARN ||LearnerHandler-/118.123.180.23:44836hread|Coordination > ******* GOODBYE /118.123.180.23:44836 ******** (LearnerHandler.java:646)\r\n2018-01-28 17:56:30 [UTC:20180128T175630+0800]|INFO ||ProcessThread(sid:2 cport:-1):hread|Coordination > Got user-level KeeperException when processing sessionid:0x16138593ad43cf9 type:delete cxid:0x5 zxid:0xc104b59e9 txntype:-1 reqpath:n/a Error Path:/VSP/Leader/syncScore-0/_c_9101a3d6-f431-4792-b71d-a493e938895d-latch-0000093037 Error:KeeperErrorCode = NoNode for /VSP/Leader/syncScore-0/_c_9101a3d6-f431-4792-b71d-a493e938895d-latch-0000093037 (PrepRequestProcessor.java:645)", "Comments": ["I met this problem too, while i use open ssl capability on zookeeper server and zookeeper client. while i close ssl capability and will not cause this problem.\r\n\r\nyou can modify source ofBinaryInputArchive like below and find what\r\n\r\npublic String readString(String tag) throws IOException {\r\n int len = in.readInt();\r\n if (len == -1) return null; \r\n \r\n checkLength(len);\r\n byte b[] = new byte[len];\r\n in.readFully(b); \r\n String tobeReturnString = new String(b, \"UTF8\");\r\n LOG.info(\"####################Just readString String's lengh=\"+len+\" and this string is:\"+tobeReturnString);\r\n \r\n return tobeReturnString;\r\n }\r\n \r\n static public final int maxBuffer = Integer.getInteger(\"jute.maxbuffer\", 0xfffff);\r\n\r\npublic byte[] readBuffer(String tag) throws IOException {\r\n int len = readInt(tag);\r\n if (len == -1) return null;\r\n checkLength(len);\r\n byte[] arr = new byte[len];\r\n in.readFully(arr); \r\n String tobeReturnString = new String(arr, \"UTF8\");\r\n LOG.info(\"####################Just readBuffer String's lengh=\"+len+\" and this string is:\"+tobeReturnString);\r\n return arr;\r\n }", "\u4f60\u597d\uff0c\u6211\u8fd9\u8fb9\u7684zookeeper\uff0c\u662f\u5076\u73b0shutdown\uff0c\u4f60\u9047\u5230\u7684\u4e5f\u662f\u5417\uff1f\r\n\r\n\u8fd9\u4e2a\u95ee\u9898\u7684\u89e6\u53d1\u6761\u4ef6\u662f\u4ec0\u4e48\u554a\uff1f\u5982\u4f55\u80fd\u591f\u590d\u73b0\uff1f", "Me too!. I met OutOfMemory error cause zookeeper shutdown. but you can add crontab task to restart zookeeper to resolve this issue.\r\n\r\nOf course, you should insure that zookeeper client jar has same version with zookeeper server firstly.", "I met OutOfMemory error cause zookeeper shutdown. and restart not ok.\r\n\r\n 1. Maybe the client write too much too the ZooKeeper, which bigger than thejute.maxbuffer\r\n\r\n\r\n\r\nhttps://issues.apache.org/jira/browse/ZOOKEEPER-2101 Transaction larger than max buffer of jute makes zookeeper unavailable\r\n\r\n", "Yes, that is one reason and easy to resolve. But i know that even if i send length of data just no more than one hundred byte, once enabled ssl capability, several hours later, just zookeeper leader node will get this exception.\r\n\r\nI met OutOfMemory error cause zookeeper shutdown. and restart not ok.\r\n\r\n 1. Maybe the client write too much too the ZooKeeper, which bigger than thejute.maxbuffer", "Is there any reproducer for this issue ?\r\nIs this issue still valid on 3.5 (or current 3.6.0-SNAPSHOT) ?\r\n", "Same question as [~eolivelli] above.  Downgrading from blocker."]}, {"Issue key": "ZOOKEEPER-2972", "Request type": "Bug", "Datetime creation": "2018-01-29 08:16:49", "Datetime resolution": null, "Reporter login": "wuyiyun", "Reporter name": "wuyiyun", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "When use SSL on zookeeper server, counts of watches may increase more than forty thousands and lead zoookeeper process outofmemroy error after zookeeper server started one day.\r\n\r\ncheck command:\r\n\r\necho wchs | nc localhost 2181\r\n\r\ncheck result:\r\n\r\n[zookeeper@localhost bin]$ echo wchs | nc localhost 2181\r\n44412 connections watching 1 paths\r\nTotal watches:44412", "Comments": []}, {"Issue key": "ZOOKEEPER-2971", "Request type": "Improvement", "Datetime creation": "2018-01-28 17:31:46", "Datetime resolution": "2018-05-10 21:28:41", "Reporter login": "randgalt", "Reporter name": "Jordan Zimmerman", "Assignee login": "phunt", "Assignee name": "Patrick D. Hunt", "Status": "Resolved", "Description": "ZOOKEEPER-2901andZOOKEEPER-2903 fix a serious bug with TTL nodes in 3.5.3. The release notes for 3.5.4 should describe the problem and how it was worked-around/fixed.", "Comments": ["I've captured this in the release notes for 3.5.4"]}, {"Issue key": "ZOOKEEPER-2970", "Request type": "Sub-task", "Datetime creation": "2018-01-25 14:06:27", "Datetime resolution": "2018-10-25 15:23:16", "Reporter login": "mfenes", "Reporter name": "Mark Fenes", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Resolved", "Description": null, "Comments": ["Verified a bunch of recent builds, test is not failing anymore. Closing."]}, {"Issue key": "ZOOKEEPER-2969", "Request type": "Bug", "Datetime creation": "2018-01-19 23:38:40", "Datetime resolution": null, "Reporter login": "tgockel", "Reporter name": "Travis Gockel", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "I have two zhandle_ts connected to two different ZK ensembles. Differentiating between log messages of the two is quite difficult, as the callback only gives you the message, with no reasonable way to grab connection that created it (the address of the handle is in the log message, but parsing this value seems rather error-prone). It would be nice if the log callback gave me the handle.\r\n \r\n\r\nI attached a patch for a potential fix...it adds a few functions without breaking backwards compatibility:\r\n\r\n\r\n\r\n{{typedef void (*log_callback_ext_fn)(const zhandle_t *zh,}}\r\n {{ const void *log_context, ZooLogLevel level, const char *message);}}\r\n\r\n{{ZOOAPI void zoo_get_log_callback_ext(const zhandle_t *zh,}}\r\n {{ log_callback_ext_fn *callback, const void **context);}}\r\n\r\n{{ZOOAPI void zoo_set_log_callback_ext(zhandle_t *zh,}}\r\n {{ log_callback_ext_fn callback, const void *context);}}\r\n\r\n{{ZOOAPI zhandle_t *zookeeper_init3(const char *host, watcher_fn fn,}}\r\n {{ int recv_timeout, const clientid_t *clientid, void *context, int flags,}}\r\n {{ log_callback_ext_fn log_callback, const void *log_callback_context);}}\r\n\r\n\r\n\r\nThe fallback ordering is changed to: log_callback_ext_fn -> log_callback_fn -> global stream.\r\n\r\nLet me know if this is completely crazy.", "Comments": ["Might also be worth noting I uploaded the change to GitHub https://github.com/tgockel/zookeeper/tree/ZOOKEEPER-2969/c-log-callback-ext"]}, {"Issue key": "ZOOKEEPER-2968", "Request type": "Test", "Datetime creation": "2018-01-18 16:30:18", "Datetime resolution": "2018-05-31 19:58:34", "Reporter login": "mfenes", "Reporter name": "Mark Fenes", "Assignee login": "mfenes", "Assignee name": "Mark Fenes", "Status": "Closed", "Description": "We have limited code coverage support in ZK. Similarly to Java code coverage tests add C client code coverage tests by using GCC tools like gcov and lcov.", "Comments": ["GitHub user mfenes opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/467\n\n     ZOOKEEPER-2968: Add C client code coverage tests\n\n    ZOOKEEPER-2968: Add C client code coverage tests\r\n    \r\n    This PR adds a new ant target 'c_coverage_report' which generates coverage report for the ZK C client.\r\n    The report is generated to build/c_coverage/report in html format.\r\n    As a requirement, lcov has to be installed prior to running target 'c_coverage_report'.\r\n    \r\n    An additional check was added to 'check-cppunit-makefile' to ensure that the Makefile gets deleted and regenerated without the coverage compiler flags when running targets without --enable-gcov.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2968\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/467.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #467\n    \n----\ncommit 3c902262217c236cab2804a2932c7eb68f6f1539\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-02-15T15:24:53Z\n\n    ZOOKEEPER-2968: Add C client code coverage tests\n\ncommit d8757821add5930b08bce52a11ddd7b3428d01ff\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-02-19T13:44:14Z\n\n    ZOOKEEPER-2968: Add C client code coverage tests\n    \n    Added check to ensure that the Makefile gets regenerated if someone runs\n    the cpp unit tests after generating C coverage reports without running ant clean first.\n\n----\n", "Issue resolved by pull request 467\n[https://github.com/apache/zookeeper/pull/467]", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #46 (See [https://builds.apache.org/job/ZooKeeper-trunk/46/])\nZOOKEEPER-2968: Add C client code coverage tests (phunt: rev a35690cd60c1d5010454056b7011e3abbbbe9116)\n* (edit) src/c/configure.ac\n* (edit) build.xml\n* (edit) src/c/Makefile.am\n"]}, {"Issue key": "ZOOKEEPER-2967", "Request type": "Improvement", "Datetime creation": "2018-01-18 15:55:53", "Datetime resolution": "2018-02-20 19:29:27", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "mfenes", "Assignee name": "Mark Fenes", "Status": "Resolved", "Description": "According to -ZOOKEEPER-2960-we should at a startup check to validate that dataDir and dataLogDir parameters are set correctly.\r\n\r\nPerhaps we should introduce a check of some kind? If datalogdir is different that datadir and snapshots exist in datalogdir we throw an exception and quit.", "Comments": ["GitHub user mfenes opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/450\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir paramete\u2026\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\r\n    \r\n    This PR adds a check to protect ZK against configuring dataDir and dataLogDir opposingly.\r\n    \r\n    When FileTxnSnapLog is created, it checks if transaction log directory contains snapshot files or vice versa, snapshot directory contains transaction log files. If so, the check throws LogdirContentCheckException or SnapdirContentCheckException, respectively, which translates to DatadirException at ZK startup in QuorumPeerMain and ZooKeeperServerMain.\r\n    \r\n    If the two directories are the same, then no check is done.\r\n    \r\n    For testing, I've added 4 new unit tests which cover the following cases:\r\n    \r\n    1. transaction log and snapshot directories are different and they are used correctly (no Exception)\r\n    2. transaction log and snapshot directories are the same (in this case no check is done)\r\n    3. transaction log and snapshot directories are different and transaction log directory contains snapshot files (LogdirContentCheckException -> ZK quits)\r\n    4. transaction log and snapshot directories are different and snapshot directory contains transaction log files (SnapdirContentCheckException -> ZK quits)\r\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2967\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/450.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #450\n    \n----\ncommit 81c026fe8498107f42e9d3599a515c8817f8bf02\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-01-19T23:16:07Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n\n----\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r162946041\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    --- End diff --\n    \n    This is always true.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r162929390\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---\n    @@ -136,13 +136,51 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {\n                 throw new DatadirException(\"Cannot write to snap directory \" + this.snapDir);\n             }\n     \n    +        // check content of transaction log and snapshot dirs if they are two different directories\n    +        if(!this.dataDir.getPath().equals(this.snapDir.getPath())){\n    +            checkLogDir();\n    +            checkSnapDir();\n    +        }\n    +\n             txnLog = new FileTxnLog(this.dataDir);\n             snapLog = new FileSnap(this.snapDir);\n     \n             autoCreateDB = Boolean.parseBoolean(System.getProperty(ZOOKEEPER_DB_AUTOCREATE,\n                     ZOOKEEPER_DB_AUTOCREATE_DEFAULT));\n         }\n     \n    +    private void checkLogDir() throws LogdirContentCheckException {\n    +        File[] files = this.dataDir.listFiles();\n    +        if(files != null) {\n    +            boolean hasSnapshotFiles = false;\n    +            for (File file : files) {\n    +                if(Util.isSnapshotFile(file)){\n    +                    hasSnapshotFiles = true;\n    +                    break;\n    +                }\n    +            }\n    +            if (hasSnapshotFiles) {\n    +                throw new LogdirContentCheckException(\"Log directory has snapshot files. Check if dataLogDir and dataDir configuration is correct.\");\n    +            }\n    +        }\n    +    }\n    +\n    +    private void checkSnapDir() throws SnapdirContentCheckException {\n    +        File[] files = this.snapDir.listFiles();\n    --- End diff --\n    \n    Same here. Get files with fileNameFilter and if it returns non-empty array, throw exception.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r162945589\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/Util.java ---\n    @@ -294,5 +297,25 @@ public int compare(File o1, File o2) {\n             Collections.sort(filelist, new DataDirFileComparator(prefix, ascending));\n             return filelist;\n         }\n    +\n    +    /**\n    +     * Returns true if file is a log file.\n    +     *\n    +     * @param file\n    +     * @return\n    +     */\n    +    public static boolean isLogFile(File file) {\n    +        return file.getName().startsWith(LOG_FILE_PREFIX);\n    +    }\n    +\n    +    /**\n    +     * Returns true if file is a snapshot file.\n    +     *\n    +     * @param file\n    +     * @return\n    +     */\n    +    public static boolean isSnapshotFile(File file) {\n    +        return file.getName().startsWith(SNAP_FILE_PREFIX);\n    --- End diff --\n    \n    Same here with the dot.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r162929129\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---\n    @@ -136,13 +136,51 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {\n                 throw new DatadirException(\"Cannot write to snap directory \" + this.snapDir);\n             }\n     \n    +        // check content of transaction log and snapshot dirs if they are two different directories\n    +        if(!this.dataDir.getPath().equals(this.snapDir.getPath())){\n    +            checkLogDir();\n    +            checkSnapDir();\n    +        }\n    +\n             txnLog = new FileTxnLog(this.dataDir);\n             snapLog = new FileSnap(this.snapDir);\n     \n             autoCreateDB = Boolean.parseBoolean(System.getProperty(ZOOKEEPER_DB_AUTOCREATE,\n                     ZOOKEEPER_DB_AUTOCREATE_DEFAULT));\n         }\n     \n    +    private void checkLogDir() throws LogdirContentCheckException {\n    +        File[] files = this.dataDir.listFiles();\n    --- End diff --\n    \n    What do you think of using one of the filtered version of listFiles() rather than getting all the files in the directory?\r\n    For example, using with FilenameFilter:\r\n    https://docs.oracle.com/javase/7/docs/api/java/io/File.html#listFiles(java.io.FilenameFilter)\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r162947080\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    +            logVersionDir.mkdirs();\n    +        }\n    +        if (!snapVersionDir.exists()) {\n    +            snapVersionDir.mkdirs();\n    +        }\n    +\n    +        Assert.assertTrue(logVersionDir.exists());\n    +        Assert.assertTrue(snapVersionDir.exists());\n    +\n    +        // transaction log files in log dir - correct\n    +        File logFile1 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(1L));\n    +        logFile1.createNewFile();\n    +        File logFile2 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(2L));\n    +        logFile2.createNewFile();\n    +\n    +        // snapshot files in snap dir - correct\n    +        File snapFile1 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(1L));\n    +        snapFile1.createNewFile();\n    +        File snapFile2 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(2L));\n    +        snapFile2.createNewFile();\n    +\n    +        Assert.assertTrue(logFile1.exists());\n    +        Assert.assertTrue(logFile2.exists());\n    +        Assert.assertTrue(snapFile1.exists());\n    +        Assert.assertTrue(snapFile2.exists());\n    --- End diff --\n    \n    Again, I believe these checks are redundant. createNewFile() will always successfully create the file or throws exception.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r162947464\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    +            logVersionDir.mkdirs();\n    +        }\n    +        if (!snapVersionDir.exists()) {\n    +            snapVersionDir.mkdirs();\n    +        }\n    +\n    +        Assert.assertTrue(logVersionDir.exists());\n    +        Assert.assertTrue(snapVersionDir.exists());\n    +\n    +        // transaction log files in log dir - correct\n    +        File logFile1 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(1L));\n    +        logFile1.createNewFile();\n    +        File logFile2 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(2L));\n    +        logFile2.createNewFile();\n    +\n    +        // snapshot files in snap dir - correct\n    +        File snapFile1 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(1L));\n    +        snapFile1.createNewFile();\n    +        File snapFile2 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(2L));\n    +        snapFile2.createNewFile();\n    +\n    +        Assert.assertTrue(logFile1.exists());\n    +        Assert.assertTrue(logFile2.exists());\n    +        Assert.assertTrue(snapFile1.exists());\n    +        Assert.assertTrue(snapFile2.exists());\n    +\n    +        String priorAutocreateDirValue = System.getProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE);\n    +        System.setProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE, \"false\");\n    +        FileTxnSnapLog fileTxnSnapLog;\n    +        try {\n    +            fileTxnSnapLog = new FileTxnSnapLog(logDir, snapDir);\n    +        } catch (FileTxnSnapLog.LogdirContentCheckException e) {\n    +            Assert.fail(\"Should not throw LogdirContentCheckException.\");\n    +        } catch (FileTxnSnapLog.SnapdirContentCheckException e) {\n    --- End diff --\n    \n    These 2 catches can be grouped by catching all Exceptions.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r162945403\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/Util.java ---\n    @@ -83,7 +86,7 @@ public static URI makeFileLoggerURL(File dataDir, File dataLogDir,String convPol\n          * @return file name\n          */\n         public static String makeLogName(long zxid) {\n    -        return \"log.\" + Long.toHexString(zxid);\n    +        return LOG_FILE_PREFIX + \".\" + Long.toHexString(zxid);\n    --- End diff --\n    \n    I wonder if LOG_FILE_PREFIX included the dot, would be better for the validation.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r162948359\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    +            logVersionDir.mkdirs();\n    +        }\n    +        if (!snapVersionDir.exists()) {\n    +            snapVersionDir.mkdirs();\n    +        }\n    +\n    +        Assert.assertTrue(logVersionDir.exists());\n    +        Assert.assertTrue(snapVersionDir.exists());\n    +\n    +        // transaction log files in log dir - correct\n    +        File logFile1 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(1L));\n    +        logFile1.createNewFile();\n    +        File logFile2 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(2L));\n    +        logFile2.createNewFile();\n    +\n    +        // snapshot files in snap dir - correct\n    +        File snapFile1 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(1L));\n    +        snapFile1.createNewFile();\n    +        File snapFile2 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(2L));\n    +        snapFile2.createNewFile();\n    +\n    +        Assert.assertTrue(logFile1.exists());\n    +        Assert.assertTrue(logFile2.exists());\n    +        Assert.assertTrue(snapFile1.exists());\n    +        Assert.assertTrue(snapFile2.exists());\n    +\n    +        String priorAutocreateDirValue = System.getProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE);\n    +        System.setProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE, \"false\");\n    +        FileTxnSnapLog fileTxnSnapLog;\n    +        try {\n    +            fileTxnSnapLog = new FileTxnSnapLog(logDir, snapDir);\n    +        } catch (FileTxnSnapLog.LogdirContentCheckException e) {\n    +            Assert.fail(\"Should not throw LogdirContentCheckException.\");\n    +        } catch (FileTxnSnapLog.SnapdirContentCheckException e) {\n    +            Assert.fail(\"Should not throw SnapdirContentCheckException.\");\n    +        } finally {\n    +            if (priorAutocreateDirValue == null) {\n    +                System.clearProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE);\n    +            } else {\n    +                System.setProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE, priorAutocreateDirValue);\n    +            }\n    --- End diff --\n    \n    Setting 'zookeeper.datadir.autocreate' doesn't make any difference here, so it doesn't need to be maintained.\r\n    In addition to that please add clean-up logic to your tests. (e.g. recursively remove temp directories with all their contents)\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r162945532\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/Util.java ---\n    @@ -294,5 +297,25 @@ public int compare(File o1, File o2) {\n             Collections.sort(filelist, new DataDirFileComparator(prefix, ascending));\n             return filelist;\n         }\n    +\n    +    /**\n    +     * Returns true if file is a log file.\n    +     *\n    +     * @param file\n    +     * @return\n    +     */\n    +    public static boolean isLogFile(File file) {\n    +        return file.getName().startsWith(LOG_FILE_PREFIX);\n    --- End diff --\n    \n    It might be safer to check here with the dot (\".\") included in the prefix.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r162946062\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    +            logVersionDir.mkdirs();\n    +        }\n    +        if (!snapVersionDir.exists()) {\n    --- End diff --\n    \n    This is always true.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r162954011\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    +            logVersionDir.mkdirs();\n    +        }\n    +        if (!snapVersionDir.exists()) {\n    +            snapVersionDir.mkdirs();\n    +        }\n    +\n    +        Assert.assertTrue(logVersionDir.exists());\n    +        Assert.assertTrue(snapVersionDir.exists());\n    +\n    +        // transaction log files in log dir - correct\n    +        File logFile1 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(1L));\n    +        logFile1.createNewFile();\n    +        File logFile2 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(2L));\n    +        logFile2.createNewFile();\n    +\n    +        // snapshot files in snap dir - correct\n    +        File snapFile1 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(1L));\n    +        snapFile1.createNewFile();\n    +        File snapFile2 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(2L));\n    +        snapFile2.createNewFile();\n    +\n    +        Assert.assertTrue(logFile1.exists());\n    +        Assert.assertTrue(logFile2.exists());\n    +        Assert.assertTrue(snapFile1.exists());\n    +        Assert.assertTrue(snapFile2.exists());\n    +\n    +        String priorAutocreateDirValue = System.getProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE);\n    +        System.setProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE, \"false\");\n    +        FileTxnSnapLog fileTxnSnapLog;\n    +        try {\n    +            fileTxnSnapLog = new FileTxnSnapLog(logDir, snapDir);\n    +        } catch (FileTxnSnapLog.LogdirContentCheckException e) {\n    +            Assert.fail(\"Should not throw LogdirContentCheckException.\");\n    +        } catch (FileTxnSnapLog.SnapdirContentCheckException e) {\n    +            Assert.fail(\"Should not throw SnapdirContentCheckException.\");\n    +        } finally {\n    +            if (priorAutocreateDirValue == null) {\n    +                System.clearProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE);\n    +            } else {\n    +                System.setProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE, priorAutocreateDirValue);\n    +            }\n    +        }\n    +    }\n    +\n    +    @Test\n    +    public void testDirCheckWithSameLogAndSnapDirs() throws IOException {\n    --- End diff --\n    \n    I don't repeat my previous comments, all of them applies to the rest of test cases.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r162946298\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    +            logVersionDir.mkdirs();\n    +        }\n    +        if (!snapVersionDir.exists()) {\n    +            snapVersionDir.mkdirs();\n    +        }\n    +\n    +        Assert.assertTrue(logVersionDir.exists());\n    +        Assert.assertTrue(snapVersionDir.exists());\n    --- End diff --\n    \n    These assert will never fail. mkdirs() throws exception if the directory cannot be created.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r163282090\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---\n    @@ -136,13 +136,51 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {\n                 throw new DatadirException(\"Cannot write to snap directory \" + this.snapDir);\n             }\n     \n    +        // check content of transaction log and snapshot dirs if they are two different directories\n    +        if(!this.dataDir.getPath().equals(this.snapDir.getPath())){\n    +            checkLogDir();\n    +            checkSnapDir();\n    +        }\n    +\n             txnLog = new FileTxnLog(this.dataDir);\n             snapLog = new FileSnap(this.snapDir);\n     \n             autoCreateDB = Boolean.parseBoolean(System.getProperty(ZOOKEEPER_DB_AUTOCREATE,\n                     ZOOKEEPER_DB_AUTOCREATE_DEFAULT));\n         }\n     \n    +    private void checkLogDir() throws LogdirContentCheckException {\n    +        File[] files = this.dataDir.listFiles();\n    --- End diff --\n    \n    If I used FilenameFilter, then Util.isSnapshotFile() / Util.isLogFile() check would be run for all the files in the directory and listFiles(FilenameFilter filter) would return all the files satisfying the filter condition, however I need only the first occurrence which satisfies the condition, not all of them. The current logic quits from the for loop immediately when it finds a file violating the configuration and throws an exception, while your proposal would iterate over all the files in the directory and would call Util.isSnapshotFile() / Util.isLogFile() for each of the files inside FilenameFilter to prepare the filtered File[]. So using FilenameFilter would be a bit slower, but yes, it might need less lines in code, also at the price of obscuring the purpose of the code (i.e. hasSnapshotFiles / hasLogFiles boolean variables tell what the problem exactly is, while if (snapshotFiles.length > 0) { throw new Exception(...) } would not). However, if we prefer using Java library classes over standard coding patterns even in cases when it does not fit the purpose entirely, then FilenameFilter can be the winner.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r163282674\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---\n    @@ -136,13 +136,51 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {\n                 throw new DatadirException(\"Cannot write to snap directory \" + this.snapDir);\n             }\n     \n    +        // check content of transaction log and snapshot dirs if they are two different directories\n    +        if(!this.dataDir.getPath().equals(this.snapDir.getPath())){\n    +            checkLogDir();\n    +            checkSnapDir();\n    +        }\n    +\n             txnLog = new FileTxnLog(this.dataDir);\n             snapLog = new FileSnap(this.snapDir);\n     \n             autoCreateDB = Boolean.parseBoolean(System.getProperty(ZOOKEEPER_DB_AUTOCREATE,\n                     ZOOKEEPER_DB_AUTOCREATE_DEFAULT));\n         }\n     \n    +    private void checkLogDir() throws LogdirContentCheckException {\n    +        File[] files = this.dataDir.listFiles();\n    +        if(files != null) {\n    +            boolean hasSnapshotFiles = false;\n    +            for (File file : files) {\n    +                if(Util.isSnapshotFile(file)){\n    +                    hasSnapshotFiles = true;\n    +                    break;\n    +                }\n    +            }\n    +            if (hasSnapshotFiles) {\n    +                throw new LogdirContentCheckException(\"Log directory has snapshot files. Check if dataLogDir and dataDir configuration is correct.\");\n    +            }\n    +        }\n    +    }\n    +\n    +    private void checkSnapDir() throws SnapdirContentCheckException {\n    +        File[] files = this.snapDir.listFiles();\n    --- End diff --\n    \n    Please see my comments above.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r163289284\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/Util.java ---\n    @@ -83,7 +86,7 @@ public static URI makeFileLoggerURL(File dataDir, File dataLogDir,String convPol\n          * @return file name\n          */\n         public static String makeLogName(long zxid) {\n    -        return \"log.\" + Long.toHexString(zxid);\n    +        return LOG_FILE_PREFIX + \".\" + Long.toHexString(zxid);\n    --- End diff --\n    \n    I deliberately excluded the dot from LOG_FILE_PREFIX and SNAP_FILE_PREFIX after I checked that in FileTxnLog and FileSnap classes the prefix argument (like \"log\", \"snapshot\") in method calls is passed without the dot. I wanted to avoid confusion.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r163290119\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/Util.java ---\n    @@ -294,5 +297,25 @@ public int compare(File o1, File o2) {\n             Collections.sort(filelist, new DataDirFileComparator(prefix, ascending));\n             return filelist;\n         }\n    +\n    +    /**\n    +     * Returns true if file is a log file.\n    +     *\n    +     * @param file\n    +     * @return\n    +     */\n    +    public static boolean isLogFile(File file) {\n    +        return file.getName().startsWith(LOG_FILE_PREFIX);\n    --- End diff --\n    \n    I agree that it might be safer to check with the dot. I'll add this change.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r163290319\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/Util.java ---\n    @@ -294,5 +297,25 @@ public int compare(File o1, File o2) {\n             Collections.sort(filelist, new DataDirFileComparator(prefix, ascending));\n             return filelist;\n         }\n    +\n    +    /**\n    +     * Returns true if file is a log file.\n    +     *\n    +     * @param file\n    +     * @return\n    +     */\n    +    public static boolean isLogFile(File file) {\n    +        return file.getName().startsWith(LOG_FILE_PREFIX);\n    +    }\n    +\n    +    /**\n    +     * Returns true if file is a snapshot file.\n    +     *\n    +     * @param file\n    +     * @return\n    +     */\n    +    public static boolean isSnapshotFile(File file) {\n    +        return file.getName().startsWith(SNAP_FILE_PREFIX);\n    --- End diff --\n    \n    Ok, I'll include the dot in the check.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r163457798\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---\n    @@ -136,13 +136,51 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {\n                 throw new DatadirException(\"Cannot write to snap directory \" + this.snapDir);\n             }\n     \n    +        // check content of transaction log and snapshot dirs if they are two different directories\n    +        if(!this.dataDir.getPath().equals(this.snapDir.getPath())){\n    +            checkLogDir();\n    +            checkSnapDir();\n    +        }\n    +\n             txnLog = new FileTxnLog(this.dataDir);\n             snapLog = new FileSnap(this.snapDir);\n     \n             autoCreateDB = Boolean.parseBoolean(System.getProperty(ZOOKEEPER_DB_AUTOCREATE,\n                     ZOOKEEPER_DB_AUTOCREATE_DEFAULT));\n         }\n     \n    +    private void checkLogDir() throws LogdirContentCheckException {\n    +        File[] files = this.dataDir.listFiles();\n    --- End diff --\n    \n    I prefer writing (and later reading) less code than more. You could be right about the performance impact, but at least `listFiles()` will only create File objects for the matching files, not for all of them.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r163457880\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/Util.java ---\n    @@ -83,7 +86,7 @@ public static URI makeFileLoggerURL(File dataDir, File dataLogDir,String convPol\n          * @return file name\n          */\n         public static String makeLogName(long zxid) {\n    -        return \"log.\" + Long.toHexString(zxid);\n    +        return LOG_FILE_PREFIX + \".\" + Long.toHexString(zxid);\n    --- End diff --\n    \n    Okay.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r163472195\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    --- End diff --\n    \n    there is a lot of code duplication in these tests, i'm wondering if they can be cleaned up.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r163395510\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/Util.java ---\n    @@ -50,6 +50,9 @@\n         private static final String SNAP_DIR=\"snapDir\";\n         private static final String LOG_DIR=\"logDir\";\n         private static final String DB_FORMAT_CONV=\"dbFormatConversion\";\n    +\n    +    private static final String LOG_FILE_PREFIX = \"log\";\n    --- End diff --\n    \n    Can we use these field when actually creating the log and snapshot files?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r163395848\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---\n    @@ -136,13 +136,51 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {\n                 throw new DatadirException(\"Cannot write to snap directory \" + this.snapDir);\n             }\n     \n    +        // check content of transaction log and snapshot dirs if they are two different directories\n    --- End diff --\n    \n    Could we add a reference to the discussion that explains why this whole check is needed in the comments and/or the exception that the user sees?\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r164605358\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    --- End diff --\n    \n    @afine I've improved/shortened the test code\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r164605521\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---\n    @@ -136,13 +136,51 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {\n                 throw new DatadirException(\"Cannot write to snap directory \" + this.snapDir);\n             }\n     \n    +        // check content of transaction log and snapshot dirs if they are two different directories\n    +        if(!this.dataDir.getPath().equals(this.snapDir.getPath())){\n    +            checkLogDir();\n    +            checkSnapDir();\n    +        }\n    +\n             txnLog = new FileTxnLog(this.dataDir);\n             snapLog = new FileSnap(this.snapDir);\n     \n             autoCreateDB = Boolean.parseBoolean(System.getProperty(ZOOKEEPER_DB_AUTOCREATE,\n                     ZOOKEEPER_DB_AUTOCREATE_DEFAULT));\n         }\n     \n    +    private void checkLogDir() throws LogdirContentCheckException {\n    +        File[] files = this.dataDir.listFiles();\n    --- End diff --\n    \n    Changed implementation to use FilenameFilter.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r164605619\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/Util.java ---\n    @@ -294,5 +297,25 @@ public int compare(File o1, File o2) {\n             Collections.sort(filelist, new DataDirFileComparator(prefix, ascending));\n             return filelist;\n         }\n    +\n    +    /**\n    +     * Returns true if file is a log file.\n    +     *\n    +     * @param file\n    +     * @return\n    +     */\n    +    public static boolean isLogFile(File file) {\n    +        return file.getName().startsWith(LOG_FILE_PREFIX);\n    --- End diff --\n    \n    This is done.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r164605723\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/Util.java ---\n    @@ -294,5 +297,25 @@ public int compare(File o1, File o2) {\n             Collections.sort(filelist, new DataDirFileComparator(prefix, ascending));\n             return filelist;\n         }\n    +\n    +    /**\n    +     * Returns true if file is a log file.\n    +     *\n    +     * @param file\n    +     * @return\n    +     */\n    +    public static boolean isLogFile(File file) {\n    +        return file.getName().startsWith(LOG_FILE_PREFIX);\n    +    }\n    +\n    +    /**\n    +     * Returns true if file is a snapshot file.\n    +     *\n    +     * @param file\n    +     * @return\n    +     */\n    +    public static boolean isSnapshotFile(File file) {\n    +        return file.getName().startsWith(SNAP_FILE_PREFIX);\n    --- End diff --\n    \n    Done.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r164605834\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    --- End diff --\n    \n    I've removed this.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r164605860\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    +            logVersionDir.mkdirs();\n    +        }\n    +        if (!snapVersionDir.exists()) {\n    --- End diff --\n    \n    I've removed this, too.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r164605909\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    +            logVersionDir.mkdirs();\n    +        }\n    +        if (!snapVersionDir.exists()) {\n    +            snapVersionDir.mkdirs();\n    +        }\n    +\n    +        Assert.assertTrue(logVersionDir.exists());\n    +        Assert.assertTrue(snapVersionDir.exists());\n    --- End diff --\n    \n    Ok, removed.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r164605964\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    +            logVersionDir.mkdirs();\n    +        }\n    +        if (!snapVersionDir.exists()) {\n    +            snapVersionDir.mkdirs();\n    +        }\n    +\n    +        Assert.assertTrue(logVersionDir.exists());\n    +        Assert.assertTrue(snapVersionDir.exists());\n    +\n    +        // transaction log files in log dir - correct\n    +        File logFile1 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(1L));\n    +        logFile1.createNewFile();\n    +        File logFile2 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(2L));\n    +        logFile2.createNewFile();\n    +\n    +        // snapshot files in snap dir - correct\n    +        File snapFile1 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(1L));\n    +        snapFile1.createNewFile();\n    +        File snapFile2 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(2L));\n    +        snapFile2.createNewFile();\n    +\n    +        Assert.assertTrue(logFile1.exists());\n    +        Assert.assertTrue(logFile2.exists());\n    +        Assert.assertTrue(snapFile1.exists());\n    +        Assert.assertTrue(snapFile2.exists());\n    --- End diff --\n    \n    Ok, removed.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r164605998\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    +            logVersionDir.mkdirs();\n    +        }\n    +        if (!snapVersionDir.exists()) {\n    +            snapVersionDir.mkdirs();\n    +        }\n    +\n    +        Assert.assertTrue(logVersionDir.exists());\n    +        Assert.assertTrue(snapVersionDir.exists());\n    +\n    +        // transaction log files in log dir - correct\n    +        File logFile1 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(1L));\n    +        logFile1.createNewFile();\n    +        File logFile2 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(2L));\n    +        logFile2.createNewFile();\n    +\n    +        // snapshot files in snap dir - correct\n    +        File snapFile1 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(1L));\n    +        snapFile1.createNewFile();\n    +        File snapFile2 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(2L));\n    +        snapFile2.createNewFile();\n    +\n    +        Assert.assertTrue(logFile1.exists());\n    +        Assert.assertTrue(logFile2.exists());\n    +        Assert.assertTrue(snapFile1.exists());\n    +        Assert.assertTrue(snapFile2.exists());\n    +\n    +        String priorAutocreateDirValue = System.getProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE);\n    +        System.setProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE, \"false\");\n    +        FileTxnSnapLog fileTxnSnapLog;\n    +        try {\n    +            fileTxnSnapLog = new FileTxnSnapLog(logDir, snapDir);\n    +        } catch (FileTxnSnapLog.LogdirContentCheckException e) {\n    +            Assert.fail(\"Should not throw LogdirContentCheckException.\");\n    +        } catch (FileTxnSnapLog.SnapdirContentCheckException e) {\n    --- End diff --\n    \n    Done.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r164606812\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -159,4 +159,222 @@ public void onTxnLoaded(TxnHeader hdr, Record rec) {\n                 }\n             }\n         }\n    +\n    +    @Test\n    +    public void testDirCheckWithCorrectFiles() throws IOException {\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        File logDir = new File(tmpDir, \"logdir\");\n    +        File snapDir = new File(tmpDir, \"snapdir\");\n    +        File logVersionDir = new File(logDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +        File snapVersionDir = new File(snapDir, FileTxnSnapLog.version +  FileTxnSnapLog.VERSION);\n    +\n    +        if (!logVersionDir.exists()) {\n    +            logVersionDir.mkdirs();\n    +        }\n    +        if (!snapVersionDir.exists()) {\n    +            snapVersionDir.mkdirs();\n    +        }\n    +\n    +        Assert.assertTrue(logVersionDir.exists());\n    +        Assert.assertTrue(snapVersionDir.exists());\n    +\n    +        // transaction log files in log dir - correct\n    +        File logFile1 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(1L));\n    +        logFile1.createNewFile();\n    +        File logFile2 = new File(logVersionDir.getPath() +File.separator + Util.makeLogName(2L));\n    +        logFile2.createNewFile();\n    +\n    +        // snapshot files in snap dir - correct\n    +        File snapFile1 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(1L));\n    +        snapFile1.createNewFile();\n    +        File snapFile2 = new File(snapVersionDir.getPath() +File.separator + Util.makeSnapshotName(2L));\n    +        snapFile2.createNewFile();\n    +\n    +        Assert.assertTrue(logFile1.exists());\n    +        Assert.assertTrue(logFile2.exists());\n    +        Assert.assertTrue(snapFile1.exists());\n    +        Assert.assertTrue(snapFile2.exists());\n    +\n    +        String priorAutocreateDirValue = System.getProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE);\n    +        System.setProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE, \"false\");\n    +        FileTxnSnapLog fileTxnSnapLog;\n    +        try {\n    +            fileTxnSnapLog = new FileTxnSnapLog(logDir, snapDir);\n    +        } catch (FileTxnSnapLog.LogdirContentCheckException e) {\n    +            Assert.fail(\"Should not throw LogdirContentCheckException.\");\n    +        } catch (FileTxnSnapLog.SnapdirContentCheckException e) {\n    +            Assert.fail(\"Should not throw SnapdirContentCheckException.\");\n    +        } finally {\n    +            if (priorAutocreateDirValue == null) {\n    +                System.clearProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE);\n    +            } else {\n    +                System.setProperty(FileTxnSnapLog.ZOOKEEPER_DATADIR_AUTOCREATE, priorAutocreateDirValue);\n    +            }\n    --- End diff --\n    \n    I switched off autocreate to make sure the test is reading the test input data and not something else by mistake.\r\n    Added clean-up of temp directories.\n", "Github user mfenes commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/450\n  \n    @afine I've made the following changes:\r\n    Replaced \"log\" and \"snapshot\" strings with constants FileTxnLog.LOG_FILE_PREFIX and FileSnap.SNAPSHOT_FILE_PREFIX.\r\n    Used Util.makeLogName when creating new transaction log file to make sure creation and verification follows the same file name pattern. \r\n    Added reference to ZOOKEEPER-2967 to explain why this check is needed.\r\n    Cleaned up/refactored unit test FileTxnSnapLogTest to make it less verbose and consistent.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r165525848\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java ---\n    @@ -136,13 +136,51 @@ public FileTxnSnapLog(File dataDir, File snapDir) throws IOException {\n                 throw new DatadirException(\"Cannot write to snap directory \" + this.snapDir);\n             }\n     \n    +        // check content of transaction log and snapshot dirs if they are two different directories\n    --- End diff --\n    \n    Added reference to ZOOKEEPER-2967 in the comments.\n", "GitHub user mfenes opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/458\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\r\n    \r\n    This PR adds a check to protect ZK against configuring dataDir and dataLogDir opposingly.\r\n    \r\n    When FileTxnSnapLog is created, it checks if transaction log directory contains snapshot files or vice versa, snapshot directory contains transaction log files. If so, the check throws LogdirContentCheckException or SnapdirContentCheckException, respectively, which translates to DatadirException at ZK startup in QuorumPeerMain and ZooKeeperServerMain.\r\n    \r\n    If the two directories are the same, then no check is done.\r\n    \r\n    For testing, I've added 4 new unit tests which cover the following cases:\r\n    \r\n    transaction log and snapshot directories are different and they are used correctly (no Exception)\r\n    transaction log and snapshot directories are the same (in this case no check is done)\r\n    transaction log and snapshot directories are different and transaction log directory contains snapshot files (LogdirContentCheckException -> ZK quits)\r\n    transaction log and snapshot directories are different and snapshot directory contains transaction log files (SnapdirContentCheckException -> ZK quits)\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2967_3.5\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/458.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #458\n    \n----\ncommit 9d7c91e298ca7a291f502fdc792a2a27bd066d31\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-01-19T23:16:07Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n\ncommit 1fc1eb4fadf3ce2d83e3cd81d97332e9bf96f95c\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-01-20T00:57:13Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n    \n    Replaced |= as this operator is not short-circuit\n\ncommit 9ea2a73fe0719070bbf9411752dc4b08df5f01c4\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-01-29T23:08:11Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n    \n    FilenameFilter, includes dot in log/snapshot filename check, improved/shortened unit test code,\n    added @Before and @After to set up and delete temporary test directories.\n\ncommit 19f1b67449825037cc266f1ea5999a82d7baa352\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-02-01T23:21:45Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n    \n    Replaced \"log\" and \"snapshot\" strings with constants FileTxnLog.LOG_FILE_PREFIX and FileSnap.SNAPSHOT_FILE_PREFIX.\n    Used Util.makeLogName when creating new transaction log file to make sure creation and verification follows the same file name pattern. Added reference to ZOOKEEPER-2967 to explain why this check is needed.\n    Cleanup/refactoring of unit test FileTxnSnapLogTest.\n\ncommit 9b04f3b1e5b05eed80ba2c2df90770fb35bafbef\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-02-07T12:53:35Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n    \n    Fixed possible NP issues.\n\ncommit 4468470a9483468a739a2cc7583e9d10ef7f233b\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-02-07T15:24:42Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n    \n    Required changes to backport ZOOKEEPER-2967 from master to 3.5.\n\n----\n", "GitHub user mfenes opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/459\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\r\n    \r\n    This PR adds a check to protect ZK against configuring dataDir and dataLogDir opposingly.\r\n    \r\n    When FileTxnSnapLog is created, it checks if transaction log directory contains snapshot files or vice versa, snapshot directory contains transaction log files. If so, the check throws LogdirContentCheckException or SnapdirContentCheckException, respectively, which translates to DatadirException at ZK startup in QuorumPeerMain and ZooKeeperServerMain.\r\n    \r\n    If the two directories are the same, then no check is done.\r\n    \r\n    For testing, I've added 4 new unit tests which cover the following cases:\r\n    \r\n    transaction log and snapshot directories are different and they are used correctly (no Exception)\r\n    transaction log and snapshot directories are the same (in this case no check is done)\r\n    transaction log and snapshot directories are different and transaction log directory contains snapshot files (LogdirContentCheckException -> ZK quits)\r\n    transaction log and snapshot directories are different and snapshot directory contains transaction log files (SnapdirContentCheckException -> ZK quits)\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2967_3.4\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/459.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #459\n    \n----\ncommit 3cebb86cf5b2ab7561ee1a25e6eb7cc10bb7a5b6\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-01-19T23:16:07Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n\ncommit a0ef2ce168e65919a2613e8e7dcb0effaf3f838a\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-01-20T00:57:13Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n    \n    Replaced |= as this operator is not short-circuit\n\ncommit 3d978556fc525c9f93db5c73a59d2cf52f847d6c\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-01-29T23:08:11Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n    \n    FilenameFilter, includes dot in log/snapshot filename check, improved/shortened unit test code,\n    added @Before and @After to set up and delete temporary test directories.\n\ncommit 4096a2500961e3015a8ec009ecfa088b6642a1e8\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-02-01T23:21:45Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n    \n    Replaced \"log\" and \"snapshot\" strings with constants FileTxnLog.LOG_FILE_PREFIX and FileSnap.SNAPSHOT_FILE_PREFIX.\n    Used Util.makeLogName when creating new transaction log file to make sure creation and verification follows the same file name pattern. Added reference to ZOOKEEPER-2967 to explain why this check is needed.\n    Cleanup/refactoring of unit test FileTxnSnapLogTest.\n\ncommit 5d8b5d0462700c70d317bc3de3989a03081cba36\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-02-07T12:53:35Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n    \n    Fixed possible NP issues.\n\ncommit 666a1b0a1bd33406f26c29df1407f75c94675d0f\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-02-08T10:31:46Z\n\n    ZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters at startup\n    \n    Required changes to backport ZOOKEEPER-2967 from master to 3.4.\n\n----\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/450\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/458#discussion_r168301155\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/ClientBase.java ---\n    @@ -368,22 +368,37 @@ static void verifyThreadTerminated(Thread thread, long millis)\n             }\n         }\n     \n    +    public static File createEmptyTestDir() throws IOException {\n    +        return createTmpDir(BASETEST, false);\n    +    }\n     \n         public static File createTmpDir() throws IOException {\n    -        return createTmpDir(BASETEST);\n    +        return createTmpDir(BASETEST, true);\n         }\n     \n    -    static File createTmpDir(File parentDir) throws IOException {\n    +    static File createTmpDir(File parentDir, boolean createInitFile) throws IOException {\n             File tmpFile = File.createTempFile(\"test\", \".junit\", parentDir);\n             // don't delete tmpFile - this ensures we don't attempt to create\n             // a tmpDir with a duplicate name\n             File tmpDir = new File(tmpFile + \".dir\");\n             Assert.assertFalse(tmpDir.exists()); // never true if tmpfile does it's job\n             Assert.assertTrue(tmpDir.mkdirs());\n     \n    +        // todo not every tmp directory needs this file\n    --- End diff --\n    \n    why is this todo here?\n", "Github user eolivelli commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r168301786\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -35,92 +38,181 @@\n     \n     public class FileTxnSnapLogTest {\n     \n    -    /**\n    -     * Test verifies the auto creation of data dir and data log dir.\n    -     * Sets \"zookeeper.datadir.autocreate\" to true.\n    -     */\n    -    @Test\n    -    public void testWithAutoCreateDataLogDir() throws IOException {\n    -        File tmpDir = ClientBase.createEmptyTestDir();\n    -        File dataDir = new File(tmpDir, \"data\");\n    -        File snapDir = new File(tmpDir, \"data_txnlog\");\n    -        Assert.assertFalse(\"data directory already exists\", dataDir.exists());\n    -        Assert.assertFalse(\"snapshot directory already exists\", snapDir.exists());\n    +    private File tmpDir;\n    +\n    +    private File logDir;\n    +\n    +    private File snapDir;\n    +\n    +    private File logVersionDir;\n    +\n    +    private File snapVersionDir;\n    +\n    +    @Before\n    +    public void setUp() throws Exception {\n    +        tmpDir = ClientBase.createEmptyTestDir();\n    --- End diff --\n    \n    Maybe it could be a good improvement to start using junit TemporaryFolder rule so that the clean up will ve automatically handled by junit\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/459#discussion_r168301408\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileSnap.java ---\n    @@ -51,19 +51,22 @@\n     public class FileSnap implements SnapShot {\n         File snapDir;\n         private volatile boolean close = false;\n    -    private static final int VERSION=2;\n    -    private static final long dbId=-1;\n    +    private static final int VERSION = 2;\n    --- End diff --\n    \n    Please revert this\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/459#discussion_r168301575\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/ClientBase.java ---\n    @@ -351,20 +351,37 @@ static void verifyThreadTerminated(Thread thread, long millis)\n             }\n         }\n     \n    +    public static File createEmptyTestDir() throws IOException {\n    +        return createTmpDir(BASETEST, false);\n    +    }\n     \n         public static File createTmpDir() throws IOException {\n    -        return createTmpDir(BASETEST);\n    +        return createTmpDir(BASETEST, true);\n         }\n    -    static File createTmpDir(File parentDir) throws IOException {\n    +\n    +    static File createTmpDir(File parentDir, boolean createInitFile) throws IOException {\n             File tmpFile = File.createTempFile(\"test\", \".junit\", parentDir);\n             // don't delete tmpFile - this ensures we don't attempt to create\n             // a tmpDir with a duplicate name\n             File tmpDir = new File(tmpFile + \".dir\");\n             Assert.assertFalse(tmpDir.exists()); // never true if tmpfile does it's job\n             Assert.assertTrue(tmpDir.mkdirs());\n     \n    +        // todo not every tmp directory needs this file\n    --- End diff --\n    \n    do we need this todo?\n", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3727 (See [https://builds.apache.org/job/ZooKeeper-trunk/3727/])\nZOOKEEPER-2967: Add check to validate dataDir and dataLogDir parameters (afine: rev bebe4162bc915b15b4fd90df9446bdf9f83ef3a8)\n* (edit) src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java\n* (edit) src/java/main/org/apache/zookeeper/server/persistence/FileSnap.java\n* (edit) src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java\n* (edit) src/java/main/org/apache/zookeeper/server/persistence/Util.java\n", "Github user mfenes commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/459\n  \n    @afine I've removed the whitespace changes. Please have a look if it looks right now.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/458#discussion_r168888396\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/ClientBase.java ---\n    @@ -368,22 +368,37 @@ static void verifyThreadTerminated(Thread thread, long millis)\n             }\n         }\n     \n    +    public static File createEmptyTestDir() throws IOException {\n    +        return createTmpDir(BASETEST, false);\n    +    }\n     \n         public static File createTmpDir() throws IOException {\n    -        return createTmpDir(BASETEST);\n    +        return createTmpDir(BASETEST, true);\n         }\n     \n    -    static File createTmpDir(File parentDir) throws IOException {\n    +    static File createTmpDir(File parentDir, boolean createInitFile) throws IOException {\n             File tmpFile = File.createTempFile(\"test\", \".junit\", parentDir);\n             // don't delete tmpFile - this ensures we don't attempt to create\n             // a tmpDir with a duplicate name\n             File tmpDir = new File(tmpFile + \".dir\");\n             Assert.assertFalse(tmpDir.exists()); // never true if tmpfile does it's job\n             Assert.assertTrue(tmpDir.mkdirs());\n     \n    +        // todo not every tmp directory needs this file\n    --- End diff --\n    \n    Unfortunately this todo comment is in the master branch from where I backported these changes in ClientBase. \n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/459#discussion_r168889616\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/ClientBase.java ---\n    @@ -351,20 +351,37 @@ static void verifyThreadTerminated(Thread thread, long millis)\n             }\n         }\n     \n    +    public static File createEmptyTestDir() throws IOException {\n    +        return createTmpDir(BASETEST, false);\n    +    }\n     \n         public static File createTmpDir() throws IOException {\n    -        return createTmpDir(BASETEST);\n    +        return createTmpDir(BASETEST, true);\n         }\n    -    static File createTmpDir(File parentDir) throws IOException {\n    +\n    +    static File createTmpDir(File parentDir, boolean createInitFile) throws IOException {\n             File tmpFile = File.createTempFile(\"test\", \".junit\", parentDir);\n             // don't delete tmpFile - this ensures we don't attempt to create\n             // a tmpDir with a duplicate name\n             File tmpDir = new File(tmpFile + \".dir\");\n             Assert.assertFalse(tmpDir.exists()); // never true if tmpfile does it's job\n             Assert.assertTrue(tmpDir.mkdirs());\n     \n    +        // todo not every tmp directory needs this file\n    --- End diff --\n    \n    Unfortunately this todo comment is in the master branch from where I backported these changes in ClientBase.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/450#discussion_r168891236\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/persistence/FileTxnSnapLogTest.java ---\n    @@ -35,92 +38,181 @@\n     \n     public class FileTxnSnapLogTest {\n     \n    -    /**\n    -     * Test verifies the auto creation of data dir and data log dir.\n    -     * Sets \"zookeeper.datadir.autocreate\" to true.\n    -     */\n    -    @Test\n    -    public void testWithAutoCreateDataLogDir() throws IOException {\n    -        File tmpDir = ClientBase.createEmptyTestDir();\n    -        File dataDir = new File(tmpDir, \"data\");\n    -        File snapDir = new File(tmpDir, \"data_txnlog\");\n    -        Assert.assertFalse(\"data directory already exists\", dataDir.exists());\n    -        Assert.assertFalse(\"snapshot directory already exists\", snapDir.exists());\n    +    private File tmpDir;\n    +\n    +    private File logDir;\n    +\n    +    private File snapDir;\n    +\n    +    private File logVersionDir;\n    +\n    +    private File snapVersionDir;\n    +\n    +    @Before\n    +    public void setUp() throws Exception {\n    +        tmpDir = ClientBase.createEmptyTestDir();\n    --- End diff --\n    \n    @eolivelli Thanks for the idea. I'll check and use this next time.\n", "Issue resolved by pull request 459\n[https://github.com/apache/zookeeper/pull/459]", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/458\n  \n    @mfenes Thank you, please close this PR\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/459\n  \n    @mfenes Thank you, please close this PR\n", "Github user mfenes closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/458\n", "Github user mfenes closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/459\n", "This broke the upgrade path between 3.9.11 and 3.9.12, requiring manual intervention. That needs to be specified in the release notes."]}, {"Issue key": "ZOOKEEPER-2966", "Request type": "Sub-task", "Datetime creation": "2018-01-17 08:04:21", "Datetime resolution": "2019-02-28 13:20:51", "Reporter login": "eolivelli", "Reporter name": "Enrico Olivelli", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "It is not always reproducible, I get this in system tests of client applications.\r\n\r\nZK client 3.5.3, stacktrace self-explains\r\n{code:java}\r\njava.lang.NullPointerException\r\n at org.apache.zookeeper.ClientCnxnSocketNetty.onClosing(ClientCnxnSocketNetty.java:206)\r\n at org.apache.zookeeper.ClientCnxn$SendThread.close(ClientCnxn.java:1395)\r\n at org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1440)\r\n at org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1467)\r\n at org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:1319){code}", "Comments": ["Fix needed for 3.5.5?", "I think this was fixed by the netty 4 update. Unfortunately not backported to 3.5\r\nhttps://issues.apache.org/jira/browse/ZOOKEEPER-3152\r\n[~anmolnar] ?\r\n\r\nEdit: Actually it has been backported, 3.5.5 stable will have the netty 4 backport! It should fix this issue.", "As reported of the issue I am closing it as \"Cannot reproduce\" in 3.5.5 since the Netty stack changed", "Hello, I encountered this same bug in ZooKeeper 3.6.2, in the context of the SolrJ client. We hit the NPE when a DNS error causes an exception after the SolrZkClient trys to connect to ZooKeeper, but then immediately calls close on the {{ClientCnxn}} https://github.com/apache/lucene-solr/blob/master/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java#L158-L204.\r\n\r\n{noformat}\r\njava.lang.NullPointerException: null\r\n        at org.apache.zookeeper.ClientCnxnSocketNetty.onClosing(ClientCnxnSocketNetty.java:247) ~[zookeeper-3.6.2.jar:3.6.2]\r\n        at org.apache.zookeeper.ClientCnxn$SendThread.close(ClientCnxn.java:1445) ~[zookeeper-3.6.2.jar:3.6.2]\r\n        at org.apache.zookeeper.ClientCnxn.disconnect(ClientCnxn.java:1488) ~[zookeeper-3.6.2.jar:3.6.2]\r\n        at org.apache.zookeeper.ClientCnxn.close(ClientCnxn.java:1517) ~[zookeeper-3.6.2.jar:3.6.2]\r\n        at org.apache.zookeeper.ZooKeeper.close(ZooKeeper.java:1614) ~[zookeeper-3.6.2.jar:3.6.2]\r\n        at org.apache.solr.common.cloud.SolrZooKeeper.close(SolrZooKeeper.java:97) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]\r\n        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:198) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]\r\n        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:127) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]\r\n        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:122) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]\r\n        at org.apache.solr.common.cloud.SolrZkClient.<init>(SolrZkClient.java:109) ~[solr-solrj-8.7.0.jar:8.7.0 2dc63e901c60cda27ef3b744bc554f1481b3b067 - atrisharma - 2020-10-29 19:39:18]\r\n{noformat}\r\n\r\nThis happens if the {{ClientCnxnSocketNetty}}'s {{onClosing()}} is called before {{connect(...)}} (or if connect isn't called at all) because the {{firstConnect}} {{CountDownLatch}} is only initialized in {{connect(...)}}.\r\nhttps://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java#L129\r\nhttps://github.com/apache/zookeeper/blob/master/zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java#L247\r\nA null check in {{onClosing()}} will fix it, but I don't know if there's any greater change required, e.g. some synchronization around connect and onClosing.\r\n\r\nThe code in [3.5.3|https://github.com/apache/zookeeper/blame/1507f67a06175155003722297daeb60bc912af1d/zookeeper-server/src/main/java/org/apache/zookeeper/ClientCnxnSocketNetty.java#L206] looks very similar so I expect it was the same issue back then when this was originally raised. "]}, {"Issue key": "ZOOKEEPER-2965", "Request type": "Improvement", "Datetime creation": "2018-01-09 17:16:54", "Datetime resolution": null, "Reporter login": "sbam", "Reporter name": "Philippe Serreault", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "Hello,\r\n\r\nFirst of all, some context about the issue and why it became quite apparent to me:\r\n* I'm using the native zookeeper client on linux\r\n* I'm not declaring -DTHREADED\r\n* My zookeeper ensemble is made of server names that need to be resolved\r\n* The ensemble and DNS servers are \"next\" to each other\r\n* My client is \"far\" and uses an unreliable network path that can drop UDP requests\r\n\r\nFor each run in client's main loop, all servers in ensemble are resolved, even if no change in servers list occurred (zookeeper_interest .. update_addrs .. resolve_hosts).\r\nIn my situation, DNS requests could timeout and would trigger a reconnection to ensemble.\r\n\r\nPlease find attached a patch that would prevent DNS queries when hostname was not changed.\r\n\r\nBest regards,", "Comments": ["FYI, I have submitted a GitHub \"pull request\" for ZOOKEEPER-1998 which I believe obsoletes the patch attached here (as we need a more general solution)."]}, {"Issue key": "ZOOKEEPER-2964", "Request type": "Bug", "Datetime creation": "2018-01-08 06:51:01", "Datetime resolution": "2018-01-19 00:13:44", "Reporter login": "xuqihong", "Reporter name": "Qihong Xu", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "I foung a bug that \"conf\" command would return dataDir and dataLogDir opposingly.\r\n\r\nThis bug only exists in versions newer than 3.5. I only found dumpConf in [ZookeeperServer.java|https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java#L188] prints these two paths opposingly. Unlike ZOOKEEPER-2960, the actual paths are not affected and server function is ok.\r\n\r\nI made a small patch to fix this bug. Any review is appreciated.", "Comments": ["[~fournc] [~abrahamfine] is this related to the issue you recently resolved against 3.4.11?", "[~andor] can you confirm?", "[~phunt] [~abrahamfine]\r\n\r\nNo, the issue is similar, but it's completely unrelated. This one is caused by:\r\n\r\nhttps://issues.apache.org/jira/browse/ZOOKEEPER-1423\r\n\r\nIt only applies to master and branch-3.5 branches, on branch-3.4 the conf command is right.\r\n\r\nThe attached patch fixes it.\r\n\r\n[~xuqihong] are u happy to create github pull request?", "GitHub user qihongxu opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/449\n\n    ZOOKEEPER-2964: \"Conf\" command returns dataDir and dataLogDir opposingly\n\n    See [https://issues.apache.org/jira/browse/ZOOKEEPER-2964](url) for details.\r\n    \r\n    The bug affects versions newer than 3.5. According to Andor Molnar\u2018s [review](https://issues.apache.org/jira/browse/ZOOKEEPER-2964?focusedCommentId=16330018&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16330018) this patch can be applied to master and branch-3.5 branches.\r\n    \r\n    Thanks all for reviewing this issue.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/qihongxu/zookeeper ZOOKEEPER-2964\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/449.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #449\n    \n----\ncommit d1b8824fe41dafeb2547b9497b62edd140fa320f\nAuthor: Qihong Xu <qihongxu@...>\nDate:   2018-01-18T07:34:01Z\n\n    dataDir and dataLogDir are printed opposingly\n\n----\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/449\n", "Issue resolved by pull request 449\n[https://github.com/apache/zookeeper/pull/449]", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3697 (See [https://builds.apache.org/job/ZooKeeper-trunk/3697/])\nZOOKEEPER-2964: Conf\" command returns dataDir and dataLogDir opposingly (phunt: rev 78708a8587841ccdcb3d07f33d3114e0c8cfc380)\n* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java\n"]}, {"Issue key": "ZOOKEEPER-2963", "Request type": "Bug", "Datetime creation": "2018-01-04 09:28:10", "Datetime resolution": "2018-01-18 00:01:24", "Reporter login": "wuxiaoxue00", "Reporter name": "wu xiaoxue", "Assignee login": "maoling", "Assignee name": "Ling Mao", "Status": "Resolved", "Description": "Today is China New Year's Day.I am still a single dog.\r\n When reading this line code annotation, I burst into tear.\r\n My New Year's Resolution is girlfriend(s)!!!!!!!!!!!!!!!!!!!!!!!", "Comments": ["GitHub user maoling opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/464\n\n    ZOOKEEPER-2963:standalone\n\n    more details in [JIRA:ZOOKEEPER-2963](https://issues.apache.org/jira/browse/ZOOKEEPER-2963)\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/maoling/zookeeper ZOOKEEPER-2963\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/464.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #464\n    \n----\ncommit 6729ff3ee32fbb7c00ec8cc6ed7628de8a2b1fc8\nAuthor: maoling <maoling199210191@...>\nDate:   2018-02-13T11:18:50Z\n\n    ZOOKEEPER-2963:standalone\n\n----\n", "This my favorite bug of all time."]}, {"Issue key": "ZOOKEEPER-2962", "Request type": "Improvement", "Datetime creation": "2017-12-26 07:50:17", "Datetime resolution": "2018-03-08 17:52:26", "Reporter login": "jiangjiafu", "Reporter name": "Jiafu Jiang", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": null, "Comments": ["GitHub user asutosh936 opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/482\n\n    ZOOKEEPER-2962 - Removed Unused method.\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/asutosh936/zookeeper branch-3.4\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/482.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #482\n    \n----\ncommit c33de596c0df5bb050663a449c00ef08c2621e2c\nAuthor: asutosh936 <asutosh.pandya@...>\nDate:   2018-03-07T01:49:29Z\n\n    ZOOKEEPER-2962 - Removed Unused method.\n\n----\n", "Issue resolved by pull request 482\n[https://github.com/apache/zookeeper/pull/482]", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/482\n  \n    Thanks @asutosh936!\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/482\n  \n    Please close this PR.\n", "Github user asutosh936 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/482\n  \n    Code Merged, closing PR.\n", "Github user asutosh936 closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/482\n"]}, {"Issue key": "ZOOKEEPER-2961", "Request type": "Bug", "Datetime creation": "2017-12-22 22:10:24", "Datetime resolution": "2018-01-19 00:05:35", "Reporter login": "abrahamfine", "Reporter name": "Abraham Fine", "Assignee login": "abrahamfine", "Assignee name": "Abraham Fine", "Status": "Resolved", "Description": "This test relies on hooking into our logging system and creates a new appender using a PatternLayout object shared with the CONSOLE appender. PatternLayout has some synchronization issues (https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html) so we should create a new instance of it. ", "Comments": ["GitHub user afine opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/437\n\n    ZOOKEEPER-2961: Fix testElectionFraud Flakyness\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/afine/zookeeper ZOOKEEPER-2961_master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/437.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #437\n    \n----\ncommit f0a64245102eda07da53bf2842620bde61146a49\nAuthor: Abraham Fine <afine@...>\nDate:   2017-12-22T22:12:26Z\n\n    ZOOKEEPER-2961: Fix testElectionFraud Flakyness\n\n----\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1389//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1389//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1389//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/437\n  \n    Hi @afine \r\n    I'm not sure if I understand this change. Would you please elaborate a little bit on how this stuff is going to fix flakyness?\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/437\n  \n    Hi @anmolnar - I had a description in the JIRA that I just copied here. I hope it clears things up.\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/437\n", "Issue resolved by pull request 437\n[https://github.com/apache/zookeeper/pull/437]", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/437\n  \n    LGTM +1. Thanks @afine \n", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3697 (See [https://builds.apache.org/job/ZooKeeper-trunk/3697/])\nZOOKEEPER-2961: Fix testElectionFraud Flakyness (phunt: rev 77d6b763a7772553ecfa81e3d3ef177452ad16a7)\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java\n"]}, {"Issue key": "ZOOKEEPER-2960", "Request type": "Bug", "Datetime creation": "2017-12-22 17:17:47", "Datetime resolution": "2018-01-08 09:40:34", "Reporter login": "danmilon", "Reporter name": "Dan Milon", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Resolved", "Description": "_emphasized text_After upgrading from zookeeper 3.4.5, to 3.4.11, without editing {{zoo.cfg}}, the new version of the server tries to use the {{dataDir}} as the {{dataLogDir}}, and the {{dataLogDir}} as the {{dataDir}}. Or at least some parts of the server.\r\n\r\nConfiguration file has:\r\n{noformat}\r\n$ grep -i data /etc/zookeeper/zoo.cfg \r\ndataLogDir=/var/lib/zookeeper/datalog\r\ndataDir=/var/lib/zookeeper/data\r\n{noformat}\r\n\r\nBut runtime configuration has:\r\n{noformat}\r\n$ echo conf | nc localhost 2181 | grep -i data\r\ndataDir=/var/lib/zookeeper/datalog/version-2\r\ndataLogDir=/var/lib/zookeeper/data/version-2\r\n{noformat}\r\n\r\nAlso, I got this in the debug logs, so clearly some parts of the server confuse things.\r\n\r\n{noformat}\r\n[PurgeTask:FileTxnSnapLog@79] - Opening datadir:/var/lib/zookeeper/datalog snapDir:/var/lib/zookeeper/data\r\n[main:FileTxnSnapLog@79] - Opening datadir:/var/lib/zookeeper/data snapDir:/var/lib/zookeeper/datalog\r\n{noformat}\r\n\r\nI tried to look in the code for wrong uses of the directories. I only found [ZookeeperServer.java|https://github.com/apache/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java#L227] is passing the arguments to {{FileTxnSnapLog}} in the wrong order, but the code comment says that this is legacy only for tests, so I assume it isn't the cause for my case.", "Comments": ["Any comments on this? Has anyone been able to confirm it?\r\n", "Hi [~danmilon]\r\n\r\nI'm taking a look.\r\n\r\nAndor\r\n", "Hi [~danmilon]\r\n\r\nLooks like you're right. QuorumPeerMain mixes the 2 directories and if the server is running in an ensemble, logs are going to be created in dataDir and snapshots are in dataLogDir. What's even more confusing is that it works right in standalone mode. \r\n\r\nQuorumPeerMain@139 (non-standalone mode):\r\n{code:java}\r\nrunFromConfig() {\r\n...\r\n          quorumPeer.setTxnFactory(new FileTxnSnapLog(\r\n                  new File(config.getDataDir()),\r\n                  new File(config.getDataLogDir())));\r\n{code}\r\n\r\nZookeeperServerMain@112 (standalone mode):\r\n{code:java}\r\nrunFromConfig() {\r\n...\r\n            txnLog = new FileTxnSnapLog(new File(config.dataLogDir), new File(\r\n                    config.dataDir));\r\n{code}\r\n\r\nThe latter is the right way of doing it: FileTxnSnapLog expects dataLogDir (txn logs) in the 1st and dataDir (snapshots) in the 2nd argument.", "Looks like a pretty serious one.\r\n\r\nThis was introduced in branch-3.4 only and released in 3.4.11, because a small refactoring has been made in instantiation of QuorumPeer and now FileTxnSnapLog is created with wrong order of directories.\r\n\r\nAs part of:\r\nhttps://issues.apache.org/jira/browse/ZOOKEEPER-2355\r\n\r\nGithub pull request:\r\nhttps://github.com/apache/zookeeper/pull/304/files#diff-0b7ebe0e5e2011bb4ba7a9f352f948f7\r\n\r\nI believe that users should revert to 3.4.10 and a new release has to be created.", "GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/441\n\n    ZOOKEEPER-2960. The dataDir and dataLogDir are used opposingly\n\n    Previously a small refactoring has swapped the usage of dataDir and dataLogDir when QuorumPeerMain instantiates FileTxnSnapLog class.\r\n    \r\n    This PR fixes it + adds unit test for verification.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2960\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/441.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #441\n    \n----\ncommit 516147499541f7eb2b30f7a8cb4f50ed204469bb\nAuthor: Andor Molnar <andor@...>\nDate:   2018-01-03T14:47:26Z\n\n    ZOOKEEPER-2960. Fixed usage of dataDir and dataLogDir when instantiating FileTxnSnapLog\n\n----\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1395//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1395//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1395//console\n\nThis message is automatically generated.", "Thanks [~andor] for submitting your analysis and patch for this issue.\r\nI also will have a look on this issue very soon.", "Thanks [~danmilon] for reporting this and [~andor] for submitting a patch.\r\n\r\nThe fix looks good and I gave it a +1 on GitHub.\r\n\r\nI'm wondering if we need to provide a way for users running 3.4.11 to be backwards compatible or we can just push a new release with this change (and hopefully ZOOKEEPER-2249 as well). \r\n\r\nPerhaps we should introduce a check of some kind? If datalogdir is different that datadir and snapshots exist in datalogdir we throw an exception and quit. What do you think?", "Github user skamille commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/441\n  \n    +1 gonna attempt to commit this\n", "Github user anmolnar closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/441\n", "Thank you guys :)", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/475\n  \n    I know what the problem is. 3.4.11 has a bug that swaps dataDir and dataLogDir from config file.\r\n    Sorry, it's only mentioned briefly on the release page:\r\n    http://zookeeper.apache.org/releases.html\r\n    > WARNING: ZOOKEEPER-2960 was recently identified as a regression in 3.4.11 ...\r\n    \r\n    Please wait for 3.4.12 for the fix and in the meantime you can probably workaround it with your fix, but it should not be merged in the codebase.\n", "ijuma opened a new pull request #4678: MINOR: Revert to ZooKeeper 3.4.10 due to ZOOKEEPER-2960\nURL: https://github.com/apache/kafka/pull/4678\n \n \n   It's a critical bug that only affects the server, but we\r\n   don't have an easy way to use 3.4.11 for the zookeeper\r\n   client only.\r\n   \r\n   For reference the upgrade to ZooKeeper 3.4.11 was\r\n   done via 2652565d429138c58.\r\n   \r\n   Testing strategy: relying on existing tests and reverted\r\n   a change to a test to pass with 3.4.10.\r\n   \r\n   ### Committer Checklist (excluded from commit message)\r\n   - [ ] Verify design and implementation \r\n   - [ ] Verify test coverage and CI build status\r\n   - [ ] Verify documentation (including upgrade notes)\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n", "ijuma closed pull request #4678: MINOR: Revert to ZooKeeper 3.4.10 due to ZOOKEEPER-2960\nURL: https://github.com/apache/kafka/pull/4678\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/core/src/test/scala/unit/kafka/server/ServerShutdownTest.scala b/core/src/test/scala/unit/kafka/server/ServerShutdownTest.scala\nindex 596c3539f83..5e33816783a 100755\n--- a/core/src/test/scala/unit/kafka/server/ServerShutdownTest.scala\n+++ b/core/src/test/scala/unit/kafka/server/ServerShutdownTest.scala\n@@ -23,6 +23,7 @@ import kafka.utils.TestUtils._\n import kafka.api.FetchRequestBuilder\n import kafka.message.ByteBufferMessageSet\n import java.io.File\n+import java.net.UnknownHostException\n \n import kafka.log.LogManager\n import org.apache.kafka.clients.producer.{KafkaProducer, ProducerRecord}\n@@ -130,7 +131,7 @@ class ServerShutdownTest extends ZooKeeperTestHarness {\n     val newProps = TestUtils.createBrokerConfig(0, zkConnect)\n     newProps.setProperty(\"zookeeper.connect\", \"some.invalid.hostname.foo.bar.local:65535\")\n     val newConfig = KafkaConfig.fromProps(newProps)\n-    verifyCleanShutdownAfterFailedStartup[IllegalArgumentException](newConfig)\n+    verifyCleanShutdownAfterFailedStartup[UnknownHostException](newConfig)\n   }\n \n   @Test\ndiff --git a/core/src/test/scala/unit/kafka/zookeeper/ZooKeeperClientTest.scala b/core/src/test/scala/unit/kafka/zookeeper/ZooKeeperClientTest.scala\nindex 77e11eae716..4eb9e67bf60 100644\n--- a/core/src/test/scala/unit/kafka/zookeeper/ZooKeeperClientTest.scala\n+++ b/core/src/test/scala/unit/kafka/zookeeper/ZooKeeperClientTest.scala\n@@ -16,6 +16,7 @@\n  */\n package kafka.zookeeper\n \n+import java.net.UnknownHostException\n import java.nio.charset.StandardCharsets\n import java.util.UUID\n import java.util.concurrent.atomic.AtomicBoolean\n@@ -57,7 +58,7 @@ class ZooKeeperClientTest extends ZooKeeperTestHarness {\n     System.clearProperty(JaasUtils.JAVA_LOGIN_CONFIG_PARAM)\n   }\n \n-  @Test(expected = classOf[IllegalArgumentException])\n+  @Test(expected = classOf[UnknownHostException])\n   def testUnresolvableConnectString(): Unit = {\n     new ZooKeeperClient(\"some.invalid.hostname.foo.bar.local\", -1, -1, Int.MaxValue, time, \"testMetricGroup\",\n       \"testMetricType\").close()\ndiff --git a/gradle/dependencies.gradle b/gradle/dependencies.gradle\nindex 2ac496b4ca9..b7a03dcd752 100644\n--- a/gradle/dependencies.gradle\n+++ b/gradle/dependencies.gradle\n@@ -71,7 +71,7 @@ versions += [\n   slf4j: \"1.7.25\",\n   snappy: \"1.1.7.1\",\n   zkclient: \"0.10\",\n-  zookeeper: \"3.4.11\",\n+  zookeeper: \"3.4.10\",\n   jfreechart: \"1.0.0\",\n   mavenArtifact: \"3.5.2\"\n ]\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n"]}, {"Issue key": "ZOOKEEPER-2959", "Request type": "Bug", "Datetime creation": "2017-12-20 06:46:38", "Datetime resolution": "2018-05-10 04:03:32", "Reporter login": "xiangyq000", "Reporter name": "xiangyq000", "Assignee login": "bkanivets", "Assignee name": "Bogdan Kanivets", "Status": "Closed", "Description": "Once the ZooKeeper cluster finishes the election for new leader, all learners report their accepted epoch to the leader for the computation of new cluster epoch.\r\n\r\norg.apache.zookeeper.server.quorum.Leader#getEpochToPropose\r\n{code:java}\r\n    private final HashSet<Long> connectingFollowers = new HashSet<Long>();\r\n    public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws InterruptedException, IOException {\r\n        synchronized(connectingFollowers) {\r\n            if (!waitingForNewEpoch) {\r\n                return epoch;\r\n            }\r\n            if (lastAcceptedEpoch >= epoch) {\r\n                epoch = lastAcceptedEpoch+1;\r\n            }\r\n            connectingFollowers.add(sid);\r\n            QuorumVerifier verifier = self.getQuorumVerifier();\r\n            if (connectingFollowers.contains(self.getId()) &&\r\n                                            verifier.containsQuorum(connectingFollowers)) {\r\n                waitingForNewEpoch = false;\r\n                self.setAcceptedEpoch(epoch);\r\n                connectingFollowers.notifyAll();\r\n            } else {\r\n                long start = Time.currentElapsedTime();\r\n                long cur = start;\r\n                long end = start + self.getInitLimit()*self.getTickTime();\r\n                while(waitingForNewEpoch && cur < end) {\r\n                    connectingFollowers.wait(end - cur);\r\n                    cur = Time.currentElapsedTime();\r\n                }\r\n                if (waitingForNewEpoch) {\r\n                    throw new InterruptedException(\"Timeout while waiting for epoch from quorum\");\r\n                }\r\n            }\r\n            return epoch;\r\n        }\r\n    }\r\n{code}\r\n\r\nThe computation will get an outcome once :\r\n# The leader has call method \"getEpochToPropose\"\r\n# The number of all reporters is greater than half of participants.\r\n\r\nThe problem is, an observer server will also send its accepted epoch to the leader, while this procedure treat observers as participants.\r\n\r\nSupposed that the cluster consists of 1 leader, 2 followers and 1 observer, and now the leader and the observer have reported their accepted epochs while neither of the followers has. Thus, the connectingFollowers set consists of two elements, resulting in a size of 2, which is greater than half quorum, namely, 2. Then QuorumVerifier#containsQuorum will return true, because it does not check whether the elements of the parameter are participants.\r\n\r\nThe same flaw exists in org.apache.zookeeper.server.quorum.Leader#waitForEpochAck", "Comments": ["GitHub user xyq000 opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/438\n\n    ZOOKEEPER-2959: ignore accepted epoch and ack from observers\n\n    https://issues.apache.org/jira/browse/ZOOKEEPER-2959\r\n    After a round of elections completes, followers and observers send their accepted epochs to the leader to determine a final epoch.\r\n    Since `QuorumVerifier#containsQuorum(Set set)` does not check whether the elements of argument `set` exactly represent participants, this pull request is intended to ignore reported epochs and acks from observers for logical consistency.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/xyq000/zookeeper ZOOKEEPER-2959\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/438.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #438\n    \n----\ncommit 647061aa7ba1182b83b44b7f2671508012a30b4c\nAuthor: Yongqiang Xiang <xiangyongqiang@...>\nDate:   2017-12-29T08:20:06Z\n\n    ignore accepted epoch and ack from observers\n\n----\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1391//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1391//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1391//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/438\n  \n    Hi @xyq000 \r\n    Thanks for the contribution. I think fixing this issues makes sense, would you please add at least one unit test to reproduce the problem?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/438#discussion_r160286100\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -1183,8 +1183,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 if (lastAcceptedEpoch >= epoch) {\n                     epoch = lastAcceptedEpoch+1;\n                 }\n    -            connectingFollowers.add(sid);\n                 QuorumVerifier verifier = self.getQuorumVerifier();\n    +            if(verifier.getVotingMembers().containsKey(sid)) {\n    --- End diff --\n    \n    I'm wondering if this logic is best suited for the `QuorumVerifier`. In other words, the quorum verifier should be able to determine if a quorum is present from a set of ids while taking into account which sids represent voting members.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/438#discussion_r160422756\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -1183,8 +1183,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 if (lastAcceptedEpoch >= epoch) {\n                     epoch = lastAcceptedEpoch+1;\n                 }\n    -            connectingFollowers.add(sid);\n                 QuorumVerifier verifier = self.getQuorumVerifier();\n    +            if(verifier.getVotingMembers().containsKey(sid)) {\n    --- End diff --\n    \n    +1\n", "Github user shralex commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/438#discussion_r179363930\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -1183,8 +1183,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 if (lastAcceptedEpoch >= epoch) {\n                     epoch = lastAcceptedEpoch+1;\n                 }\n    -            connectingFollowers.add(sid);\n                 QuorumVerifier verifier = self.getQuorumVerifier();\n    +            if(verifier.getVotingMembers().containsKey(sid)) {\n    --- End diff --\n    \n    If I recall correctly, the reason this wasn't done are concerns around the impact on performance - containsQuorum is called every time an ACK is received for every operation proposal. So if you need 3 asks to commit an operation, we'll be doing these checks (figuring out who's a participant and who's not} for {ACK1}, for {ACK1, ACK2} and for {ACK1, ACK2, ACK3}. This compared to comparing two ints as it stands now. So this is why it wasn't done...\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/438#discussion_r179558826\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -1183,8 +1183,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 if (lastAcceptedEpoch >= epoch) {\n                     epoch = lastAcceptedEpoch+1;\n                 }\n    -            connectingFollowers.add(sid);\n                 QuorumVerifier verifier = self.getQuorumVerifier();\n    +            if(verifier.getVotingMembers().containsKey(sid)) {\n    --- End diff --\n    \n    +1 makes sense.\n", "GitHub user lavacat opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/500\n\n    ZOOKEEPER-2959: ignore accepted epoch and LEADERINFO ack from observers\n\n    https://issues.apache.org/jira/browse/ZOOKEEPER-2959\r\n    - add getVotingView check for id in getEpochToPropose and waitForEpochAck\r\n    - refactor waitForNewLeaderAck to use getVotingView\r\n    - unit tests\r\n    \r\n    credit: Xiang Yongqiang (https://github.com/xyq000) for original PR and reporting the issue\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/lavacat/zookeeper branch-3.4\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/500.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #500\n    \n----\ncommit 98c40dac60951c61b3b1922d0038461d81b843a1\nAuthor: Bogdan Kanivets <bkanivets@...>\nDate:   2018-04-08T08:46:37Z\n\n    ZOOKEEPER-2959: ignore accepted epoch and LEADERINFO ack from observers\n    \n    https://issues.apache.org/jira/browse/ZOOKEEPER-2959\n    - add getVotingView check for id in getEpochToPropose and waitForEpochAck\n    - refactor waitForNewLeaderAck to use getVotingView\n    - unit tests\n    \n    credit: Xiang Yongqiang (https://github.com/xyq000) for original PR and reporting the issue\n\n----\n", "Github user shralex commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/500\n  \n    I'm +1. Thanks Bogdan for making the PR.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r180793047\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -245,6 +245,180 @@ public void testLastAcceptedEpoch() throws Exception {\n                 recursiveDelete(tmpDir);\n             }\n         }\n    +\n    +    @Test\n    +    public void testGetEpochToProposeWithObserver() throws Exception {\n    +        File tmpDir = File.createTempFile(\"test\", \"dir\", testData);\n    +        tmpDir.delete();\n    +        tmpDir.mkdir();\n    +        Leader leader = null;\n    +        try {\n    +            QuorumPeer peer = createQuorumPeer(tmpDir);\n    +            long participantId = 1;\n    +            long observerId = peer.quorumPeers.size();\n    +            peer.quorumPeers.put(observerId, new QuorumServer(observerId, \"0.0.0.0\", 33225,\n    --- End diff --\n    \n    I think to be consistent with `createQuorumPeer()` method this should be something like:\r\n    ```\r\n    peers.put(observerId, new QuorumServer(observerId, new InetSocketAddress(\"127.0.0.1\", PortAssignment.unique()), \r\n                   new InetSocketAddress(\"127.0.0.1\", PortAssignment.unique()),\r\n                   new InetSocketAddress(\"127.0.0.1\", PortAssignment.unique()),\r\n                   QuorumPeer.LearnerType.OBSERVER));\r\n    ```\r\n\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r180789703\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -245,6 +245,180 @@ public void testLastAcceptedEpoch() throws Exception {\n                 recursiveDelete(tmpDir);\n             }\n         }\n    +\n    +    @Test\n    +    public void testGetEpochToProposeWithObserver() throws Exception {\n    +        File tmpDir = File.createTempFile(\"test\", \"dir\", testData);\n    --- End diff --\n    \n    Have you considered using ClientBase.createEmptyTestDir() instead?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/500\n  \n    Given that this change affects leader election I think it'd be very beneficial if @fpj could take a look by any chance.\n", "Github user lavacat commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181001854\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -245,6 +245,180 @@ public void testLastAcceptedEpoch() throws Exception {\n                 recursiveDelete(tmpDir);\n             }\n         }\n    +\n    +    @Test\n    +    public void testGetEpochToProposeWithObserver() throws Exception {\n    +        File tmpDir = File.createTempFile(\"test\", \"dir\", testData);\n    +        tmpDir.delete();\n    +        tmpDir.mkdir();\n    +        Leader leader = null;\n    +        try {\n    +            QuorumPeer peer = createQuorumPeer(tmpDir);\n    +            long participantId = 1;\n    +            long observerId = peer.quorumPeers.size();\n    +            peer.quorumPeers.put(observerId, new QuorumServer(observerId, \"0.0.0.0\", 33225,\n    --- End diff --\n    \n    Do you mean using PortAssignment.unique() and \"127.0.0.1\"? Changed it.\n", "Github user lavacat commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181002193\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -245,6 +245,180 @@ public void testLastAcceptedEpoch() throws Exception {\n                 recursiveDelete(tmpDir);\n             }\n         }\n    +\n    +    @Test\n    +    public void testGetEpochToProposeWithObserver() throws Exception {\n    +        File tmpDir = File.createTempFile(\"test\", \"dir\", testData);\n    --- End diff --\n    \n    Refactored\n", "Github user lavacat commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/500\n  \n    Moved these 3 new tests into new class - LeaderWithObserverTest. Had to make createLeader and createQuorumPeer 'public static' in Zab1_0Test. Happy to refactor into common base class\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/500\n  \n    @lavacat I think either moving these methods/classes to a base class or creating a separate `ZabUtils` makes sense in this case to get cleaner code.\n", "Github user lavacat commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/500\n  \n    @anmolnar added ZabUtils\n", "Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181266640\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/ZabUtils.java ---\n    @@ -0,0 +1,140 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.zookeeper.PortAssignment;\n    +import org.apache.zookeeper.server.ServerCnxn;\n    +import org.apache.zookeeper.server.ServerCnxnFactory;\n    +import org.apache.zookeeper.server.ZKDatabase;\n    +import org.apache.zookeeper.server.ZooKeeperServer;\n    +import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n    +import org.apache.zookeeper.server.quorum.flexible.QuorumMaj;\n    +\n    +import java.io.File;\n    +import java.io.FileOutputStream;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.net.InetSocketAddress;\n    +import java.util.HashMap;\n    +\n    +public class ZabUtils {\n    +    public static final int SYNC_LIMIT = 2;\n    +\n    --- End diff --\n    \n    If this is a helper class that doesn't require instantiation then create a private constructor: this makes it \"final\" and prevents instantiation.\n", "Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181564082\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/ZabUtils.java ---\n    @@ -0,0 +1,140 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.zookeeper.PortAssignment;\n    +import org.apache.zookeeper.server.ServerCnxn;\n    +import org.apache.zookeeper.server.ServerCnxnFactory;\n    +import org.apache.zookeeper.server.ZKDatabase;\n    +import org.apache.zookeeper.server.ZooKeeperServer;\n    +import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n    +import org.apache.zookeeper.server.quorum.flexible.QuorumMaj;\n    +\n    +import java.io.File;\n    +import java.io.FileOutputStream;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.net.InetSocketAddress;\n    +import java.util.HashMap;\n    +\n    +public class ZabUtils {\n    +    public static final int SYNC_LIMIT = 2;\n    +\n    +    public static QuorumPeer createQuorumPeer(File tmpDir) throws IOException{\n    +        QuorumPeer peer = new QuorumPeer();\n    +        peer.syncLimit = 2;\n    +        peer.initLimit = 2;\n    +        peer.tickTime = 2000;\n    +        peer.quorumPeers = new HashMap<Long, QuorumPeer.QuorumServer>();\n    +        peer.quorumPeers.put(0L, new QuorumPeer.QuorumServer(0, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.quorumPeers.put(1L, new QuorumPeer.QuorumServer(1, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.quorumPeers.put(2L, new QuorumPeer.QuorumServer(2, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.setQuorumVerifier(new QuorumMaj(peer.quorumPeers.size()));\n    +        peer.setCnxnFactory(new NullServerCnxnFactory());\n    +        File version2 = new File(tmpDir, \"version-2\");\n    +        version2.mkdir();\n    +        FileOutputStream fos;\n    +        fos = new FileOutputStream(new File(version2, \"currentEpoch\"));\n    +        fos.write(\"0\\n\".getBytes());\n    +        fos.close();\n    +        fos = new FileOutputStream(new File(version2, \"acceptedEpoch\"));\n    +        fos.write(\"0\\n\".getBytes());\n    +        fos.close();\n    +        return peer;\n    +    }\n    +\n    +    public static Leader createLeader(File tmpDir, QuorumPeer peer)\n    +            throws IOException, NoSuchFieldException, IllegalAccessException{\n    +        LeaderZooKeeperServer zk = prepareLeader(tmpDir, peer);\n    +        return new Leader(peer, zk);\n    +    }\n    +\n    +    public static MockLeader createMockLeader(File tmpDir, QuorumPeer peer)\n    +            throws IOException, NoSuchFieldException, IllegalAccessException{\n    +        LeaderZooKeeperServer zk = prepareLeader(tmpDir, peer);\n    +        return new MockLeader(peer, zk);\n    +    }\n    +\n    +    private static LeaderZooKeeperServer prepareLeader(File tmpDir, QuorumPeer peer)\n    +            throws IOException, NoSuchFieldException, IllegalAccessException {\n    +        FileTxnSnapLog logFactory = new FileTxnSnapLog(tmpDir, tmpDir);\n    +        peer.setTxnFactory(logFactory);\n    +        Field addrField = peer.getClass().getDeclaredField(\"myQuorumAddr\");\n    +        addrField.setAccessible(true);\n    +        addrField.set(peer, new InetSocketAddress(PortAssignment.unique()));\n    +        ZKDatabase zkDb = new ZKDatabase(logFactory);\n    +        return new LeaderZooKeeperServer(logFactory, peer, new ZooKeeperServer.BasicDataTreeBuilder(), zkDb);\n    +    }\n    +\n    +    private static final class NullServerCnxnFactory extends ServerCnxnFactory {\n    +        public void startup(ZooKeeperServer zkServer) throws IOException,\n    +                InterruptedException {\n    +        }\n    +        public void start() {\n    +        }\n    +        public void shutdown() {\n    +        }\n    +        public void setMaxClientCnxnsPerHost(int max) {\n    +        }\n    +        public void join() throws InterruptedException {\n    +        }\n    +        public int getMaxClientCnxnsPerHost() {\n    +            return 0;\n    +        }\n    +        public int getLocalPort() {\n    +            return 0;\n    +        }\n    +        public InetSocketAddress getLocalAddress() {\n    +            return null;\n    +        }\n    +        public Iterable<ServerCnxn> getConnections() {\n    +            return null;\n    +        }\n    +        public void configure(InetSocketAddress addr, int maxClientCnxns)\n    +                throws IOException {\n    +        }\n    +        public void closeSession(long sessionId) {\n    +        }\n    +        public void closeAll() {\n    +        }\n    +        @Override\n    +        public int getNumAliveConnections() {\n    +            return 0;\n    +        }\n    +    }\n    +\n    +    static final class MockLeader extends Leader {\n    --- End diff --\n    \n    `private` ?\n", "Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181267252\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -161,8 +127,8 @@ public void testLeaderInConnectingFollowers() throws Exception {\n             tmpDir.mkdir();\n             Leader leader = null;\n             try {\n    -            QuorumPeer peer = createQuorumPeer(tmpDir);\n    -            leader = createLeader(tmpDir, peer);\n    +            QuorumPeer peer = ZabUtils.createQuorumPeer(tmpDir);\n    --- End diff --\n    \n    `import static org.apache.zookeeper.server.quorum. ZabUtil.*` then you can simplify method invocation by using `createQuorumPeer(tmpDir);` instead of `ZabUtils.createQuorumPeer(tmpDir);`\n", "Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181268803\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/ZabUtils.java ---\n    @@ -0,0 +1,140 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.zookeeper.PortAssignment;\n    +import org.apache.zookeeper.server.ServerCnxn;\n    +import org.apache.zookeeper.server.ServerCnxnFactory;\n    +import org.apache.zookeeper.server.ZKDatabase;\n    +import org.apache.zookeeper.server.ZooKeeperServer;\n    +import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n    +import org.apache.zookeeper.server.quorum.flexible.QuorumMaj;\n    +\n    +import java.io.File;\n    +import java.io.FileOutputStream;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.net.InetSocketAddress;\n    +import java.util.HashMap;\n    +\n    +public class ZabUtils {\n    +    public static final int SYNC_LIMIT = 2;\n    +\n    +    public static QuorumPeer createQuorumPeer(File tmpDir) throws IOException{\n    +        QuorumPeer peer = new QuorumPeer();\n    +        peer.syncLimit = 2;\n    +        peer.initLimit = 2;\n    +        peer.tickTime = 2000;\n    +        peer.quorumPeers = new HashMap<Long, QuorumPeer.QuorumServer>();\n    +        peer.quorumPeers.put(0L, new QuorumPeer.QuorumServer(0, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.quorumPeers.put(1L, new QuorumPeer.QuorumServer(1, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.quorumPeers.put(2L, new QuorumPeer.QuorumServer(2, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.setQuorumVerifier(new QuorumMaj(peer.quorumPeers.size()));\n    +        peer.setCnxnFactory(new NullServerCnxnFactory());\n    +        File version2 = new File(tmpDir, \"version-2\");\n    +        version2.mkdir();\n    +        FileOutputStream fos;\n    +        fos = new FileOutputStream(new File(version2, \"currentEpoch\"));\n    --- End diff --\n    \n    Could join lines 52 and 53.\n", "Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181267836\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -868,8 +868,8 @@ synchronized public long startForwarding(LearnerHandler handler,\n                     \n             return lastProposed;\n         }\n    -\n    -    private HashSet<Long> connectingFollowers = new HashSet<Long>();\n    +    // VisibleForTesting\n    +    protected HashSet<Long> connectingFollowers = new HashSet<Long>();\n    --- End diff --\n    \n    `protected Set<Long> connectingFollowers = new HashSet<>();`\r\n    \r\n\n", "Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181564184\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -916,7 +919,9 @@ public void waitForEpochAck(long id, StateSummary ss) throws IOException, Interr\n                                                         + leaderStateSummary.getLastZxid()\n                                                         + \" (last zxid)\");\n                     }\n    -                electingFollowers.add(id);\n    +                if (self.getVotingView().containsKey(id)) {\n    --- End diff --\n    \n    I would suggest to encapsulate the `self.getVotingView().containsKey(id)` into a private method as below, if nothing else, for the sake of readability\r\n    \r\n    ```\r\n    private boolean isParticipant(long sid) {\r\n       return self.getVotingView().containsKey(id);\r\n    }\r\n    ```\n", "Github user eribeiro commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r181267704\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -900,9 +902,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 return epoch;\n             }\n         }\n    -\n    -    private HashSet<Long> electingFollowers = new HashSet<Long>();\n    -    private boolean electionFinished = false;\n    +    // VisibleForTesting\n    +    protected HashSet<Long> electingFollowers = new HashSet<Long>();\n    --- End diff --\n    \n    `protected Set<Long> electingFollowers = new HashSet<>()`\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r182128913\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -161,8 +127,8 @@ public void testLeaderInConnectingFollowers() throws Exception {\n             tmpDir.mkdir();\n             Leader leader = null;\n             try {\n    -            QuorumPeer peer = createQuorumPeer(tmpDir);\n    -            leader = createLeader(tmpDir, peer);\n    +            QuorumPeer peer = ZabUtils.createQuorumPeer(tmpDir);\n    --- End diff --\n    \n    Agreed, but please don't use asterisk (*) import. We avoid wildcard imports in Zk project.\n", "Github user edwardoliveira commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r182180406\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java ---\n    @@ -161,8 +127,8 @@ public void testLeaderInConnectingFollowers() throws Exception {\n             tmpDir.mkdir();\n             Leader leader = null;\n             try {\n    -            QuorumPeer peer = createQuorumPeer(tmpDir);\n    -            leader = createLeader(tmpDir, peer);\n    +            QuorumPeer peer = ZabUtils.createQuorumPeer(tmpDir);\n    --- End diff --\n    \n    Yup, you right. Sorry about that. :)\n", "Github user lavacat commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r182887771\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/ZabUtils.java ---\n    @@ -0,0 +1,140 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.zookeeper.PortAssignment;\n    +import org.apache.zookeeper.server.ServerCnxn;\n    +import org.apache.zookeeper.server.ServerCnxnFactory;\n    +import org.apache.zookeeper.server.ZKDatabase;\n    +import org.apache.zookeeper.server.ZooKeeperServer;\n    +import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n    +import org.apache.zookeeper.server.quorum.flexible.QuorumMaj;\n    +\n    +import java.io.File;\n    +import java.io.FileOutputStream;\n    +import java.io.IOException;\n    +import java.lang.reflect.Field;\n    +import java.net.InetSocketAddress;\n    +import java.util.HashMap;\n    +\n    +public class ZabUtils {\n    +    public static final int SYNC_LIMIT = 2;\n    +\n    +    public static QuorumPeer createQuorumPeer(File tmpDir) throws IOException{\n    +        QuorumPeer peer = new QuorumPeer();\n    +        peer.syncLimit = 2;\n    +        peer.initLimit = 2;\n    +        peer.tickTime = 2000;\n    +        peer.quorumPeers = new HashMap<Long, QuorumPeer.QuorumServer>();\n    +        peer.quorumPeers.put(0L, new QuorumPeer.QuorumServer(0, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.quorumPeers.put(1L, new QuorumPeer.QuorumServer(1, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.quorumPeers.put(2L, new QuorumPeer.QuorumServer(2, \"127.0.0.1\", PortAssignment.unique(), 0, null));\n    +        peer.setQuorumVerifier(new QuorumMaj(peer.quorumPeers.size()));\n    +        peer.setCnxnFactory(new NullServerCnxnFactory());\n    +        File version2 = new File(tmpDir, \"version-2\");\n    +        version2.mkdir();\n    +        FileOutputStream fos;\n    +        fos = new FileOutputStream(new File(version2, \"currentEpoch\"));\n    +        fos.write(\"0\\n\".getBytes());\n    +        fos.close();\n    +        fos = new FileOutputStream(new File(version2, \"acceptedEpoch\"));\n    +        fos.write(\"0\\n\".getBytes());\n    +        fos.close();\n    +        return peer;\n    +    }\n    +\n    +    public static Leader createLeader(File tmpDir, QuorumPeer peer)\n    +            throws IOException, NoSuchFieldException, IllegalAccessException{\n    +        LeaderZooKeeperServer zk = prepareLeader(tmpDir, peer);\n    +        return new Leader(peer, zk);\n    +    }\n    +\n    +    public static MockLeader createMockLeader(File tmpDir, QuorumPeer peer)\n    +            throws IOException, NoSuchFieldException, IllegalAccessException{\n    +        LeaderZooKeeperServer zk = prepareLeader(tmpDir, peer);\n    +        return new MockLeader(peer, zk);\n    +    }\n    +\n    +    private static LeaderZooKeeperServer prepareLeader(File tmpDir, QuorumPeer peer)\n    +            throws IOException, NoSuchFieldException, IllegalAccessException {\n    +        FileTxnSnapLog logFactory = new FileTxnSnapLog(tmpDir, tmpDir);\n    +        peer.setTxnFactory(logFactory);\n    +        Field addrField = peer.getClass().getDeclaredField(\"myQuorumAddr\");\n    +        addrField.setAccessible(true);\n    +        addrField.set(peer, new InetSocketAddress(PortAssignment.unique()));\n    +        ZKDatabase zkDb = new ZKDatabase(logFactory);\n    +        return new LeaderZooKeeperServer(logFactory, peer, new ZooKeeperServer.BasicDataTreeBuilder(), zkDb);\n    +    }\n    +\n    +    private static final class NullServerCnxnFactory extends ServerCnxnFactory {\n    +        public void startup(ZooKeeperServer zkServer) throws IOException,\n    +                InterruptedException {\n    +        }\n    +        public void start() {\n    +        }\n    +        public void shutdown() {\n    +        }\n    +        public void setMaxClientCnxnsPerHost(int max) {\n    +        }\n    +        public void join() throws InterruptedException {\n    +        }\n    +        public int getMaxClientCnxnsPerHost() {\n    +            return 0;\n    +        }\n    +        public int getLocalPort() {\n    +            return 0;\n    +        }\n    +        public InetSocketAddress getLocalAddress() {\n    +            return null;\n    +        }\n    +        public Iterable<ServerCnxn> getConnections() {\n    +            return null;\n    +        }\n    +        public void configure(InetSocketAddress addr, int maxClientCnxns)\n    +                throws IOException {\n    +        }\n    +        public void closeSession(long sessionId) {\n    +        }\n    +        public void closeAll() {\n    +        }\n    +        @Override\n    +        public int getNumAliveConnections() {\n    +            return 0;\n    +        }\n    +    }\n    +\n    +    static final class MockLeader extends Leader {\n    --- End diff --\n    \n    Can't make it private, this class is still used in Zab1_0Test\n", "Github user lavacat commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r182889043\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -900,9 +902,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 return epoch;\n             }\n         }\n    -\n    -    private HashSet<Long> electingFollowers = new HashSet<Long>();\n    -    private boolean electionFinished = false;\n    +    // VisibleForTesting\n    +    protected HashSet<Long> electingFollowers = new HashSet<Long>();\n    --- End diff --\n    \n    Can't use Set, because QuorumVerifier uses HashSet param. \r\n    QuorumVerifier.containsQuorum(HashSet<Long> set);\r\n    \r\n    I can refactor it all, but then I'll need to touch QuorumVerifier.java, QuorumMaj.java and QuorumHierarchical.java\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1604//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1604//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1604//console\n\nThis message is automatically generated.", "Github user lavacat commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/500#discussion_r182922147\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -900,9 +902,10 @@ public long getEpochToPropose(long sid, long lastAcceptedEpoch) throws Interrupt\n                 return epoch;\n             }\n         }\n    -\n    -    private HashSet<Long> electingFollowers = new HashSet<Long>();\n    -    private boolean electionFinished = false;\n    +    // VisibleForTesting\n    +    protected HashSet<Long> electingFollowers = new HashSet<Long>();\n    --- End diff --\n    \n    updated\n", "GitHub user lavacat opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/503\n\n    ZOOKEEPER-2959: ignore accepted epoch and LEADERINFO ack from observers\n\n    https://issues.apache.org/jira/browse/ZOOKEEPER-2959\r\n    - added getVotingMembers check for id in getEpochToPropose and waitForEpochAck\r\n    - removed unused learnerType param in waitForNewLeaderAck\r\n    - unit tests\r\n    - refactored common test helpers into ZabUtils\r\n    \r\n    credit: Xiang Yongqiang (https://github.com/xyq000) for original PR and reporting the issue\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/lavacat/zookeeper branch-3.5\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/503.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #503\n    \n----\ncommit d7181d65f66adcfc0fecda2670580e2d2b8ddccb\nAuthor: Bogdan Kanivets <bkanivets@...>\nDate:   2018-04-20T00:02:59Z\n\n    ZOOKEEPER-2959: ignore accepted epoch and LEADERINFO ack from observers\n    \n    https://issues.apache.org/jira/browse/ZOOKEEPER-2959\n    - added getVotingMembers check for id in getEpochToPropose and waitForEpochAck\n    - removed unused learnerType param in waitForNewLeaderAck\n    - unit tests\n    - refactored common test helpers into ZabUtils\n    \n    credit: Xiang Yongqiang (https://github.com/xyq000) for original PR and reporting the issue\n\n----\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1605//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1605//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1605//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1606//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1606//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1606//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1610//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1610//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1610//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1619//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1619//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1619//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1646//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1646//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1646//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1658//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1658//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1658//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 7 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1664//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1664//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1664//console\n\nThis message is automatically generated.", "I think this is ready to merge. There are 3 PRs for 3.4, 3.5 and master.\r\n\r\nSteps to reproduce the bug:\r\n\r\nStart with 3 servers. Config:\r\n\r\n\r\n{code:java}\r\nclientPort=2181\r\nleaderServes=yes\r\nserver.1=<server.1-ip>:2888:3888\r\nserver.2=<server.2-ip>:2888:3888\r\nserver.3=<server.3-ip>:2888:3888:observer\r\n{code}\r\n\r\n\r\nOn server.2 block follower port from server.1 to server.2:\r\n{code:java}\r\nsudo iptables -A INPUT -s <server.1-ip> -p tcp --destination-port 2888 -j DROP{code}\r\nStart server.1, server.2 and server.3\r\nWait for server.2 to declare itself a leader and then fail in waitForNewLeaderAck\r\n\r\n\r\n{code:java}\r\n2018-04-16 20:56:25,990 [myid:2] - INFO [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:2181:Leader@361] - LEADING - LEADER ELECTION TOOK - 3903\r\n2018-04-16 20:56:27,275 [myid:2] - INFO [LearnerHandler-/<server.3-ip>:29223:LearnerHandler@329] - Follower sid: 3 : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@136ca5bc\r\n2018-04-16 20:56:27,281 [myid:2] - INFO [LearnerHandler-/<server.3-ip>:29223:LearnerHandler@384] - Synchronizing with Follower sid: 3 maxCommittedLog=0x0 minCommittedLog=0x0 peerLastZxid=0x0\r\n2018-04-16 20:56:27,281 [myid:2] - INFO [LearnerHandler-/<server.3-ip>:29223:LearnerHandler@393] - leader and follower are in sync, zxid=0x0\r\n2018-04-16 20:56:27,282 [myid:2] - INFO [LearnerHandler-/<server.3-ip>:29223:LearnerHandler@458] - Sending DIFF\r\n2018-04-16 20:56:27,291 [myid:2] - INFO [LearnerHandler-/<server.3-ip>:29223:LearnerHandler@518] - Received NEWLEADER-ACK message from 3\r\n2018-04-16 20:56:47,283 [myid:2] - INFO [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:2181:Leader@502] - Shutting down\r\n2018-04-16 20:56:47,284 [myid:2] - INFO [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:2181:Leader@508] - Shutdown called\r\njava.lang.Exception: shutdown Leader! reason: Waiting for a quorum of followers, only synced with sids: [ 2 ]\r\nat org.apache.zookeeper.server.quorum.Leader.shutdown(Leader.java:508)\r\nat org.apache.zookeeper.server.quorum.Leader.lead(Leader.java:406)\r\nat org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:859){code}\r\n\r\nOn server.2 check that currentEpoch is incremented in currentEpoch file. This is the bug. Epoch is incremented in getEpochToPropose because server.3 is counted in connectingFollowers.", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #18 (See [https://builds.apache.org/job/ZooKeeper-trunk/18/])\nZOOKEEPER-2959: ignore accepted epoch and LEADERINFO ack from observers (ashraer: rev 088dfdf188663f6bad79b0e87b710737b318537d)\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/Leader.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/ZabUtils.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/LeaderWithObserverTest.java\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1684//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1684//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1684//console\n\nThis message is automatically generated."]}, {"Issue key": "ZOOKEEPER-2958", "Request type": "Improvement", "Datetime creation": "2017-12-18 08:49:30", "Datetime resolution": null, "Reporter login": "yuyijq", "Reporter name": "Zhaohui Yu", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "If run zookeeper client in tomcat:\r\n1. create zookeeper connect to zookeeper server\r\n2. connected zookeeper server\r\n3. webapp stopped cause by other reason, so the WebappClassLoader in tomcat can't load new class.\r\n4. run method in ClientCnxn.SendThread has a while loop catch all throwable, so the client will reconnect to the server, and then repeat these steps forever.\r\n\r\nSo, suggest give a StateChecker interface user can override it\r\n{code:java}\r\npublic class ClientCnxn{\r\n  public class SendThread extend Thread{\r\n    public void run(){\r\n       while(stateChecker.check()){\r\n       }\r\n     }\r\n  }\r\n}\r\n{code}\r\n\r\nSo I can pass a StateChecker to check the tomcat WebappClassLoader state.\r\n\r\nThanks\r\n", "Comments": []}, {"Issue key": "ZOOKEEPER-2957", "Request type": "Wish", "Datetime creation": "2017-12-15 09:03:34", "Datetime resolution": null, "Reporter login": "mugulong", "Reporter name": "mugulong", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "Hello,:\r\n    I plan to use zookeeper for distributed consistency in one project, but the project requires proxies to be used for communication between the zookeeper servers and between the server and the client. After the actual test, zookeeper servers can communicate with each other normally through socks5 socket proxy , but zookeeper client and server can not communicate with each other normally through the same socks5 socket proxy, I find that the zookeeper client and server communicate with each other through java nio or netty, and java nio/netty is different from java io in the use of proxy.\r\n    so,whether zookeeper client-server nio or netty communication can use socket proxies?\r\n    Remarks:the zookeeper version I use is 3.4.6.", "Comments": ["Is there any expert who can answer this question?", "Hi,is there any expert who can answer this question?", "I used to proxy zookeeper's port 2181 using nginx tcp upstream.", "Thank you.When you used the proxy, the communication tpye between  zookeeper client and server is nio or netty?", "I think both nio and netty works.", "[~mugulong], have you been able to solve your problem ? How ? [~huaishk], can you please elaborate or even provide some code to show how one can 'proxy zookeeper's port 2181 using nginx tcp upstream.'. I don't really understand what you mean. Thanks a lot."]}, {"Issue key": "ZOOKEEPER-2956", "Request type": "Bug", "Datetime creation": "2017-12-15 08:43:55", "Datetime resolution": null, "Reporter login": "benedict jin", "Reporter name": "Benedict Jin", "Assignee login": "benedict jin", "Assignee name": "Benedict Jin", "Status": "Open", "Description": "We cannot delete znode that owns too many child znodes by `rmr` command, due to the list of child znodes could be 172 MB, which is too huge for the default value of `jute.maxbuffer` (1MB). In fact, we shouldn't be effected by the number of child znodes when we want to delete some special znodes recursively.", "Comments": ["We had the same issue in a production environment recently.\r\n\r\nI wonder if there was any plan on implementing recursive delete on server side."]}, {"Issue key": "ZOOKEEPER-2955", "Request type": "Test", "Datetime creation": "2017-12-13 14:22:10", "Datetime resolution": "2018-05-20 00:38:36", "Reporter login": "mfenes", "Reporter name": "Mark Fenes", "Assignee login": "mfenes", "Assignee name": "Mark Fenes", "Status": "Closed", "Description": "We have limited code coverage support in ZK. Clover for Java was running in the past but was turned off. \r\nEnable Clover code coverage report to make us more confident on the quality, stability and compatibility of future ZK releases.\r\n", "Comments": ["GitHub user mfenes opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/443\n\n    ZOOKEEPER-2955: Enable Clover code coverage report\n\n    ZOOKEEPER-2955: Enable Clover code coverage report\r\n    \r\n    This PR configures OpenClover to generate Java code coverage reports.\r\n    \r\n    To enable OpenClover run the following ant targets with -Drun.clover=true:\r\n    ant -Drun.clover=true jar\r\n    ant -Drun.clover=true test\r\n    and then to generate the code coverage reports run:\r\n    ant -Drun.clover=true generate-clover-reports\r\n    \r\n    The reports will be generated under the build/test/clover/reports directory in HTML and XML formats.\r\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2955\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/443.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #443\n    \n----\ncommit f59dcf8ade02ffbe693b56b480d60aff821900de\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-01-05T13:21:19Z\n\n    ZOOKEEPER-2955: Enable Clover code coverage report\n\n----\n", "GitHub user mfenes opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/444\n\n    ZOOKEEPER-2955: Enable Clover code coverage report\n\n    ZOOKEEPER-2955: Enable Clover code coverage report\r\n    \r\n    This PR configures OpenClover to generate Java code coverage reports.\r\n    \r\n    To enable OpenClover run the following ant targets with -Drun.clover=true:\r\n    ant -Drun.clover=true jar\r\n    ant -Drun.clover=true test\r\n    and then to generate the code coverage reports run:\r\n    ant -Drun.clover=true generate-clover-reports\r\n    \r\n    The reports will be generated under the build/test/clover/reports directory in HTML and XML formats.\r\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2955_3.5\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/444.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #444\n    \n----\ncommit e12114ad5a6fa47b201852a82175a143439eb5db\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-01-05T13:21:19Z\n\n    ZOOKEEPER-2955: Enable Clover code coverage report\n\n----\n", "GitHub user mfenes opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/445\n\n    ZOOKEEPER-2955: Enable Clover code coverage report\n\n    ZOOKEEPER-2955: Enable Clover code coverage report\r\n    \r\n    This PR configures OpenClover to generate Java code coverage reports.\r\n    \r\n    To enable OpenClover run the following ant targets with -Drun.clover=true:\r\n    ant -Drun.clover=true jar\r\n    ant -Drun.clover=true test\r\n    and then to generate the code coverage reports run:\r\n    ant -Drun.clover=true generate-clover-reports\r\n    \r\n    The reports will be generated under the build/test/clover/reports directory in HTML and XML formats.\r\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/mfenes/zookeeper ZOOKEEPER-2955_3.4\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/445.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #445\n    \n----\ncommit 7bda91c4dbaaabdb3df29730bc7af3855b065453\nAuthor: Mark Fenes <mfenes@...>\nDate:   2018-01-05T13:21:19Z\n\n    ZOOKEEPER-2955: Enable Clover code coverage report\n\n----\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1398//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1398//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1398//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1399//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1399//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1399//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1400//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1400//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1400//console\n\nThis message is automatically generated.", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r162224317\n  \n    --- Diff: ivy.xml ---\n    @@ -133,6 +133,8 @@\n         <dependency org=\"org.codehaus.jackson\" name=\"jackson-mapper-asl\"\n                     rev=\"${jackson-mapper-asl.version}\" conf=\"optional->default\"/>\n     \n    +    <dependency org=\"org.openclover\" name=\"clover\" rev=\"${clover.version}\"/>\n    --- End diff --\n    \n    doesn't this need to be in it's own conf, similar to owasp, releaseaudit, etc.. ?\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    It's been a while since I used clover - I didn't notice on the JIRA. Do we need a license at this point to run clover? Is this setup consistent with being able to run clover on apache jenkins or is the intent to only run on a local host?\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/444\n  \n    I added comments on 443\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/445\n  \n    I added comments on 443\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    @phunt This one is OpenClover which the open source version of Clover. Afaik it's under Apache 2.0 license, but @mfenes please correct me if I'm wrong.\n", "Github user mfenes commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    @phunt According to OpenClover 4.2.0 Release Notes at http://openclover.org/doc/openclover-4.2.0-release-notes.html\r\n    _\"No license key required\r\n    OpenClover requires no license key, in some places you may see a \"Clover free edition\" message. You no longer need any external license key to run it. In case you still pass the license key issued by Atlassian in your builds (e.g. via -Dclover.license.path JVM property), it will be ignored and the built-in one will be used.\"_\r\n    \r\n    Regarding being able to run OpenClover on Apache Jenkins: I think we can configure a Jenkins job to generate code coverage reports since OpenClover does not need any installation, it's just a clover-4.2.1.jar file in /build/test/lib. However we would need a storage space to store the generated coverage reports as otherwise it would be deleted when the /build directory is cleaned. Also I would mention that OpenClover needs ZK to be compiled using the \r\n    -Drun.clover=true option in order to use source code instrumentation and ZK compiled with source code instrumentation should not be used for production, only just for testing and generating coverage reports.\n", "Github user mfenes commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    @anmolnar Yes, OpenClover's Intellectual property protection page http://openclover.org/doc/manual/4.2.0/developer-guide--intellectual-property-protection.html says that\r\n    - Clover Core is licensed under Apache 2.0 License\r\n    - Most of Clover plugins are licensed under Apache 2.0 License\r\n    - Bamboo Clover Plugin is proprietary software, see Bamboo Clover Plugin Developer Guide\r\n    - Clover documentation on confluence.atlassian.com is under Creative Commons License, see Contributing to the Clover Documentation\r\n\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    OK. Can you address the other f/b then? (ivy.xml). @afine any thoughts on this wrt the classpath issues we've been facing. I assume the ivy.xml change would be sufficient? Please help verify.\n", "Github user mfenes commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    @anmolnar Clover home is now set to test.java.build.dir. No need to configure CLOVER_HOME environment variable.\n", "Github user mfenes commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    @phunt I've added ivy.xml configuration for Clover: test-coverage-java and created an ant target with the same name, so generating a coverage report for Java became as simple as running ant test-coverage-java.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    This config (from most recent commit) is inconsistent with all the other tools, why?\r\n    \r\n         <property name=\"ivy.javacc.lib\" value=\"${build.dir}/javacc/lib\"/>\r\n         <property name=\"ivy.releaseaudit.lib\" value=\"${build.dir}/releaseaudit/lib\"/>\r\n         <property name=\"ivy.owasp.lib\" value=\"${build.dir}/owasp/lib\"/>\r\n    +    <property name=\"ivy.coverage.lib\" value=\"${test.java.build.dir}/lib\"/>\r\n\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163062338\n  \n    --- Diff: build.xml ---\n    @@ -124,6 +160,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <property name=\"ivy.javacc.lib\" value=\"${build.dir}/javacc/lib\"/>\n         <property name=\"ivy.releaseaudit.lib\" value=\"${build.dir}/releaseaudit/lib\"/>\n         <property name=\"ivy.owasp.lib\" value=\"${build.dir}/owasp/lib\"/>\n    +    <property name=\"ivy.coverage.lib\" value=\"${test.java.build.dir}/lib\"/>\n    --- End diff --\n    \n    This directory is inconsistent with all the other tools - why?\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163062466\n  \n    --- Diff: build.xml ---\n    @@ -132,21 +169,16 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <property name=\"ant_task_repo_url\"\n             value=\"${mvnrepo}${tsk.org}${ant-task.version}/maven-ant-tasks-${ant-task.version}.jar\"/>\n         <property name=\"ant_task.jar\" location=\"${ivy.lib}/maven-ant-tasks-${ant-task.version}.jar\"/>\n    -    \n    -    <available property=\"clover.present\"\n    -               classname=\"com.cenqua.clover.CloverInstr\"\n    -               classpath=\"${clover.home}/lib/clover.jar\"/>\n     \n    -    <available file=\"${c.src.dir}/Makefile\" property=\"Makefile.present\"/>\n    -\n    -    <!-- check if clover reports should be generated -->\n    -    <condition property=\"clover.enabled\">\n    -      <and>\n    -        <isset property=\"run.clover\"/>\n    -        <isset property=\"clover.present\"/>\n    -      </and>\n    -    </condition>\n    +    <!-- clover property set -->\n    +    <property name=\"clover.home\" location=\"${test.java.build.dir}\"/>\n    --- End diff --\n    \n    Similar as comment above - can't we contain this all in it's own subdir?\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    I did an \"ant compile-test\" and ended up with clover dependencies being pulled into build - clover dependencies should only be pulled when clover tasks are run.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163198966\n  \n    --- Diff: build.xml ---\n    @@ -124,6 +160,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <property name=\"ivy.javacc.lib\" value=\"${build.dir}/javacc/lib\"/>\n         <property name=\"ivy.releaseaudit.lib\" value=\"${build.dir}/releaseaudit/lib\"/>\n         <property name=\"ivy.owasp.lib\" value=\"${build.dir}/owasp/lib\"/>\n    +    <property name=\"ivy.coverage.lib\" value=\"${test.java.build.dir}/lib\"/>\n    --- End diff --\n    \n    I did see the naming inconsistency, but on the other hand code coverage measurement belongs to testing, and everything related to testing is placed under build/test. Not all the tools have their own subdirectory under the build directory (like javacc, releaseaudit, owasp), e.g. JUnit does not have. If JUnit does not have its own subdirectory under build/, then why should OpenClover have. If the reason to put OpenClover under an own build/coverage directory instead of putting it into build/test/lib is packaging, i.e. not delivering the clover jar in releases, then basically the answer is that a ZK compiled with Clover should not be released. I also verified that ant tar does not include build/test/lib jars. If ant targets tar, jar, compile, test-core-java etc. are run without the -Drun.clover=true parameter, then the clover jar is not even retrieved by ivy, so it won't be included, everything will run as before. Another reason is, that originally in current code everything related to Clover (db, reports) is configured to be under build/test/clover. If Clover db and reports are under build/test/clover, then why should the clover jar be put in build/coverage/lib and not in build/test/lib? All-in-all, these were the reasons behind my decision to put Clover under build/test/lib instead of build/coverage/lib. However, I agree that this is a naming inconsistency and I can see the reason that everything which has its own ivy configuration should have its own directory under build, so I can change the location of Clover if you prefer having Clover under build/coverage/lib.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163218498\n  \n    --- Diff: build.xml ---\n    @@ -132,21 +169,16 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <property name=\"ant_task_repo_url\"\n             value=\"${mvnrepo}${tsk.org}${ant-task.version}/maven-ant-tasks-${ant-task.version}.jar\"/>\n         <property name=\"ant_task.jar\" location=\"${ivy.lib}/maven-ant-tasks-${ant-task.version}.jar\"/>\n    -    \n    -    <available property=\"clover.present\"\n    -               classname=\"com.cenqua.clover.CloverInstr\"\n    -               classpath=\"${clover.home}/lib/clover.jar\"/>\n     \n    -    <available file=\"${c.src.dir}/Makefile\" property=\"Makefile.present\"/>\n    -\n    -    <!-- check if clover reports should be generated -->\n    -    <condition property=\"clover.enabled\">\n    -      <and>\n    -        <isset property=\"run.clover\"/>\n    -        <isset property=\"clover.present\"/>\n    -      </and>\n    -    </condition>\n    +    <!-- clover property set -->\n    +    <property name=\"clover.home\" location=\"${test.java.build.dir}\"/>\n    --- End diff --\n    \n    The main reason why I set clover.home to ${test.java.build.dir} is because originally in master, 3.5 and 3.4 Clover db is set to ${test.java.build.dir}/clover/db and Clover reports are set to ${test.java.build.dir}/clover/reports. This indicates that clover.home should be ${test.java.build.dir}. Since Clover was in use before this change, I thought it's better to keep the original settings as other tools (e.g. a Jenkins job) might rely on reports being generated under this location. @anmolnar also recommended to use this setting in his comment. Setting clover.home to ${test.java.build.dir} does not put everything related to Clover directly under build/test, as Clover db goes into build/test/clover/db, Clover reports go under build/test/clover/reports and clover jar is placed in /build/test/lib. Of course, I can change clover.home to point to any other location, e.g. to build/coverage, but one reason against it might be that Clover code coverage is more related to test than to build.\n", "Github user mfenes commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    @phunt I've fixed \"ant compile-test\". Now clover dependencies are pulled into build only when run.clover=true. Thanks for noticing this.\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163363116\n  \n    --- Diff: build.xml ---\n    @@ -1406,50 +1410,53 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n     \n         <target name=\"test-core\" depends=\"test-core-java, test-core-cppunit\"/>\n     \n    +    <target name=\"test-coverage-java\">\n    --- End diff --\n    \n    Why do we need this given we have a \"clover\" target?\r\n    \r\n    I'm also hesitant to explicitly code that \"coverage\" == clover. In the past we've allowed coverage other than clover to be used.\r\n    \r\n    perhaps \"test-coverage-clover-java\" instead?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163373344\n  \n    --- Diff: build.xml ---\n    @@ -1406,50 +1410,53 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n     \n         <target name=\"test-core\" depends=\"test-core-java, test-core-cppunit\"/>\n     \n    +    <target name=\"test-coverage-java\">\n    +        <antcall target=\"test-core-java\">\n    +            <param name=\"run.clover\" value=\"true\"/>\n    +        </antcall>\n    +        <antcall target=\"generate-clover-reports\"/>\n    +    </target>\n    +\n         <!-- ====================================================== -->\n         <!-- Run optional third-party tool targets                  -->\n         <!-- ====================================================== -->\n     \n         <!-- clover code coverage -->\n    -    <target name=\"clover\" depends=\"clover.setup, clover.info\" \n    -            description=\"Instrument the Unit tests using Clover.  Requires a Clover license and CLOVER_HOME environment variable set appropriately.  To use, specify -Drun.clover=true on the command line.\"/>\n    +    <target name=\"clover\" if=\"run.clover\" depends=\"ivy-retrieve-test-coverage-java, clover.check, clover.setup\"\n    +            description=\"Instrument the Unit tests using Clover. To use, specify -Drun.clover=true on the command line.\"/>\n    --- End diff --\n    \n    we should update this description to show that we have an ant task that can be used instead of specifying a system property\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163372311\n  \n    --- Diff: build.xml ---\n    @@ -23,6 +23,48 @@ xmlns:artifact=\"antlib:org.apache.maven.artifact.ant\"\n     xmlns:maven=\"antlib:org.apache.maven.artifact.ant\"\n     xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n     \n    +    <!-- ====================================================== -->\n    --- End diff --\n    \n    why was this stuff moved?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163377320\n  \n    --- Diff: build.xml ---\n    @@ -124,6 +160,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <property name=\"ivy.javacc.lib\" value=\"${build.dir}/javacc/lib\"/>\n         <property name=\"ivy.releaseaudit.lib\" value=\"${build.dir}/releaseaudit/lib\"/>\n         <property name=\"ivy.owasp.lib\" value=\"${build.dir}/owasp/lib\"/>\n    +    <property name=\"ivy.coverage.lib\" value=\"${test.java.build.dir}/lib\"/>\n    --- End diff --\n    \n    My concern here is around classpath issues. Ideally I would like to make sure that clover and its dependencies (my understanding is that there are none currently but this could change) are only included when we are instrumenting coverage. The given setup may see us including clover in the test classpath even when not intended. For example, a developer wants to run the tests with clover and then immediately after without. If my understanding is correct, it there is no `clean` before those two executions clover will be included in the classpath of the second. \r\n\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163670562\n  \n    --- Diff: build.xml ---\n    @@ -1406,50 +1410,53 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n     \n         <target name=\"test-core\" depends=\"test-core-java, test-core-cppunit\"/>\n     \n    +    <target name=\"test-coverage-java\">\n    --- End diff --\n    \n    Because the \"clover\" target does not generate the HTML and XML reports. \r\n    It's used to initialise and setup Clover and it's called as a dependency of \"compile\" to instrument source code.\r\n    \r\n    I think declaring a \"test-coverage-java\" target to run Clover does not mean \"coverage\" == clover. The fact that it currently calls \"test-core-java\" and \"generate-clover-reports\" does not mean that we would not allow anybody to add/use other code coverage tools here.\r\n    \r\n    The reason behind the naming was that I'm also planning to add C code coverage tests, and following the already existing ant target names \"test-core-java\" and \"test-core-cppunit\" as naming patterns, there could be targets \"test-coverage-java\" and \"test-coverage-cppunit\" to generate coverage reports for Java and C, respectively. \r\n    \r\n    Their parent target could be \"test-coverage\", which would run \"test-coverage-java\" and \"test-coverage-cppunit\" to prepare a complete coverage report for both Java and C.\r\n    \r\n    Then running a full coverage report for ZK would be as simple as running \"test-coverage\".\r\n    Please let me know what you think.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163675784\n  \n    --- Diff: build.xml ---\n    @@ -124,6 +160,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <property name=\"ivy.javacc.lib\" value=\"${build.dir}/javacc/lib\"/>\n         <property name=\"ivy.releaseaudit.lib\" value=\"${build.dir}/releaseaudit/lib\"/>\n         <property name=\"ivy.owasp.lib\" value=\"${build.dir}/owasp/lib\"/>\n    +    <property name=\"ivy.coverage.lib\" value=\"${test.java.build.dir}/lib\"/>\n    --- End diff --\n    \n    Ok. So would changing the location of Clover to ${build.dir}/clover/lib solve this problem?\r\n    \r\n    * Are you ok with the following directory structure:\r\n    build/clover/db for Clover database,\r\n    build/clover/jar for Clover jar,\r\n    build/clover/reports for Clover reports, and\r\n    clover.home=${build.dir}/clover\r\n    \r\n    * Should I change property name \"ivy.coverage.lib\" to \"ivy.clover.lib\"?\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163678316\n  \n    --- Diff: build.xml ---\n    @@ -1406,50 +1410,53 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n     \n         <target name=\"test-core\" depends=\"test-core-java, test-core-cppunit\"/>\n     \n    +    <target name=\"test-coverage-java\">\n    --- End diff --\n    \n    @phunt Actually, if you prefer, I could rename both the ivy configuration and the ant target for clover to \"test-coverage-clover-java\" as this does not exclude the possibility of including it into a test-coverage-java target later.\n", "Github user mfenes commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163684223\n  \n    --- Diff: build.xml ---\n    @@ -23,6 +23,48 @@ xmlns:artifact=\"antlib:org.apache.maven.artifact.ant\"\n     xmlns:maven=\"antlib:org.apache.maven.artifact.ant\"\n     xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n     \n    +    <!-- ====================================================== -->\n    --- End diff --\n    \n    @afine \r\n    Because I need\r\n    `<property name=\"clover.version\" value=\"4.2.1\" />`\r\n    in\r\n    `<property name=\"clover.jar\" location=\"${clover.home}/lib/clover-${clover.version}.jar\"/>`\r\n    and the dependency versions at their original location were declared later than clover.jar, so clover.version was undefined at this point.\r\n    \r\n    I had 3 choices:\r\n    1. move the clover property set behind the dependency version declarations just before the macro definitions, separating it from the other property set declarations,\r\n    1. move all the dependency version declarations before the clover property set,\r\n    1. or just declare the clover.version separately from the other dependency versions in the clover property set block.\r\n    \r\n    I've chosen option 2 as I thought that was the best out of the three.\r\n    Please let me know if there is a better way to solve this.\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r163712079\n  \n    --- Diff: build.xml ---\n    @@ -1406,50 +1410,53 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n     \n         <target name=\"test-core\" depends=\"test-core-java, test-core-cppunit\"/>\n     \n    +    <target name=\"test-coverage-java\">\n    --- End diff --\n    \n    \"I think declaring a \"test-coverage-java\" target to run Clover does not mean \"coverage\" == clover. The fact that it currently calls \"test-core-java\" and \"generate-clover-reports\" does not mean that we would not allow anybody to add/use other code coverage tools here.\"\r\n    \r\n    Notice how we have cobertura down below in the build.xml file. This is what I mean. \"test-coverage-java\" just calls clover. If we had created a \"test-coverage-java\" in the past that called cobertura it seems like that's a statement. It's not a big deal, but hopefully you see what I mean.\r\n    \r\n    Renaming to be more clover specific seems reasonable to me.\n", "Github user mfenes commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    @phunt @afine I've made the following changes: moved Clover (db, lib, reports) to ${build.dir}/clover. Included test sources with `<testsources>` in clover-setup. \r\n    Changed naming to follow other tools and updated/added ant target descriptions.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/443#discussion_r168883423\n  \n    --- Diff: build.xml ---\n    @@ -1861,4 +1876,18 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n            <delete dir=\"${build.dir.eclipse}\" />\n          </target>\n     \n    +    <target name=\"print_compile_classpath\">\n    --- End diff --\n    \n    As we discussed offline please move these useful targets to a new JIRA.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    @afine do you still need explanation for the above error to commit this?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    @phunt @afine Just tested this patch and it works fine. I think it's ready to be merged.\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/443\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/443\n  \n    +1, lgtm. I've committed this to master. Thanks @mfenes !\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/444\n  \n    Does this need to be updated to reflect #443 ?\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/445\n  \n    Does this need to be updated to reflect #443 ?\n", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3818 (See [https://builds.apache.org/job/ZooKeeper-trunk/3818/])\nZOOKEEPER-2955: Enable Clover code coverage report (phunt: rev 79627c6e07a901150709896f7c22597164badfc5)\n* (edit) build.xml\n* (edit) ivy.xml\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1675//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1675//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1675//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1677//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1677//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1677//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1676//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1676//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1676//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1678//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1678//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1678//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1679//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1679//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1679//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1680//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1680//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1680//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1681//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1681//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1681//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1682//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1682//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1682//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 2 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1683//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1683//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1683//console\n\nThis message is automatically generated.", "+1. Thanks [~mfenes] and [~nkalmar]"]}, {"Issue key": "ZOOKEEPER-2954", "Request type": "Bug", "Datetime creation": "2017-12-13 10:26:07", "Datetime resolution": null, "Reporter login": "adityap", "Reporter name": "Aditya Pawaskar", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "when I run Apache Zookeeper 3.4.11 using OpenJDK-8 and clone source code from git.\r\nAt 'ant compile_jute' command I get following error message :\r\n\r\n{noformat}\r\nBuildfile: /root/zookeeper/build.xml\r\n\r\ninit:\r\n\r\njute:\r\n    [javac] Compiling 39 source files to /root/zookeeper/build/classes\r\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.6\r\n    [javac] /root/zookeeper/src/java/main/org/apache/jute/Record.java:21: error: package org.apache.yetus.audience does not exist\r\n    [javac] import org.apache.yetus.audience.InterfaceAudience;\r\n    [javac]                                 ^\r\n    [javac] /root/zookeeper/src/java/main/org/apache/jute/Record.java:29: error: package InterfaceAudience does not exist\r\n    [javac] @InterfaceAudience.Public\r\n    [javac]                   ^\r\n    [javac] Note: Some input files use unchecked or unsafe operations.\r\n    [javac] Note: Recompile with -Xlint:unchecked for details.\r\n    [javac] 2 errors\r\n    [javac] 1 warning\r\n\r\nBUILD FAILED\r\n/root/zookeeper/build.xml:315: Compile failed; see the compiler error output for details.\r\n{noformat}\r\n\r\nAccording to error, ant is unable to get InterfaceAudience which is part of audience-annotations-0.5.0.jar mentioned in build.xml\r\nwhen I search for this jar file, I could not find it in source code.\t\r\n\r\nThanks and Regards,\r\nAditya", "Comments": ["[~adityap]\r\n\r\nAnt task 'compile_jute' doesn't trigger ivy-init.\r\n\r\nRun 'ant clean compile-test' or 'ant clean jar' first. Jute compilation will be triggered in both.\r\n\r\nWhat would you like to achieve?", "Hi Andor Molnar,\r\n\r\n    Thanks for solution. it seems issue has been resolved.\r\n\r\n    According to REDAME of [https://github.com/apache/zookeeper/tree/master/src/c]\r\n\r\n    step 1 in INSTALLATION mentioned that  *ant compile_jute* command creates 'generated' folder.\r\n\r\n    but because of above error the folder was unable to create.", "[~adityap]\r\n\r\nI see, that must be a documentation error. Let me follow up on this and fix it.\r\n\r\nThanks for the heads-up.", "I think 'build-generated' task would be a good replacement in the docs.\r\n\r\n[~adityap] Would you please give it a try?", "* As mentioned in on GitHub zookeeper [page|https://github.com/apache/zookeeper/tree/master/src/c], I could build zookeeper 3.4.10  using command : *\u2018ant compile_jute\u2019*. However, same command is not working with zookeeper 3.4.11.  below are the steps followed: \r\n{noformat}\r\ngit clone https://github.com/apache/zookeeper\r\ncd zookeeper\r\ngit checkkout tags/release-3.4.10  ### tags/release-3.4.11  for v3.4.11\r\nant compile_jute   ### works for v3.4.10 however not working for v3.4.11\r\ncd src/c\r\nACLOCAL=\"aclocal -I /usr/share/aclocal\" autoreconf -if\r\n./configure && make && sudo make install\r\nsudo make distclean\r\n{noformat}\r\nWith \u2018ant compile_jute\u2019 facing an issue mentioned in description. \r\n\r\n* So , As suggested by you, I have used *\u2018ant clean jar\u2019*  command v 3.4.11 which worked. Thanks for the help.\r\nNew set of instructions for v3.4.11:  \r\n{noformat}\r\ngit clone https://github.com/apache/zookeeper\r\ncd zookeeper\r\ngit checkkout tags/release-3.4.11\r\nant clean jar \r\ncd src/c\r\nACLOCAL=\"aclocal -I /usr/share/aclocal\" autoreconf -if\r\n./configure && make && sudo make install\r\nsudo make distclean\r\n{noformat}\r\n\r\n* Also, I tried to use command *\u2018ant build-generated\u2019*  for v3.4.11 but unfortunately it gives me the same error : *\r\n{noformat}\r\nBuildfile: /root/zookeeper/build.xml\r\n\r\ninit:\r\n\r\njute:\r\n    [javac] Compiling 39 source files to /root/zookeeper/build/classes\r\n    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.6\r\n    [javac] /root/zookeeper/src/java/main/org/apache/jute/Record.java:21: error: package org.apache.yetus.audience does not exist\r\n    [javac] import org.apache.yetus.audience.InterfaceAudience;\r\n    [javac]                                 ^\r\n    [javac] /root/zookeeper/src/java/main/org/apache/jute/Record.java:29: error: package InterfaceAudience does not exist\r\n    [javac] @InterfaceAudience.Public\r\n    [javac]                   ^\r\n    [javac] Note: Some input files use unchecked or unsafe operations.\r\n    [javac] Note: Recompile with -Xlint:unchecked for details.\r\n    [javac] 2 errors\r\n    [javac] 1 warning\r\n\r\nBUILD FAILED\r\n/root/zookeeper/build.xml:315: Compile failed; see the compiler error output for details.\r\n{noformat}"]}, {"Issue key": "ZOOKEEPER-2953", "Request type": "Bug", "Datetime creation": "2017-12-13 00:24:44", "Datetime resolution": "2017-12-16 00:49:05", "Reporter login": "abrahamfine", "Reporter name": "Abraham Fine", "Assignee login": "abrahamfine", "Assignee name": "Abraham Fine", "Status": "Resolved", "Description": "testNoLogBeforeLeaderEstablishment has been flaky on 3.4, 3.5, and master for quite awhile. My understanding is that the purpose of the test is to make sure that a server receives support from the quorum before changing the epoch and acting as leader. \r\n\r\nThere are a couple issues with the test in its current state. First, the assertions the test makes are not always true. It is possible, if the zookeeper database is not cleared, for a follower to be ahead of a leader when the quorum is shutdown. That follower will then likely become leader when the quorum is restarted. This is the cause of the flaky behavior. Second, the test does not appear to create the conditions it wants to test for. Since, ZOOKEEPER-335 (specifically the ZOOKEEPER-1081 subtask) we take the epoch into consideration in {{FastLeaderElection}} so the test no longer \"believes it is the leader once it recovers\".\r\n\r\nAfter discussing the issue offline with [~phunt] we decided it would still be valuable to test the situation where a server is elected leader without the support of the quorum. So I removed {{testNoLogBeforeLeaderEstablishment}} and created a new test called {{testElectionFraud}}.", "Comments": ["GitHub user afine opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/432\n\n    [WIP] ZOOKEEPER-2953: Flaky Test: testNoLogBeforeLeaderEstablishment\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/afine/zookeeper ZOOKEEPER-2953\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/432.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #432\n    \n----\ncommit 68a0382093da1d64583211746ac672ed12f5da5c\nAuthor: Abraham Fine <afine@apache.org>\nDate:   2017-12-13T00:35:50Z\n\n    ZOOKEEPER-2953: Flaky Test: testNoLogBeforeLeaderEstablishment\n\n----\n", "GitHub user afine opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/433\n\n    ZOOKEEPER-2953: Flaky Test: testNoLogBeforeLeaderEstablishment\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/afine/zookeeper ZOOKEEPER-2953_3.5\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/433.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #433\n    \n----\ncommit 36abecd0d4389b24e22852cccac50259b2abdb1a\nAuthor: Abraham Fine <afine@apache.org>\nDate:   2017-12-13T00:51:52Z\n\n    ZOOKEEPER-2953: Flaky Test: testNoLogBeforeLeaderEstablishment\n\n----\n", "GitHub user afine opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/434\n\n    [WIP] ZOOKEEPER-2953: Flaky Test: testNoLogBeforeLeaderEstablishment\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/afine/zookeeper ZOOKEEPER-2953_3.4\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/434.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #434\n    \n----\ncommit 4834ba25b9b0a9f0448675f96ca402120833f54e\nAuthor: Abraham Fine <afine@apache.org>\nDate:   2017-12-13T01:10:21Z\n\n    ZOOKEEPER-2953: Flaky Test: testNoLogBeforeLeaderEstablishment\n\n----\n", "Github user afine closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/432\n", "GitHub user afine reopened a pull request:\n\n    https://github.com/apache/zookeeper/pull/432\n\n    [WIP] ZOOKEEPER-2953: Flaky Test: testNoLogBeforeLeaderEstablishment\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/afine/zookeeper ZOOKEEPER-2953\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/432.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #432\n    \n----\ncommit 68a0382093da1d64583211746ac672ed12f5da5c\nAuthor: Abraham Fine <afine@apache.org>\nDate:   2017-12-13T00:35:50Z\n\n    ZOOKEEPER-2953: Flaky Test: testNoLogBeforeLeaderEstablishment\n\n----\n", "Github user afine closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/433\n", "GitHub user afine reopened a pull request:\n\n    https://github.com/apache/zookeeper/pull/433\n\n    [WIP] ZOOKEEPER-2953: Flaky Test: testNoLogBeforeLeaderEstablishment\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/afine/zookeeper ZOOKEEPER-2953_3.5\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/433.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #433\n    \n----\ncommit 36abecd0d4389b24e22852cccac50259b2abdb1a\nAuthor: Abraham Fine <afine@apache.org>\nDate:   2017-12-13T00:51:52Z\n\n    ZOOKEEPER-2953: Flaky Test: testNoLogBeforeLeaderEstablishment\n\ncommit 5e4da2dcf3067008a33ace787c3d78c0bdbee823\nAuthor: Abraham Fine <afine@apache.org>\nDate:   2017-12-13T08:20:56Z\n\n    fix whitespace\n\n----\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/432#discussion_r156657072\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -335,6 +336,100 @@ public void testHighestZxidJoinLate() throws Exception {\n                     output[0], 2);\n         }\n     \n    +    /**\n    +     * This test validates that if a quorum member determines that it is leader without the support of the rest of the\n    +     * quorum (the other members do not believe it to be the leader) it will stop attempting to lead and become a follower.\n    +     *\n    +     * @throws IOException\n    +     * @throws InterruptedException\n    +     */\n    +    @Test\n    +    public void testElectionFraud() throws IOException, InterruptedException {\n    +        // capture QuorumPeer logging\n    +        Layout layout = Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.INFO);\n    +        Logger qlogger = Logger.getLogger(QuorumPeer.class);\n    +        qlogger.addAppender(appender);\n    +\n    +        int numServers = 3;\n    +\n    +        // used for assertions later\n    +        boolean foundLeading = false;\n    +        boolean foundLooking = false;\n    +        boolean foundFollowing = false;\n    +\n    +        try {\n    +          // spin up a quorum, we use a small ticktime to make the test run faster\n    +          Servers servers = LaunchServers(numServers, 500);\n    --- End diff --\n    \n    It'd be useful to utilize the class-wide ```servers``` field which is used to shutdown test servers in the ```tearDown()``` method.\r\n    \r\n    For example ```testHighestZxidJoinLate()``` test does it that way.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/432#discussion_r156658012\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -335,6 +336,100 @@ public void testHighestZxidJoinLate() throws Exception {\n                     output[0], 2);\n         }\n     \n    +    /**\n    +     * This test validates that if a quorum member determines that it is leader without the support of the rest of the\n    +     * quorum (the other members do not believe it to be the leader) it will stop attempting to lead and become a follower.\n    +     *\n    +     * @throws IOException\n    +     * @throws InterruptedException\n    +     */\n    +    @Test\n    +    public void testElectionFraud() throws IOException, InterruptedException {\n    +        // capture QuorumPeer logging\n    +        Layout layout = Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.INFO);\n    +        Logger qlogger = Logger.getLogger(QuorumPeer.class);\n    +        qlogger.addAppender(appender);\n    +\n    +        int numServers = 3;\n    +\n    +        // used for assertions later\n    +        boolean foundLeading = false;\n    +        boolean foundLooking = false;\n    +        boolean foundFollowing = false;\n    +\n    +        try {\n    +          // spin up a quorum, we use a small ticktime to make the test run faster\n    +          Servers servers = LaunchServers(numServers, 500);\n    +\n    +          // find the leader\n    +          int trueLeader = -1;\n    +          for (int i = 0; i < numServers; i++) {\n    +            if (servers.mt[i].main.quorumPeer.leader != null) {\n    +              trueLeader = i;\n    +            }\n    +          }\n    +          Assert.assertTrue(\"There should be a leader\", trueLeader >= 0);\n    +\n    +          // find a follower\n    +          int falseLeader = (trueLeader + 1) % numServers;\n    +          Assert.assertTrue(servers.mt[falseLeader].main.quorumPeer.follower != null);\n    --- End diff --\n    \n    Minor: I believe that it's generally a good idea to add a short message to asserts to describe what could be the problem when assertion fails.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/432#discussion_r156660196\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -335,6 +336,100 @@ public void testHighestZxidJoinLate() throws Exception {\n                     output[0], 2);\n         }\n     \n    +    /**\n    +     * This test validates that if a quorum member determines that it is leader without the support of the rest of the\n    +     * quorum (the other members do not believe it to be the leader) it will stop attempting to lead and become a follower.\n    +     *\n    +     * @throws IOException\n    +     * @throws InterruptedException\n    +     */\n    +    @Test\n    +    public void testElectionFraud() throws IOException, InterruptedException {\n    +        // capture QuorumPeer logging\n    +        Layout layout = Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.INFO);\n    +        Logger qlogger = Logger.getLogger(QuorumPeer.class);\n    +        qlogger.addAppender(appender);\n    +\n    +        int numServers = 3;\n    +\n    +        // used for assertions later\n    +        boolean foundLeading = false;\n    +        boolean foundLooking = false;\n    +        boolean foundFollowing = false;\n    +\n    +        try {\n    +          // spin up a quorum, we use a small ticktime to make the test run faster\n    +          Servers servers = LaunchServers(numServers, 500);\n    +\n    +          // find the leader\n    +          int trueLeader = -1;\n    +          for (int i = 0; i < numServers; i++) {\n    +            if (servers.mt[i].main.quorumPeer.leader != null) {\n    +              trueLeader = i;\n    +            }\n    +          }\n    +          Assert.assertTrue(\"There should be a leader\", trueLeader >= 0);\n    +\n    +          // find a follower\n    +          int falseLeader = (trueLeader + 1) % numServers;\n    +          Assert.assertTrue(servers.mt[falseLeader].main.quorumPeer.follower != null);\n    +\n    +          // to keep the quorum peer running and force it to go into the looking state, we kill leader election\n    +          // and close the connection to the leader\n    +          servers.mt[falseLeader].main.quorumPeer.electionAlg.shutdown();\n    +          servers.mt[falseLeader].main.quorumPeer.follower.getSocket().close();\n    +\n    +          // wait for the falseLeader to disconnect\n    +          waitForOne(servers.zk[falseLeader], States.CONNECTING);\n    +\n    +          // convince falseLeader that it is the leader\n    +          servers.mt[falseLeader].main.quorumPeer.setPeerState(QuorumPeer.ServerState.LEADING);\n    +\n    +          // provide time for the falseleader to realize no followers have connected\n    +          // (this is twice the timeout used in Leader#getEpochToPropose)\n    +          Thread.sleep(2 * servers.mt[falseLeader].main.quorumPeer.initLimit * servers.mt[falseLeader].main.quorumPeer.tickTime);\n    +\n    +          // Restart leader election\n    +          servers.mt[falseLeader].main.quorumPeer.startLeaderElection();\n    --- End diff --\n    \n    I wonder if this one has to be called explicitly. \r\n    \r\n    The peer should automatically realise that it's no longer the leader, stop leading and start leader election (which is basically looking). That's what this test is intended to validate and shouldn't be started explicitly.\r\n    \r\n    Correct me if I'm wrong.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/432\n  \n    @afine Generally the new test looks good to me, but would you please elaborate why the old test was flaky and how the new fixes that?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/432#discussion_r156780239\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -335,6 +336,100 @@ public void testHighestZxidJoinLate() throws Exception {\n                     output[0], 2);\n         }\n     \n    +    /**\n    +     * This test validates that if a quorum member determines that it is leader without the support of the rest of the\n    +     * quorum (the other members do not believe it to be the leader) it will stop attempting to lead and become a follower.\n    +     *\n    +     * @throws IOException\n    +     * @throws InterruptedException\n    +     */\n    +    @Test\n    +    public void testElectionFraud() throws IOException, InterruptedException {\n    +        // capture QuorumPeer logging\n    +        Layout layout = Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.INFO);\n    +        Logger qlogger = Logger.getLogger(QuorumPeer.class);\n    +        qlogger.addAppender(appender);\n    +\n    +        int numServers = 3;\n    +\n    +        // used for assertions later\n    +        boolean foundLeading = false;\n    +        boolean foundLooking = false;\n    +        boolean foundFollowing = false;\n    +\n    +        try {\n    +          // spin up a quorum, we use a small ticktime to make the test run faster\n    +          Servers servers = LaunchServers(numServers, 500);\n    --- End diff --\n    \n    Fixed, forgot to put that in this branch.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/432#discussion_r156781040\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -335,6 +336,100 @@ public void testHighestZxidJoinLate() throws Exception {\n                     output[0], 2);\n         }\n     \n    +    /**\n    +     * This test validates that if a quorum member determines that it is leader without the support of the rest of the\n    +     * quorum (the other members do not believe it to be the leader) it will stop attempting to lead and become a follower.\n    +     *\n    +     * @throws IOException\n    +     * @throws InterruptedException\n    +     */\n    +    @Test\n    +    public void testElectionFraud() throws IOException, InterruptedException {\n    +        // capture QuorumPeer logging\n    +        Layout layout = Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.INFO);\n    +        Logger qlogger = Logger.getLogger(QuorumPeer.class);\n    +        qlogger.addAppender(appender);\n    +\n    +        int numServers = 3;\n    +\n    +        // used for assertions later\n    +        boolean foundLeading = false;\n    +        boolean foundLooking = false;\n    +        boolean foundFollowing = false;\n    +\n    +        try {\n    +          // spin up a quorum, we use a small ticktime to make the test run faster\n    +          Servers servers = LaunchServers(numServers, 500);\n    +\n    +          // find the leader\n    +          int trueLeader = -1;\n    +          for (int i = 0; i < numServers; i++) {\n    +            if (servers.mt[i].main.quorumPeer.leader != null) {\n    +              trueLeader = i;\n    +            }\n    +          }\n    +          Assert.assertTrue(\"There should be a leader\", trueLeader >= 0);\n    +\n    +          // find a follower\n    +          int falseLeader = (trueLeader + 1) % numServers;\n    +          Assert.assertTrue(servers.mt[falseLeader].main.quorumPeer.follower != null);\n    +\n    +          // to keep the quorum peer running and force it to go into the looking state, we kill leader election\n    +          // and close the connection to the leader\n    +          servers.mt[falseLeader].main.quorumPeer.electionAlg.shutdown();\n    +          servers.mt[falseLeader].main.quorumPeer.follower.getSocket().close();\n    +\n    +          // wait for the falseLeader to disconnect\n    +          waitForOne(servers.zk[falseLeader], States.CONNECTING);\n    +\n    +          // convince falseLeader that it is the leader\n    +          servers.mt[falseLeader].main.quorumPeer.setPeerState(QuorumPeer.ServerState.LEADING);\n    +\n    +          // provide time for the falseleader to realize no followers have connected\n    +          // (this is twice the timeout used in Leader#getEpochToPropose)\n    +          Thread.sleep(2 * servers.mt[falseLeader].main.quorumPeer.initLimit * servers.mt[falseLeader].main.quorumPeer.tickTime);\n    +\n    +          // Restart leader election\n    +          servers.mt[falseLeader].main.quorumPeer.startLeaderElection();\n    --- End diff --\n    \n    Stopping and starting leader election is necessary here to prevent a race condition. It is possible that after the server is disconnected from the leader it becomes a follower before the test hits `servers.mt[falseLeader].main.quorumPeer.setPeerState(QuorumPeer.ServerState.LEADING);` and falseLeader will never try to `lead`, defeating the purpose of the test.\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/432\n  \n    @anmolnar An explanation is coming, please excuse the cruft at this stage. I wanted to run the new test on apache hardware hence the [WIP] in the title.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/432\n  \n    @afine got it\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/432#discussion_r156793172\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -335,6 +336,100 @@ public void testHighestZxidJoinLate() throws Exception {\n                     output[0], 2);\n         }\n     \n    +    /**\n    +     * This test validates that if a quorum member determines that it is leader without the support of the rest of the\n    +     * quorum (the other members do not believe it to be the leader) it will stop attempting to lead and become a follower.\n    +     *\n    +     * @throws IOException\n    +     * @throws InterruptedException\n    +     */\n    +    @Test\n    +    public void testElectionFraud() throws IOException, InterruptedException {\n    +        // capture QuorumPeer logging\n    +        Layout layout = Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.INFO);\n    +        Logger qlogger = Logger.getLogger(QuorumPeer.class);\n    +        qlogger.addAppender(appender);\n    +\n    +        int numServers = 3;\n    +\n    +        // used for assertions later\n    +        boolean foundLeading = false;\n    +        boolean foundLooking = false;\n    +        boolean foundFollowing = false;\n    +\n    +        try {\n    +          // spin up a quorum, we use a small ticktime to make the test run faster\n    +          Servers servers = LaunchServers(numServers, 500);\n    +\n    +          // find the leader\n    +          int trueLeader = -1;\n    +          for (int i = 0; i < numServers; i++) {\n    +            if (servers.mt[i].main.quorumPeer.leader != null) {\n    +              trueLeader = i;\n    +            }\n    +          }\n    +          Assert.assertTrue(\"There should be a leader\", trueLeader >= 0);\n    +\n    +          // find a follower\n    +          int falseLeader = (trueLeader + 1) % numServers;\n    +          Assert.assertTrue(servers.mt[falseLeader].main.quorumPeer.follower != null);\n    +\n    +          // to keep the quorum peer running and force it to go into the looking state, we kill leader election\n    +          // and close the connection to the leader\n    +          servers.mt[falseLeader].main.quorumPeer.electionAlg.shutdown();\n    +          servers.mt[falseLeader].main.quorumPeer.follower.getSocket().close();\n    +\n    +          // wait for the falseLeader to disconnect\n    +          waitForOne(servers.zk[falseLeader], States.CONNECTING);\n    +\n    +          // convince falseLeader that it is the leader\n    +          servers.mt[falseLeader].main.quorumPeer.setPeerState(QuorumPeer.ServerState.LEADING);\n    +\n    +          // provide time for the falseleader to realize no followers have connected\n    +          // (this is twice the timeout used in Leader#getEpochToPropose)\n    +          Thread.sleep(2 * servers.mt[falseLeader].main.quorumPeer.initLimit * servers.mt[falseLeader].main.quorumPeer.tickTime);\n    +\n    +          // Restart leader election\n    +          servers.mt[falseLeader].main.quorumPeer.startLeaderElection();\n    --- End diff --\n    \n    I see. Hence the shutdown() call a few lines before.\r\n    Makes sense.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/432#discussion_r156999341\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -335,6 +336,100 @@ public void testHighestZxidJoinLate() throws Exception {\n                     output[0], 2);\n         }\n     \n    +    /**\n    +     * This test validates that if a quorum member determines that it is leader without the support of the rest of the\n    +     * quorum (the other members do not believe it to be the leader) it will stop attempting to lead and become a follower.\n    +     *\n    +     * @throws IOException\n    +     * @throws InterruptedException\n    +     */\n    +    @Test\n    +    public void testElectionFraud() throws IOException, InterruptedException {\n    +        // capture QuorumPeer logging\n    +        Layout layout = Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.INFO);\n    +        Logger qlogger = Logger.getLogger(QuorumPeer.class);\n    +        qlogger.addAppender(appender);\n    +\n    +        int numServers = 3;\n    +\n    +        // used for assertions later\n    +        boolean foundLeading = false;\n    +        boolean foundLooking = false;\n    +        boolean foundFollowing = false;\n    +\n    +        try {\n    +          // spin up a quorum, we use a small ticktime to make the test run faster\n    +          Servers servers = LaunchServers(numServers, 500);\n    +\n    +          // find the leader\n    +          int trueLeader = -1;\n    +          for (int i = 0; i < numServers; i++) {\n    +            if (servers.mt[i].main.quorumPeer.leader != null) {\n    +              trueLeader = i;\n    +            }\n    +          }\n    +          Assert.assertTrue(\"There should be a leader\", trueLeader >= 0);\n    +\n    +          // find a follower\n    +          int falseLeader = (trueLeader + 1) % numServers;\n    +          Assert.assertTrue(servers.mt[falseLeader].main.quorumPeer.follower != null);\n    --- End diff --\n    \n    fixed\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/432\n  \n    [WIP] removed and I added a description of the issue to the JIRA.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/433#discussion_r157001258\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -335,6 +336,100 @@ public void testHighestZxidJoinLate() throws Exception {\n                     output[0], 2);\n         }\n     \n    +    /**\n    +     * This test validates that if a quorum member determines that it is leader without the support of the rest of the\n    +     * quorum (the other members do not believe it to be the leader) it will stop attempting to lead and become a follower.\n    +     *\n    +     * @throws IOException\n    +     * @throws InterruptedException\n    +     */\n    +    @Test\n    +    public void testElectionFraud() throws IOException, InterruptedException {\n    +        // capture QuorumPeer logging\n    +        Layout layout = Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.INFO);\n    +        Logger qlogger = Logger.getLogger(QuorumPeer.class);\n    +        qlogger.addAppender(appender);\n    +\n    +        int numServers = 3;\n    --- End diff --\n    \n    Please use the global field.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/433#discussion_r157001279\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -335,6 +336,100 @@ public void testHighestZxidJoinLate() throws Exception {\n                     output[0], 2);\n         }\n     \n    +    /**\n    +     * This test validates that if a quorum member determines that it is leader without the support of the rest of the\n    +     * quorum (the other members do not believe it to be the leader) it will stop attempting to lead and become a follower.\n    +     *\n    +     * @throws IOException\n    +     * @throws InterruptedException\n    +     */\n    +    @Test\n    +    public void testElectionFraud() throws IOException, InterruptedException {\n    +        // capture QuorumPeer logging\n    +        Layout layout = Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.INFO);\n    +        Logger qlogger = Logger.getLogger(QuorumPeer.class);\n    +        qlogger.addAppender(appender);\n    +\n    +        int numServers = 3;\n    +\n    +        // used for assertions later\n    +        boolean foundLeading = false;\n    +        boolean foundLooking = false;\n    +        boolean foundFollowing = false;\n    +\n    +        try {\n    +          // spin up a quorum, we use a small ticktime to make the test run faster\n    +          Servers servers = LaunchServers(numServers, 500);\n    --- End diff --\n    \n    Here too.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/433#discussion_r157004899\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -335,6 +336,100 @@ public void testHighestZxidJoinLate() throws Exception {\n                     output[0], 2);\n         }\n     \n    +    /**\n    +     * This test validates that if a quorum member determines that it is leader without the support of the rest of the\n    +     * quorum (the other members do not believe it to be the leader) it will stop attempting to lead and become a follower.\n    +     *\n    +     * @throws IOException\n    +     * @throws InterruptedException\n    +     */\n    +    @Test\n    +    public void testElectionFraud() throws IOException, InterruptedException {\n    +        // capture QuorumPeer logging\n    +        Layout layout = Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.INFO);\n    +        Logger qlogger = Logger.getLogger(QuorumPeer.class);\n    +        qlogger.addAppender(appender);\n    +\n    +        int numServers = 3;\n    --- End diff --\n    \n    fixed\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/433#discussion_r157004909\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -335,6 +336,100 @@ public void testHighestZxidJoinLate() throws Exception {\n                     output[0], 2);\n         }\n     \n    +    /**\n    +     * This test validates that if a quorum member determines that it is leader without the support of the rest of the\n    +     * quorum (the other members do not believe it to be the leader) it will stop attempting to lead and become a follower.\n    +     *\n    +     * @throws IOException\n    +     * @throws InterruptedException\n    +     */\n    +    @Test\n    +    public void testElectionFraud() throws IOException, InterruptedException {\n    +        // capture QuorumPeer logging\n    +        Layout layout = Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.INFO);\n    +        Logger qlogger = Logger.getLogger(QuorumPeer.class);\n    +        qlogger.addAppender(appender);\n    +\n    +        int numServers = 3;\n    +\n    +        // used for assertions later\n    +        boolean foundLeading = false;\n    +        boolean foundLooking = false;\n    +        boolean foundFollowing = false;\n    +\n    +        try {\n    +          // spin up a quorum, we use a small ticktime to make the test run faster\n    +          Servers servers = LaunchServers(numServers, 500);\n    --- End diff --\n    \n    fixed\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 9 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1373//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1373//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1373//console\n\nThis message is automatically generated.", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/432#discussion_r157326074\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java ---\n    @@ -335,6 +336,100 @@ public void testHighestZxidJoinLate() throws Exception {\n                     output[0], 2);\n         }\n     \n    +    /**\n    +     * This test validates that if a quorum member determines that it is leader without the support of the rest of the\n    +     * quorum (the other members do not believe it to be the leader) it will stop attempting to lead and become a follower.\n    +     *\n    +     * @throws IOException\n    +     * @throws InterruptedException\n    +     */\n    +    @Test\n    +    public void testElectionFraud() throws IOException, InterruptedException {\n    +        // capture QuorumPeer logging\n    +        Layout layout = Logger.getRootLogger().getAppender(\"CONSOLE\").getLayout();\n    +        ByteArrayOutputStream os = new ByteArrayOutputStream();\n    +        WriterAppender appender = new WriterAppender(layout, os);\n    +        appender.setThreshold(Level.INFO);\n    +        Logger qlogger = Logger.getLogger(QuorumPeer.class);\n    +        qlogger.addAppender(appender);\n    +\n    +        numServers = 3;\n    +\n    +        // used for assertions later\n    +        boolean foundLeading = false;\n    +        boolean foundLooking = false;\n    +        boolean foundFollowing = false;\n    +\n    +        try {\n    +          // spin up a quorum, we use a small ticktime to make the test run faster\n    +          servers = LaunchServers(numServers, 500);\n    --- End diff --\n    \n    Note that by reducing this you are also affecting the init and sync limits  in the same proportion... Not a reason not to do it but FYI in case we start seeing this test as flakey down the road. :-)\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/432\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/432\n  \n    lgtm, +1 thanks @afine \n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/433\n  \n    lgtm. +1 thanks @afine \r\n    \r\n    please close this as it's not the default branch won't be closed automatically.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/434\n  \n    lgtm +1 thanks @afine \r\n    \r\n    Please close this one as well.\n", "lgtm, +1 thanks Abe.", "Github user afine closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/433\n", "Github user afine closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/434\n", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3661 (See [https://builds.apache.org/job/ZooKeeper-trunk/3661/])\nZOOKEEPER-2953: Flaky Test: testNoLogBeforeLeaderEstablishment (phunt: rev f2cbcc7e0d7adff08bd73a27f2193b1198e4c7f7)\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerTestBase.java\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java\n* (edit) src/java/test/org/apache/zookeeper/test/QuorumTest.java\n"]}, {"Issue key": "ZOOKEEPER-2952", "Request type": "Improvement", "Datetime creation": "2017-12-12 10:38:53", "Datetime resolution": "2017-12-13 22:02:36", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Resolved", "Description": "Hi,\r\n\r\nI'm going to upgrade the following third party libraries in order to address vulnerabilities found in them:\r\n\r\n- io.netty:netty 3.10.5.Final -> 3.10.6.Final (CVE-2015-2156 (H), CVE-2014-3488 (H), protobuf: CVE-2015-5237 (H), npn-api: CVE-2017-9735 (H), CVE-1999-1198 (H), CVE-1999-1193 (H))\r\n- org.slf4j:slf4j-api 1.7.5 -> 1.7.25\r\n- log4j:log4j 1.2.16 -> 1.2.17\r\n\r\nPlease review the list and let me know if you have any concerns or would like to add more deps to upgrade.\r\n\r\nThanks,\r\nAndor\r\n", "Comments": ["GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/429\n\n    ZOOKEEPER-2952. Upgrade third party libs: netty, slf4j\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2952\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/429.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #429\n    \n----\ncommit 949ada4ae0ad87388269bcc728affffcce325f04\nAuthor: Andor Molnar <andor@cloudera.com>\nDate:   2017-12-12T11:04:48Z\n\n    ZOOKEEPER-2952. Upgrade third party libs: netty, slf4j\n\n----\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1339//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1339//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1339//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/429\n  \n    @anmolnar looks like a good change to me - however src/java/lib/ needs to be updated to reflect this change. Also the patch doesn't apply to branch3.4, please submit a separate PR for that.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/429\n  \n    @phunt I've updated the slf4j license.\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1360//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1360//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1360//console\n\nThis message is automatically generated.", "GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/435\n\n    ZOOKEEPER-2952. Upgrade third party libs: netty, slf4j, log4j\n\n    This is the branch-3.4 version of \r\n    \r\n    https://github.com/apache/zookeeper/pull/429\r\n    \r\n    netty, log4j, slf4j\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2952-branch34\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/435.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #435\n    \n----\ncommit 7aa2bcd7d8c6932e3517e45985c6ba3d5db2ab82\nAuthor: Andor Molnar <andor@cloudera.com>\nDate:   2017-12-13T14:04:44Z\n\n    ZOOKEEPER-2952. Upgraded third party libraries + updated related license files\n\n----\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1361//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1361//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1361//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1362//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1362//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1362//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1363//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1363//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1363//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1364//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1364//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1364//console\n\nThis message is automatically generated.", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/429\n", "Issue resolved by pull request 429\n[https://github.com/apache/zookeeper/pull/429]", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/435\n  \n    lgtm +1, thanks @anmolnar . Please close this one as it's not the default branch.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/429\n  \n    lgtm +1, thanks @anmolnar \n", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3655 (See [https://builds.apache.org/job/ZooKeeper-trunk/3655/])\nZOOKEEPER-2952: Upgrade third party libs: netty, slf4j (phunt: rev aa8b60670875e509dc22f338aebcc023c166d880)\n* (delete) src/java/lib/slf4j-1.7.5.LICENSE.txt\n* (edit) build.xml\n* (add) src/java/lib/slf4j-1.7.25.LICENSE.txt\n", "Github user anmolnar closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/435\n"]}, {"Issue key": "ZOOKEEPER-2951", "Request type": "Bug", "Datetime creation": "2017-12-11 08:51:09", "Datetime resolution": "2017-12-12 18:40:38", "Reporter login": "jorgheymans", "Reporter name": "Jorg Heymans", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "this is the output i get (apologies for the cut-off line endings)\r\n\r\n{noformat}\r\nC:\\RC\\Tools\\zookeeper-3.4.11\\bin>zkServer.cmd\r\n\r\ncall \"c:\\RC\\jdk\\jdk1.8.0_121\\\"\\bin\\java \"-Dzookeeper.log.dir=C:\\RC\\Tools\\zookeeper-3.4.11\\bin\\..\" \"-Dzookeeper.root.logger=INFO,CONSOLE\" -cp \"C:\\RC\\Tools\\zookeeper-3.4.11\\bin\\..\\build\\classes;C:\\RC\\Tools\\zookeeper-3.4.11\\bin\\..\\build\\lib\\*;C:\\RC\\Tools\\zookeeper-3.4.11\\bin\\..\\*;C:\\RC\\Tools\\zookeeper-\r\n3.4.11\\bin\\..\\lib\\*;C:\\RC\\Tools\\zookeeper-3.4.11\\bin\\..\\conf\" org.apache.zookeeper.server.quorum.QuorumPeerMain \"C:\\RC\\Tools\\zookeeper-3.4.11\\bin\\..\\c\r\nonf\\zoo.cfg\"\r\nUsage: java [-options] class [args...]\r\n           (to execute a class)\r\n   or  java [-options] -jar jarfile [args...]\r\n           (to execute a jar file)\r\nwhere options include:\r\n    -d32          use a 32-bit data model if available\r\n    -d64          use a 64-bit data model if available\r\n    -server       to select the \"server\" VM\r\n                  The default VM is server.\r\n\r\n    -cp <class search path of directories and zip/jar files>\r\n    -classpath <class search path of directories and zip/jar files>\r\n                  A ; separated list of directories, JAR archives,\r\n                  and ZIP archives to search for class files.\r\n    -D<name>=<value>\r\n                  set a system property\r\n    -verbose:[class|gc|jni]\r\n                  enable verbose output\r\n    -version      print product version and exit\r\n    -version:<value>\r\n                  Warning: this feature is deprecated and will be removed\r\n                  in a future release.\r\n                  require the specified version to run\r\n    -showversion  print product version and continue\r\n    -jre-restrict-search | -no-jre-restrict-search\r\n                  Warning: this feature is deprecated and will be removed\r\n                  in a future release.\r\n                  include/exclude user private JREs in the version search\r\n    -? -help      print this help message\r\n    -X            print help on non-standard options\r\n    -ea[:<packagename>...|:<classname>]\r\n    -enableassertions[:<packagename>...|:<classname>]\r\n                  enable assertions with specified granularity\r\n    -da[:<packagename>...|:<classname>]\r\n    -disableassertions[:<packagename>...|:<classname>]\r\n                  disable assertions with specified granularity\r\n    -esa | -enablesystemassertions\r\n                  enable system assertions\r\n    -dsa | -disablesystemassertions\r\n                  disable system assertions\r\n    -agentlib:<libname>[=<options>]\r\n                  load native agent library <libname>, e.g. -agentlib:hprof\r\n                  see also, -agentlib:jdwp=help and -agentlib:hprof=help\r\n    -agentpath:<pathname>[=<options>]\r\n                  load native agent library by full pathname\r\n    -javaagent:<jarpath>[=<options>]\r\n                  load Java programming language agent, see java.lang.instrument\r\n    -splash:<imagepath>\r\n                  show splash screen with specified image\r\nSee http://www.oracle.com/technetwork/java/javase/documentation/index.html for more details.\r\n\r\nendlocal\r\n\r\n{noformat}", "Comments": ["a possible fix is to strip off \\ and / from JAVA_HOME in zkEnv.cmd\r\n\r\n{noformat}\r\n...\r\n\r\nif \"%JAVA_HOME:~-1%\" EQU \"\\\" set \"JAVA_HOME=%JAVA_HOME:~0,-1%\"\r\nif \"%JAVA_HOME:~-1%\" EQU \"/\" set \"JAVA_HOME=%JAVA_HOME:~0,-1%\"\r\n\r\nset JAVA=\"%JAVA_HOME%\"\\bin\\java\r\n{noformat}\r\n\r\nok to PR this ?", "[~jorgheymans] Sure, go ahead and open PR on github.", "GitHub user jorgheymans opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/428\n\n    fixes ZOOKEEPER-2951\n\n    https://issues.apache.org/jira/browse/ZOOKEEPER-2951\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/jorgheymans/zookeeper master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/428.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #428\n    \n----\ncommit 6dc8f88ae33c01c1b4aad52cb284e3b704ba9472\nAuthor: Jorg Heymans <jorg.heymans@gmail.com>\nDate:   2017-12-11T11:42:22Z\n\n    remove trailing backslash\n    \n    see ZOOKEEPER-2951\n\ncommit c87f39dacddea91b56b296606d85508dc4b25bf0\nAuthor: Jorg Heymans <jorg.heymans@gmail.com>\nDate:   2017-12-11T11:43:54Z\n\n    Merge pull request #1 from jorgheymans/ZOOKEEPER-2951\n    \n    remove trailing backslash\n\n----\n", "done https://github.com/apache/zookeeper/pull/428", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1338//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1338//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1338//console\n\nThis message is automatically generated.", "GitHub user jorgheymans opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/431\n\n    remove trailing \\ from JAVA_HOME\n\n     fixes ZOOKEEPER-2951\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/jorgheymans/zookeeper master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/431.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #431\n    \n----\ncommit 8a85319da4258ad9bf9e497e8addaccd2dee88d5\nAuthor: Jorg Heymans <jorg.heymans@gmail.com>\nDate:   2017-12-12T14:26:38Z\n\n    remove trailing \\ from JAVA_HOME\n    \n     fixes ZOOKEEPER-2951\n\n----\n", "Github user jorgheymans commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/428\n  \n    see #431 \n", "Github user jorgheymans closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/428\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/431\n", "Issue resolved by pull request 431\n[https://github.com/apache/zookeeper/pull/431]", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/431\n  \n    LGTM - thanks @jorgheymans !\n", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3653 (See [https://builds.apache.org/job/ZooKeeper-trunk/3653/])\nZOOKEEPER-2951: remove trailing \\ from JAVA_HOME (phunt: rev dcfbe45241855f2caccf3848be2e66e7aa23aa96)\n* (edit) bin/zkEnv.cmd\n"]}, {"Issue key": "ZOOKEEPER-2950", "Request type": "Improvement", "Datetime creation": "2017-12-05 18:48:18", "Datetime resolution": "2017-12-12 18:45:42", "Reporter login": "alexbb", "Reporter name": "Alex Bame", "Assignee login": "alexbb", "Assignee name": "Alex Bame", "Status": "Resolved", "Description": "Add keys for the zxid and its component pieces: epoch and transaction counter. These are not reported by the 'mntr' command so they must be obtained from 'stat'. The counter is useful for tracking transaction rates, and epoch is useful for tracking leader churn.\r\n\r\nzk_zxid - the 64bit zxid from ZK\r\nzk_zxid_counter - the lower 32 bits, AKA the counter\r\nzk_zxid_epoch - the upper 32 bits, AKA the epoch", "Comments": ["Github user alexbb commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/425\n  \n    Created Jira ZOOKEEPER-2950: https://issues.apache.org/jira/browse/ZOOKEEPER-2950\n", "Issue resolved by pull request 425\n[https://github.com/apache/zookeeper/pull/425]", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3653 (See [https://builds.apache.org/job/ZooKeeper-trunk/3653/])\nZOOKEEPER-2950: Add keys for the Zxid from the stat command to (phunt: rev 9e30b9bf8fac56db3846c8cc42997cdc23a9358d)\n* (edit) src/contrib/monitoring/check_zookeeper.py\n"]}, {"Issue key": "ZOOKEEPER-2949", "Request type": "Bug", "Datetime creation": "2017-11-27 03:26:22", "Datetime resolution": "2018-01-30 20:58:04", "Reporter login": "abel", "Reporter name": "Feng Shaobao", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "In our environment, the zk clusters are all behind a proxy, the proxy decide to transfer the request from client based on the \"ServerName\" field in SSL Hello packet(the proxy served on SSL only). but the Hello packets that zk client sended do proxy do not contain the \"ServerName\" field in it. after inspect the codes, we have found that it is because that zk client did not specify the peerHost when initializing the SSLContext.\r\n\r\nIn the method initSSL of class ZKClientPipelineFactory, it initialize the SSLEngine like below:\r\n\r\nsslEngine = sslContext.createSSLEngine();\r\n\r\nActually the sslContext provide another factory method that receives the hostName and port parameter.\r\n\r\npublic final SSLEngine createSSLEngine(String hostName, int port)\r\n\r\nIf we call this method to create the SSLEngine, then the proxy will know which zk cluster it really want to access.", "Comments": ["GitHub user abel-von opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/423\n\n    ZOOKEEPER-2949: using hostname and port to create SSLEngine\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/abel-von/zookeeper ZOOKEEPER-2949\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/423.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #423\n    \n----\ncommit 0014a4cba1a6657de0197f6243e35f34ab141ac1\nAuthor: f00231050 <shaobao.feng@huawei.com>\nDate:   2017-11-27T08:34:21Z\n\n    ZOOKEEPER-2949: SSL ServerName not set when using hostname, some proxies may failed to proxy the request.\n    \n    use the factory method which accepts host and port to create the SSLEngine\n\n----\n", "I think it is part of SSL protocol to specify the severname. anyone can help merging this PR?", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/423#discussion_r153658262\n  \n    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxnSocketNetty.java ---\n    @@ -340,13 +340,24 @@ public static Packet getInstance() {\n                 return instance;\n             }\n         }\n    +\n         /**\n          * ZKClientPipelineFactory is the netty pipeline factory for this netty\n          * connection implementation.\n          */\n         private class ZKClientPipelineFactory implements ChannelPipelineFactory {\n             private SSLContext sslContext = null;\n             private SSLEngine sslEngine = null;\n    +        private String host;\n    +        private int port;\n    +\n    +        public ZKClientPipelineFactory() {\n    --- End diff --\n    \n    do we still need this constructor?\n", "Github user mfenes commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/423\n  \n    Could you please provide a description of your change\n", "Github user abel-von commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/423#discussion_r154279983\n  \n    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxnSocketNetty.java ---\n    @@ -340,13 +340,24 @@ public static Packet getInstance() {\n                 return instance;\n             }\n         }\n    +\n         /**\n          * ZKClientPipelineFactory is the netty pipeline factory for this netty\n          * connection implementation.\n          */\n         private class ZKClientPipelineFactory implements ChannelPipelineFactory {\n             private SSLContext sslContext = null;\n             private SSLEngine sslEngine = null;\n    +        private String host;\n    +        private int port;\n    +\n    +        public ZKClientPipelineFactory() {\n    --- End diff --\n    \n    Maybe not\uff0cbut  it's just a good thing to keep the default constructor when I define a constructor with parameters. \n", "Github user abel-von commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/423\n  \n    @mfenes already add the description, Please check.  thank you.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/423#discussion_r154133881\n  \n    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxnSocketNetty.java ---\n    @@ -340,13 +340,24 @@ public static Packet getInstance() {\n                 return instance;\n             }\n         }\n    +\n         /**\n          * ZKClientPipelineFactory is the netty pipeline factory for this netty\n          * connection implementation.\n          */\n         private class ZKClientPipelineFactory implements ChannelPipelineFactory {\n             private SSLContext sslContext = null;\n             private SSLEngine sslEngine = null;\n    +        private String host;\n    +        private int port;\n    +\n    +        public ZKClientPipelineFactory() {\n    --- End diff --\n    \n    I second that. host & port are now mandatory parameters.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/423#discussion_r154445237\n  \n    --- Diff: src/java/main/org/apache/zookeeper/ClientCnxnSocketNetty.java ---\n    @@ -340,13 +340,24 @@ public static Packet getInstance() {\n                 return instance;\n             }\n         }\n    +\n         /**\n          * ZKClientPipelineFactory is the netty pipeline factory for this netty\n          * connection implementation.\n          */\n         private class ZKClientPipelineFactory implements ChannelPipelineFactory {\n             private SSLContext sslContext = null;\n             private SSLEngine sslEngine = null;\n    +        private String host;\n    +        private int port;\n    +\n    +        public ZKClientPipelineFactory() {\n    --- End diff --\n    \n    I don't think we need it here.\n", "Github user abel-von commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/423\n  \n    @anmolnar @afine removed the default constructor,please check, thank you.\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1378//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1378//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1378//console\n\nThis message is automatically generated.", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/423\n", "Issue resolved by pull request 423\n[https://github.com/apache/zookeeper/pull/423]", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3710 (See [https://builds.apache.org/job/ZooKeeper-trunk/3710/])\nZOOKEEPER-2949: using hostname and port to create SSLEngine (afine: rev 66554218a557cbc86924354bdb20e20b20ff934f)\n* (edit) src/java/main/org/apache/zookeeper/ClientCnxnSocketNetty.java\n"]}, {"Issue key": "ZOOKEEPER-2948", "Request type": "Bug", "Datetime creation": "2017-11-21 20:44:48", "Datetime resolution": "2017-11-22 17:46:01", "Reporter login": "abrahamfine", "Reporter name": "Abraham Fine", "Assignee login": "abrahamfine", "Assignee name": "Abraham Fine", "Status": "Resolved", "Description": "Looks like someone is creating our test files outside of jenkins. I modified the job to output our id and look at the perms on those files:\r\n\r\n----\r\n[ZooKeeper-trunk] $ /bin/bash /tmp/jenkins291402182647699851.sh\r\nuid=910(jenkins) gid=910(jenkins) groups=910(jenkins),999(docker)\r\n\r\ndrwxr-xr-x 3 10025 12036 4096 Nov 10 01:39 /tmp/zkdata\r\n-rw-r--r-- 1 10025 12036    2 Nov 10 01:39 /tmp/zkdata/myid\r\n\r\n/tmp/zkdata/version-2:\r\ntotal 20\r\ndrwxr-xr-x 2 10025 12036 4096 Oct 22 23:35 .\r\ndrwxr-xr-x 3 10025 12036 4096 Nov 10 01:39 ..\r\n-rw-r--r-- 1 10025 12036    1 Oct 22 23:35 acceptedEpoch\r\n-rw-r--r-- 1 10025 12036    1 Oct 22 23:35 currentEpoch\r\n-rw-r--r-- 1 10025 12036  562 Oct 22 23:35 snapshot.0\r\n----\r\n\r\nNotice that it's not jenkins.\r\n", "Comments": ["Someone just reported similar to the builds list:\r\n\r\n----\r\nit seems that on some nodes the user ids, that are used by the Jenkins slav=\r\nes, have been changed. But there are still some directories residing in /tm=\r\np with ownership to the old uid. That causes a conflict with our tests, bec=\r\nause these files can neither be deleted nor moved.\r\n\r\nSlave where our jobs fail: H25\r\nBut this may not be the only one.\r\n\r\nCould you please check and delete (old) temp files there.\r\nIn our case it's /tmp/archiva, but other projects may have similar problems=\r\n", "Greetings from Infra! I've gone ahead and cleared up /tmp on the Jenkins nodes so hopefully this won't present itself anymore.  Let me know if you encounter any more errors.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/422\n  \n    LGTM, +1.\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/422\n", "Issue resolved by pull request 422\n[https://github.com/apache/zookeeper/pull/422]", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3622 (See [https://builds.apache.org/job/ZooKeeper-trunk/3622/])\nZOOKEEPER-2948: Failing c unit tests on apache jenkins (phunt: rev 81fe5262fe9ba47f716fc5b786cffe3d83f51c05)\n* (edit) src/c/tests/zkServer.sh\n", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3624 (See [https://builds.apache.org/job/ZooKeeper-trunk/3624/])\nZOOKEEPER-2948: Failing c unit tests on apache jenkins - fix the config. (phunt: rev 748585d200da3a137f6ee37ee543d4f32c30d9c6)\n* (edit) src/c/tests/zkServer.sh\n* (edit) src/c/tests/quorum.cfg\n"]}, {"Issue key": "ZOOKEEPER-2947", "Request type": "Bug", "Datetime creation": "2017-11-21 19:48:14", "Datetime resolution": null, "Reporter login": "abrahamfine", "Reporter name": "Abraham Fine", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "This is a follow on for ZOOKEEPER-2944. We should raise some sort of error when the counter for sequential nodes overflows, rather than silently overflowing and creating nodes with a negative counter. ", "Comments": ["I don't think there's anything we can do at this point other than make sure ppl know. iirc there should be a jira for 4.0 to move our counter fields to 64 bit. That's probably the only real way..."]}, {"Issue key": "ZOOKEEPER-2946", "Request type": "Bug", "Datetime creation": "2017-11-21 10:06:58", "Datetime resolution": null, "Reporter login": "benkim", "Reporter name": "anaud", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "The truncate() function in FileTxnLog.java may fail to properly remove the uncommitted write. This happens when the follower that has the uncommitted writes tries to resync with the leader after a few epochs have past. The failure results in data inconsistency in the in-memory data tree across nodes. Here is one procedure to reproduce the inconsistency. \r\n\r\nInitially:\r\n# Start the ensemble with three nodes: node 0, 1 and 2 (the node 2 is the leader)\r\n# Create 5 znodes with initial values as follow (key = value)\r\n{noformat}\r\n/testDivergenceResync0 = 0\r\n/testDivergenceResync1 = 1\r\n/testDivergenceResync2 = 2\r\n/testDivergenceResync3 = 3\r\n/testDivergenceResync4 = 4\r\n{noformat}\r\n\r\nTo Reproduce:\r\n# Diverge the node 2\r\na. Shutdown the node 0 and 1\r\nb. Async setData to the node 2 writing 1000 to the key \u2018/testDivergenceResync0\u2019\r\nc. Shutdown the node 2\r\n# Restart the node 0 and 1 (let them finish with resync)\r\n# Diverge the node 1\r\na. Shutdown the node 0\r\nb. Async setData to the node 1 writing 1001 to the key \u2018/testDivergenceResync1\u2019\r\nc. Shutdown the node 1\r\n# Restart the node 0, 1 and 2 (let them finish with resync)\r\n# Diverge the node 2\r\na. Shutdown the node 0 and 1\r\nb. Async setData to the node 2 writing 1002 to the key \u2018/testDivergenceResync2\u2019\r\nc. Shutdown the node 2\r\n# Restart the node 0 and 2 (let them finish with resync)\r\n# Diverge the node 2\r\na. Shutdown the node 0\r\nb. Async setData to the node 2 writing 1003 to the key \u2018/testDivergenceResync3\u2019\r\nc. Shutdown the node 2\r\n# Restart the node 0 and 1 (let them finish with resync)\r\n# Diverge the node 1\r\na. Shutdown the node 0\r\nb. Async setData to the node 1 writing 1004 to the key \u2018/testDivergenceResync4\u2019\r\nc. Shutdown the node 1\r\n# Restart the node 0 and 2 (let them finish with resync)\r\n# Restart the node 1 (let it finish with resync)\r\n\r\nReading each key from each node directly will give us the output:\r\n{noformat}\r\n/testDivergenceResync0 on the node 0 = 0\r\n/testDivergenceResync0 on the node 1 = 0\r\n/testDivergenceResync0 on the node 2 = 0\r\n/testDivergenceResync1 on the node 0 = 1001\r\n/testDivergenceResync1 on the node 1 = 1001\r\n/testDivergenceResync1 on the node 2 = 1001\r\n/testDivergenceResync2 on the node 0 = 2\r\n/testDivergenceResync2 on the node 1 = 2\r\n/testDivergenceResync2 on the node 2 = 2\r\n/testDivergenceResync3 on the node 0 = 3\r\n/testDivergenceResync3 on the node 1 = 3\r\n/testDivergenceResync3 on the node 2 = 1003\r\n/testDivergenceResync4 on the node 0 = 1004\r\n/testDivergenceResync4 on the node 1 = 1004\r\n/testDivergenceResync4 on the node 2 = 1004\r\n{noformat}\r\nThus, the value of key /testDivergenceResync3 is inconsistent across nodes.\r\n\r\nWhat seems to happen:\r\n# At the step 7, setData (at zxid 0x400000001) writing value 1003 is committed on the node 2.\r\n{panel:title=Log from the node 2:}\r\n...\r\n2017-11-16 03:08:14,123 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::CommitProcessor@174] - Processing request:: sessionid:0x2000117327c0000 type:setData cxid:0x4 zxid:0x400000001 txntype:5 reqpath:n/a\r\n2017-11-16 03:08:14,124 [myid:2] - DEBUG [ProcessThread(sid:2 cport:-1)::Leader@787] - Proposing:: sessionid:0x2000117327c0000 type:setData cxid:0x4 zxid:0x400000001 txntype:5 reqpath:n/a\r\n2017-11-16 03:08:14,124 [myid:2] - INFO  [SyncThread:2:FileTxnLog@209] - Creating new log file: log.400000001\r\n2017-11-16 03:08:14,188 [myid:2] - DEBUG [SyncThread:2:Leader@600] - Count for zxid: 0x400000001 is 1\r\n2017-11-16 03:08:15,752 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Leader@512] - Shutting down\r\n2017-11-16 03:08:15,753 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Leader@518] - Shutdown called\r\njava.lang.Exception: shutdown Leader! reason: Not sufficient followers synced, only synced with sids: [ 2 ]\r\n...\r\n{panel}\r\n# At the step 10, the node 2 is restarted and supposed to be properly resync\u2019ed with the node 0 which is the leader.\r\n    a. The node 0 sends TRUNC msg so that the node 2 can truncate the setData at zxid 0x400000001.. \r\n    b. On the other hand, the node 2 tries to truncate log to get in sync with the leader 0x200000001. However, the node 2 failed to properly truncate the setData at zxid 0x400000001. So, even if resync was finished, the value 1003 is still remained intact on the node 2 while other nodes have value 3 for the same key.\r\n    c. It seems on the node 2, there is only log.100000001 and log.400000001 but no log.200000001. This seems to cause failing to delete log.400000001 during truncate(). It looks like we will be considering log.400000001 by the time returning from the init() of FileTxnLog.java so that we will never execute \u2018itr.logFile.delete()\u2019 for the log.400000001. \r\n   d. Then, after returning from the truncate(), loadDatabase() will be invoked and log.400000001 will be read and the setData at zxid 0x400000001 gets loaded into the in-memory data tree.\r\n{panel:title=Log from the node 2:}\r\n...\r\n2017-11-16 03:08:59,051 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Follower@65] - FOLLOWING - LEADER ELECTION TOOK - 215\r\n2017-11-16 03:08:59,052 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:QuorumPeer$QuorumServer@184] - Resolved hostname: 127.0.0.1 to address: /127.0.0.1\r\n2017-11-16 03:08:59,125 [myid:2] - WARN  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Learner@349] - Truncating log to get in sync with the leader 0x200000001\r\n2017-11-16 03:08:59,125 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@606] - Created new input stream /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.100000001\r\n2017-11-16 03:08:59,125 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@609] - Created new input archive /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.100000001\r\n2017-11-16 03:08:59,126 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@647] - EOF excepton java.io.EOFException\r\n2017-11-16 03:08:59,126 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@606] - Created new input stream /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.400000001\r\n2017-11-16 03:08:59,126 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@609] - Created new input archive /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.400000001\r\n2017-11-16 03:08:59,126 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileSnap@83] - Reading snapshot /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/snapshot.200000001\r\n2017-11-16 03:08:59,127 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@606] - Created new input stream /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.100000001\r\n2017-11-16 03:08:59,127 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@609] - Created new input archive /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.100000001\r\n2017-11-16 03:08:59,128 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@647] - EOF excepton java.io.EOFException\r\n2017-11-16 03:08:59,128 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@606] - Created new input stream /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.400000001\r\n2017-11-16 03:08:59,128 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@609] - Created new input archive /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/log.400000001\r\n2017-11-16 03:08:59,128 [myid:2] - DEBUG [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnLog$FileTxnIterator@647] - EOF excepton java.io.EOFException\r\n2017-11-16 03:08:59,131 [myid:2] - WARN  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Learner@387] - Got zxid 0x500000001 expected 0x1\r\n2017-11-16 03:08:59,132 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:FileTxnSnapLog@248] - Snapshotting: 0x500000004 to /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/2/version-2/snapshot.500000004\r\n...\r\n{panel}\r\n{panel:title=Log from the node 0:}\r\n...\r\n2017-11-16 03:08:59,050 [myid:0] - INFO  [QuorumPeer[myid=0]/0:0:0:0:0:0:0:0:11221:Leader@372] - LEADING - LEADER ELECTION TOOK - 222\r\n2017-11-16 03:08:59,055 [myid:0] - INFO  [LearnerHandler-/127.0.0.1:54482:LearnerHandler@346] - Follower sid: 2 : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@266e422\r\n2017-11-16 03:08:59,124 [myid:0] - INFO  [LearnerHandler-/127.0.0.1:54482:LearnerHandler@401] - Synchronizing with Follower sid: 2 maxCommittedLog=0x500000004 minCommittedLog=0x100000001 peerLastZxid=0x400000001\r\n2017-11-16 03:08:59,124 [myid:0] - DEBUG [LearnerHandler-/127.0.0.1:54482:LearnerHandler@415] - proposal size is 14\r\n2017-11-16 03:08:59,124 [myid:0] - DEBUG [LearnerHandler-/127.0.0.1:54482:LearnerHandler@418] - Sending proposals to follower\r\n2017-11-16 03:08:59,124 [myid:0] - INFO  [LearnerHandler-/127.0.0.1:54482:LearnerHandler@475] - Sending TRUNC\r\n2017-11-16 03:08:59,147 [myid:0] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:NIOServerCnxnFactory@215] - Accepted socket connection from /127.0.0.1:55118\r\n2017-11-16 03:08:59,184 [myid:0] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:NIOServerCnxn@383] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2017-11-16 03:08:59,184 [myid:0] - DEBUG [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:NIOServerCnxn@386] - IOException stack trace\r\njava.io.IOException: ZooKeeperServer not running\r\n        at org.apache.zookeeper.server.NIOServerCnxn.readLength(NIOServerCnxn.java:977)\r\n        at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:257)\r\n        at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:226)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n2017-11-16 03:08:59,184 [myid:0] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:NIOServerCnxn@1040] - Closed socket connection for client /127.0.0.1:55118 (no session established for client)\r\n2017-11-16 03:08:59,224 [myid:0] - INFO  [LearnerHandler-/127.0.0.1:54482:LearnerHandler@535] - Received NEWLEADER-ACK message from 2\r\n2017-11-16 03:08:59,224 [myid:0] - INFO  [QuorumPeer[myid=0]/0:0:0:0:0:0:0:0:11221:Leader@962] - Have quorum of supporters, sids: [ 0,2 ]; starting up and setting last processed zxid: 0x600000000\r\n...\r\n{panel}", "Comments": ["When the follower receives TRUNC from the leader, it is possible that there is no transaction log at the given zxid (it is possible the given zxid is captured by snapshot but not by the transaction log). It still needs to delete the transactions that are not committed and newer than the zxid sent by the leader. The patch tries to check if it is currently considering the file that is newer than the zxid and try to delete it before the while loop in the function truncate(long zxid) in the FileTxnLog.java."]}, {"Issue key": "ZOOKEEPER-2945", "Request type": "Bug", "Datetime creation": "2017-11-20 08:23:49", "Datetime resolution": null, "Reporter login": "benkim", "Reporter name": "anaud", "Assignee login": null, "Assignee name": null, "Status": "Patch Available", "Description": "Synchronization code in the syncWithLeader function of Learner.java doesn't seems to truncate uncommitted writes properly when the follower receives SNAP msg from the leader. This results in data inconsistency in the in-memory data tree across nodes. Here is one procedure to reproduce the inconsistency. (Actually, this seems similar to my previous report on ZOOKEEPER-2832, but it was for 3.4.10 and this one is for 3.4.11 and later)\r\n\r\nInitially:\r\n# Start the ensemble with three nodes: node 0, 1 and 2 (the node 2 is the leader)\r\n# Create 5 znodes with initial values as follow (key = value)\r\n{noformat}\r\n/testDivergenceResync0 = 0\r\n/testDivergenceResync1 = 1\r\n/testDivergenceResync2 = 2\r\n/testDivergenceResync3 = 3\r\n/testDivergenceResync4 = 4\r\n{noformat}\r\n\r\nTo Reproduce:\r\n# Diverge the node 2\r\na. Shutdown the node 0 and 1\r\nb. Async setData to the node 2 writing 1000 to the key \u2018/testDivergenceResync0\u2019\r\nc. Shutdown the node 2\r\n# Restart the node 0 and 1 (let them finish with resync)\r\n# Diverge the node 1\r\na. Shutdown the node 0\r\nb. Async setData to the node 1 writing 1001 to the key \u2018/testDivergenceResync1\u2019\r\nc. Shutdown the node 1\r\n# Restart the node 0 and 1 (let them finish with resync)\r\n# Diverge the node 1\r\na. Shutdown the node 0\r\nb. Async setData to the node 1 writing 1002 to the key \u2018/testDivergenceResync2\u2019\r\nc. Shutdown the node 1\r\n# Restart the node 0 and 2 (let them finish with resync)\r\n# Diverge the node 0\r\na. Shutdown the node 2\r\nb. Async setData to the node 0 writing 1003 to the key \u2018/testDivergenceResync3\u2019\r\nc. Shutdown the node 0\r\n# Restart the node 1 and 2 (let them finish with resync)\r\n# Diverge the node 2\r\na. Shutdown the node 1\r\nb. Async setData to the node 2 writing 1004 to the key \u2018/testDivergenceResync4\u2019\r\nc. Shutdown the node 2\r\n# Restart the node 1 and 2 (let them finish with resync)\r\n# Restart the node 0 (let it finish with resync)\r\n\r\nReading each key from each node directly will give us the output:\r\n{noformat}\r\n/testDivergenceResync0 on the node 0 = 0\r\n/testDivergenceResync0 on the node 1 = 0\r\n/testDivergenceResync0 on the node 2 = 0\r\n/testDivergenceResync1 on the node 0 = 1001\r\n/testDivergenceResync1 on the node 1 = 1001\r\n/testDivergenceResync1 on the node 2 = 1001\r\n/testDivergenceResync2 on the node 0 = 2\r\n/testDivergenceResync2 on the node 1 = 1002\r\n/testDivergenceResync2 on the node 2 = 2\r\n/testDivergenceResync3 on the node 0 = 3\r\n/testDivergenceResync3 on the node 1 = 3\r\n/testDivergenceResync3 on the node 2 = 3\r\n/testDivergenceResync4 on the node 0 = 1004\r\n/testDivergenceResync4 on the node 1 = 1004\r\n/testDivergenceResync4 on the node 2 = 1004\r\n{noformat}\r\nThe value of key /testDivergenceResync2 is inconsistent across nodes -- node 1 has a new value that will never be replicated to the other nodes.\r\n\r\nWhat seems to happen:\r\n# At the step 5, setData (at zxid 0x300000001) writing the value 1002 is committed on the node 1.\r\n{panel:title=Log from the node 1:}\r\n...\r\n2017-11-16 03:02:19,964 [myid:1] - DEBUG [ProcessThread(sid:1 cport:-1)::CommitProcessor@174] - Processing request:: sessionid:0x100011108080000 type:setData cxid:0x4 zxid:0x300000001 txntype:5 reqpath:n/a\r\n2017-11-16 03:02:19,964 [myid:1] - DEBUG [ProcessThread(sid:1 cport:-1)::Leader@787] - Proposing:: sessionid:0x100011108080000 type:setData cxid:0x4 zxid:0x300000001 txntype:5 reqpath:n/a\r\n2017-11-16 03:02:19,965 [myid:1] - INFO  [SyncThread:1:FileTxnLog@209] - Creating new log file: log.300000001\r\n2017-11-16 03:02:20,016 [myid:1] - DEBUG [SyncThread:1:Leader@600] - Count for zxid: 0x300000001 is 1\r\n2017-11-16 03:02:21,173 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11224:Leader@512] - Shutting down\r\n2017-11-16 03:02:21,173 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11224:Leader@518] - Shutdown called\r\njava.lang.Exception: shutdown Leader! reason: Not sufficient followers synced, only synced with sids: [ 1 ]\r\n...\r\n{panel}\r\n# At the step 8, the node 1 is restarted and supposed to be properly resync\u2019ed with the node 2 which is the leader.\r\n    a. The node 2 sends SNAP msg so that the node 1 can restore its in-memory data tree from the snapshot of the in-memory data tree on the node 2. \r\n    b. On the other hand, the node 1 will clear its in-memory data tree and restore it with the snapshot from the node 2. Then, it takes its own snapshot at zxid 0x200000001. \r\n    c. However, this does not remove the setData at zxid 0x300000001 from the transaction log on the node 1.\r\n{panel:title=Log from the node 2:}\r\n...\r\n2017-11-16 03:02:37,470 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Leader@372] - LEADING - LEADER ELECTION TOOK - 232\r\n2017-11-16 03:02:37,479 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:46899:LearnerHandler@346] - Follower sid: 1 : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@46cc2846\r\n2017-11-16 03:02:37,626 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:46899:LearnerHandler@401] - Synchronizing with Follower sid: 1 maxCommittedLog=0x0 minCommittedLog=0x0 peerLastZxid=0x300000001\r\n2017-11-16 03:02:37,626 [myid:2] - DEBUG [LearnerHandler-/127.0.0.1:46899:LearnerHandler@472] - proposals is empty\r\n2017-11-16 03:02:37,626 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:46899:LearnerHandler@475] - Sending SNAP\r\n2017-11-16 03:02:37,626 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:46899:LearnerHandler@499] - Sending snapshot last zxid of peer is 0x300000001  zxid of leader is 0x500000000sent zxid of db as 0x200000001\r\n2017-11-16 03:02:37,701 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:46899:LearnerHandler@535] - Received NEWLEADER-ACK message from 1\r\n2017-11-16 03:02:37,702 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Leader@962] - Have quorum of supporters, sids: [ 1,2 ]; starting up and setting last processed zxid: 0x500000000\r\n...\r\n{panel}\r\n{panel:title=Log from the node 1:}\r\n...\r\n2017-11-16 03:02:37,473 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11224:Follower@65] - FOLLOWING - LEADER ELECTION TOOK - 218\r\n2017-11-16 03:02:37,475 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11224:QuorumPeer$QuorumServer@184] - Resolved hostname: \r\n127.0.0.1 to address: /127.0.0.1\r\n2017-11-16 03:02:37,593 [myid:1] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11224:NIOServerCnxnFactory@215] - Accepted socket connection from /127.0.0.1:57338\r\n2017-11-16 03:02:37,626 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11224:Learner@336] - Getting a snapshot from leader 0x200000001\r\n2017-11-16 03:02:37,627 [myid:1] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11224:NIOServerCnxn@383] - Exception causing close of \r\nsession 0x0: ZooKeeperServer not running\r\n2017-11-16 03:02:37,627 [myid:1] - DEBUG [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11224:NIOServerCnxn@386] - IOException stack trace\r\njava.io.IOException: ZooKeeperServer not running\r\n        at org.apache.zookeeper.server.NIOServerCnxn.readLength(NIOServerCnxn.java:977)\r\n        at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:257)\r\n        at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:226)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n2017-11-16 03:02:37,627 [myid:1] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11224:NIOServerCnxn@1040] - Closed socket connection f\r\nor client /127.0.0.1:57338 (no session established for client)\r\n2017-11-16 03:02:37,629 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11224:FileTxnSnapLog@248] - Snapshotting: 0x200000001 to /home/ben/project/strata/test-5-3-ZooKeeper-3.4.11-strata-0.1/data/1/version-2/snapshot.200000001\r\n...\r\n{panel}\r\n# At the step 10, the node 1 is restarted again and supposed to be properly resync\u2019ed with the node 2 which is the leader again.\r\na. When the node 1 is restarted, it restores its in-memory data tree from the snapshot at zxid 0x200000001 and replay setData at zxid 0x300000001 (which actually needed to be truncated)\r\nb. However, the node 2 just sends DIFF containing setData written at 9th path, and no truncation will be occurred.\r\nc. As a result, the node 1 still has the value 1002 while other nodes will have the value 2 for the same key\r\n{panel}\r\n{panel:title=Log from the node 2:}\r\n\u2026\r\n2017-11-16 03:03:21,033 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Leader@372] - LEADING - LEADER ELECTION TOOK - 217\r\n2017-11-16 03:03:21,038 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:46967:LearnerHandler@346] - Follower sid: 1 : info : org.apache.zookeeper.server.quorum.QuorumPeer$QuorumServer@1e1cf18c\r\n2017-11-16 03:03:21,103 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:46967:LearnerHandler@401] - Synchronizing with Follower sid: 1 maxCommittedLog=0x500000004 minCommittedLog=0x500000001 peerLastZxid=0x500000003\r\n2017-11-16 03:03:21,103 [myid:2] - DEBUG [LearnerHandler-/127.0.0.1:46967:LearnerHandler@415] - proposal size is 4\r\n2017-11-16 03:03:21,103 [myid:2] - DEBUG [LearnerHandler-/127.0.0.1:46967:LearnerHandler@418] - Sending proposals to follower\r\n2017-11-16 03:03:21,103 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:46967:LearnerHandler@475] - Sending DIFF\r\n2017-11-16 03:03:21,156 [myid:2] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11227:NIOServerCnxnFactory@215] - Accepted socket connection from /127.0.0.1:49611\r\n2017-11-16 03:03:21,178 [myid:2] - INFO  [LearnerHandler-/127.0.0.1:46967:LearnerHandler@535] - Received NEWLEADER-ACK message from 1\r\n2017-11-16 03:03:21,178 [myid:2] - INFO  [QuorumPeer[myid=2]/0:0:0:0:0:0:0:0:11227:Leader@962] - Have quorum of supporters, sids: [ 1,2 ]; starting up and setting last processed zxid: 0x600000000\r\n2017-11-16 03:03:21,196 [myid:2] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11227:NIOServerCnxn@383] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2017-11-16 03:03:21,196 [myid:2] - DEBUG [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11227:NIOServerCnxn@386] - IOException stack trace\r\njava.io.IOException: ZooKeeperServer not running\r\n        at org.apache.zookeeper.server.NIOServerCnxn.readLength(NIOServerCnxn.java:977)\r\n        at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:257)\r\n        at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:226)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n2017-11-16 03:03:21,196 [myid:2] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11227:NIOServerCnxn@1040] - Closed socket connection for client /127.0.0.1:49611 (no session established for client)\r\n2017-11-16 03:03:21,237 [myid:2] - DEBUG [LearnerHandler-/127.0.0.1:46967:Leader@579] - outstanding is 0\r\n...\r\n{panel}\r\n{panel}\r\n{panel:title=Log from the node 1:}\r\n\u2026\r\n2017-11-16 03:03:21,034 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11224:Follower@65] - FOLLOWING - LEADER ELECTION TOOK - 222\r\n2017-11-16 03:03:21,035 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11224:QuorumPeer$QuorumServer@184] - Resolved hostname: 127.0.0.1 to address: /127.0.0.1\r\n2017-11-16 03:03:21,104 [myid:1] - INFO  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11224:Learner@332] - Getting a diff from the leader 0x500000004\r\n2017-11-16 03:03:21,105 [myid:1] - WARN  [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11224:Learner@387] - Got zxid 0x500000004 expected 0x1\r\n2017-11-16 03:03:21,189 [myid:1] - INFO  [SyncThread:1:FileTxnLog@209] - Creating new log file: log.500000004\r\n2017-11-16 03:03:21,189 [myid:1] - DEBUG [QuorumPeer[myid=1]/0:0:0:0:0:0:0:0:11224:CommitProcessor@164] - Committing request:: sessionid:0x2000111082b0000 type:setData cxid:0x4 zxid:0x500000004 txntype:5 reqpath:n/a\r\n2017-11-16 03:03:21,189 [myid:1] - DEBUG [CommitProcessor:1:FinalRequestProcessor@89] - Processing request:: sessionid:0x2000111082b0000 type:setData cxid:0x4 zxid:0x500000004 txntype:5 reqpath:n/a\r\n...\r\n{panel}", "Comments": ["When the follower receives SNAP from the leader, it should also try to truncate transactions later than the zxid of the Snapshot from the leader."]}, {"Issue key": "ZOOKEEPER-2944", "Request type": "Bug", "Datetime creation": "2017-11-17 18:46:45", "Datetime resolution": "2017-11-21 17:50:02", "Reporter login": "cdonati", "Reporter name": "Chris Donati", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "When a sequence counter exceeds 2147483647, the next value is -2147483648.\r\n\r\nhttps://zookeeper.apache.org/doc/trunk/zookeeperProgrammers.html#Sequence+Nodes+--+Unique+Naming", "Comments": ["GitHub user cdonati opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/421\n\n    ZOOKEEPER-2944: Specify correct overflow value\n\n    When a sequence counter exceeds 2147483647, the next value is -2147483648.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/cdonati/zookeeper-1 ZOOKEEPER-2944\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/421.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #421\n    \n----\ncommit 5d054ba2dde2faad5dc3baaac129eb1028de16bf\nAuthor: Chris Donati <chris.donati@appscale.com>\nDate:   2017-11-17T18:34:57Z\n\n    ZOOKEEPER-2944: Specify correct overflow value\n    \n    When a sequence counter exceeds 2147483647, the next value is\n    -2147483648.\n\n----\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/421\n  \n    Throwing an exception sounds like a pretty reasonable thing to do, however it's probably client code dependent. Perhaps a note that this may (likely?) have to be handled as an error condition...\r\n    \r\n    I'll commit this in the mean time. Please feel free to followup with additional jiras as necessary/appropriate.\r\n    \r\n    Thanks!\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/421\n", "Issue resolved by pull request 421\n[https://github.com/apache/zookeeper/pull/421]", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3617 (See [https://builds.apache.org/job/ZooKeeper-trunk/3617/])\nZOOKEEPER-2944: Specify correct overflow value (phunt: rev cbe524cdccd5f8fc52bc3644ca15a5fd85347600)\n* (edit) docs/index.pdf\n* (edit) docs/zookeeperInternals.pdf\n* (edit) docs/zookeeperReconfig.pdf\n* (edit) docs/zookeeperOver.pdf\n* (edit) docs/zookeeperProgrammers.html\n* (edit) docs/zookeeperTutorial.pdf\n* (edit) docs/linkmap.pdf\n* (edit) docs/recipes.pdf\n* (edit) docs/zookeeperAdmin.pdf\n* (edit) docs/zookeeperQuotas.pdf\n* (edit) docs/zookeeperStarted.pdf\n* (edit) docs/zookeeperObservers.pdf\n* (edit) docs/zookeeperHierarchicalQuorums.pdf\n* (edit) docs/javaExample.pdf\n* (edit) src/docs/src/documentation/content/xdocs/zookeeperProgrammers.xml\n* (edit) docs/zookeeperProgrammers.pdf\n* (edit) docs/zookeeperJMX.pdf\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/421\n  \n    I created ZOOKEEPER-2947 to track additional work in this area.\n"]}, {"Issue key": "ZOOKEEPER-2943", "Request type": "Improvement", "Datetime creation": "2017-11-17 02:44:11", "Datetime resolution": null, "Reporter login": "starlight36", "Reporter name": "Liu Sixian", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "Zookeeper Java client provides the StaticHostProvider to hold server addresses. The host name resolving only happen once when the StaticHostProvider instanced. In some situation, we use host name instead of IP addresses to smooth the changes of backend server movement. But client can't have the opportunity to resolve host name again. How can I do?", "Comments": []}, {"Issue key": "ZOOKEEPER-2942", "Request type": "Bug", "Datetime creation": "2017-11-15 21:47:55", "Datetime resolution": "2018-01-05 23:08:53", "Reporter login": "jack_foy", "Reporter name": "Jack Foy", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "http://zookeeper.apache.org/doc/r3.4.11 and links under that location all return 404, including the Release Notes link on http://zookeeper.apache.org/releases.html under \"9 November, 2017: release 3.4.11 available\".", "Comments": ["This was fixed at some point."]}, {"Issue key": "ZOOKEEPER-2941", "Request type": "New Feature", "Datetime creation": "2017-11-15 08:01:18", "Datetime resolution": null, "Reporter login": "baotiao", "Reporter name": "chenzongzhi", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "right now, zookeeper only promise channel FIFO order,  in this case the third operation my arrive before the second operation:\r\n\r\nsince zookeeper promise that these operation are sending in pipeline, so the later operation don't need to wait the prior's confirmation. so the three operations\r\n1. set a = 1\r\n2. set b = 1\r\n3. set ready = true\r\n\r\nthese three operations are sending in pipeline, the first operation set a = 1 is process ok, and the second operation set b = 1 is on the way. then there is something wrong with the leader, then the client connect a new tcp connection with the leader. And then the client send the last operation, since there is two tcp connection from client to server, even through the first is closed from the client's view, but there maybe still some redidual data, so we can't promise whether the second operation will arrive to the leader, and we also can't promise that the second operation arrive to the leader before the third one or after the third one. so this violate the client FIFO order.\r\n\r\nwe know that http://atomix.io/copycat/docs/client-interaction/#preserving-program-order   provide client level FIFO order. \r\nHow about support client level FIFO order\r\n\r\nThank you ", "Comments": []}, {"Issue key": "ZOOKEEPER-2940", "Request type": "Sub-task", "Datetime creation": "2017-11-09 12:12:21", "Datetime resolution": "2018-07-11 23:41:31", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Closed", "Description": "Monitor real-time Jute buffer usage as it relates to large requests from clients.", "Comments": ["GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/466\n\n    ZOOKEEPER-2940. Deal with maxbuffer as it relates to large requests from clients\n\n    This PR covers the other part of Jute buffer monitoring which relates to client response sizes.\r\n    \r\n    `jute.maxbuffer` is often set too small or the default (4MB) value is not enough to receive large responses from the server which causes the client unable to operate. e.g. `getChildren()` on a node which has lots of children or execution of a large multi.\r\n    \r\n    These new metrics lets operators to monitor the size of generated responses to get an idea on how to properly set client's `jute.maxbuffer`.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2940\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/466.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #466\n    \n----\ncommit 003ea900ea06e0aa763f7d8c71b6cd3859ac18b1\nAuthor: Andor Molnar <andor@...>\nDate:   2018-02-13T17:04:12Z\n\n    ZOOKEEPER-2940. Track size of client responses\n\n----\n", "Github user rakeshadr commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r181824379\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/admin/Commands.java ---\n    @@ -329,12 +329,20 @@ public CommandResponse run(ZooKeeperServer zkServer, Map<String, String> kwargs)\n                 response.put(\"open_file_descriptor_count\", osMbean.getOpenFileDescriptorCount());\n                 response.put(\"max_file_descriptor_count\", osMbean.getMaxFileDescriptorCount());\n     \n    +            response.put(\"last_client_response_size\", stats.getClientResponseStats().getLast());\n    --- End diff --\n    \n    Please update zookeeperAdmin.xml about these commands. Please refer monitoring the health of the cluster section in this page.\r\n\n", "Github user rakeshadr commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r181822557\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java ---\n    @@ -68,5 +74,19 @@ public void testOperationsAfterCnxnClose() throws IOException,\n             } finally {\n                 zk.close();\n             }\n    +\n    +    }\n    +\n    +    @Test\n    +    public void testClientResponseStatsUpdate() throws IOException, InterruptedException, KeeperException {\n    +        try (ZooKeeper zk = createClient()) {\n    +            ProposalStats stats = serverFactory.getZooKeeperServer().serverStats().getClientResponseStats();\n    +            assertEquals(\"\", -1, stats.getLast());\n    +\n    +            zk.create(\"/a\", \"test\".getBytes(), Ids.OPEN_ACL_UNSAFE,\n    +                    CreateMode.PERSISTENT);\n    +\n    +            assertThat(stats.getLast(), greaterThan(0));\n    --- End diff --\n    \n    0, looks like magic number. Any possibility to give a non-zero value, matching closer to the expected value ?\r\n    \r\n    Also, please add error message - assertThat(\"error message\", stats.getLast(), greaterThan(0));\r\n\n", "Github user rakeshadr commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r181817033\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/command/MonitorCommand.java ---\n    @@ -75,9 +79,9 @@ public void commandRun() {\n                 print(\"synced_followers\", leader.getForwardingFollowers().size());\n                 print(\"pending_syncs\", leader.getNumPendingSyncs());\n     \n    -            print(\"last_proposal_size\", leader.getProposalStats().getLastProposalSize());\n    -            print(\"max_proposal_size\", leader.getProposalStats().getMaxProposalSize());\n    -            print(\"min_proposal_size\", leader.getProposalStats().getMinProposalSize());\n    +            print(\"last_proposal_size\", leader.getProposalStats().getLast());\n    --- End diff --\n    \n    Infact, getLastProposalSize, getMaxProposalSize, getMinProposalSize is more meaningful. Can we keep this names?\n", "Github user rakeshadr commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r181823105\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/NettyServerCnxnTest.java ---\n    @@ -84,4 +92,17 @@ public void testSendCloseSession() throws Exception {\n                 zk.close();\n             }\n         }\n    +\n    +    @Test\n    +    public void testClientResponseStatsUpdate() throws IOException, InterruptedException, KeeperException {\n    +        try (ZooKeeper zk = createClient()) {\n    +            ProposalStats stats = serverFactory.getZooKeeperServer().serverStats().getClientResponseStats();\n    +            assertEquals(\"\", -1, stats.getLast());\n    +\n    +            zk.create(\"/a\", \"test\".getBytes(), Ids.OPEN_ACL_UNSAFE,\n    +                    CreateMode.PERSISTENT);\n    +\n    +            assertThat(stats.getLast(), greaterThan(0));\n    --- End diff --\n    \n    Same comment as above...non-zero expected value.\n", "Github user rakeshadr commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r181829051\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/admin/Commands.java ---\n    @@ -329,12 +329,20 @@ public CommandResponse run(ZooKeeperServer zkServer, Map<String, String> kwargs)\n                 response.put(\"open_file_descriptor_count\", osMbean.getOpenFileDescriptorCount());\n                 response.put(\"max_file_descriptor_count\", osMbean.getMaxFileDescriptorCount());\n     \n    +            response.put(\"last_client_response_size\", stats.getClientResponseStats().getLast());\n    --- End diff --\n    \n    Also, I could see contrib/monitoring/ganglia/zookeeper_ganglia.py file contains metrics section. Probably you could refer 'zk_open_file_descriptor_count': {'units': 'descriptors'}, as an example case. \n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r182196063\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/command/MonitorCommand.java ---\n    @@ -75,9 +79,9 @@ public void commandRun() {\n                 print(\"synced_followers\", leader.getForwardingFollowers().size());\n                 print(\"pending_syncs\", leader.getNumPendingSyncs());\n     \n    -            print(\"last_proposal_size\", leader.getProposalStats().getLastProposalSize());\n    -            print(\"max_proposal_size\", leader.getProposalStats().getMaxProposalSize());\n    -            print(\"min_proposal_size\", leader.getProposalStats().getMinProposalSize());\n    +            print(\"last_proposal_size\", leader.getProposalStats().getLast());\n    --- End diff --\n    \n    Sure, no problem. I thought it was redundant to refer the class name in method names, but I'll revert that.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r182196539\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java ---\n    @@ -68,5 +74,19 @@ public void testOperationsAfterCnxnClose() throws IOException,\n             } finally {\n                 zk.close();\n             }\n    +\n    +    }\n    +\n    +    @Test\n    +    public void testClientResponseStatsUpdate() throws IOException, InterruptedException, KeeperException {\n    +        try (ZooKeeper zk = createClient()) {\n    +            ProposalStats stats = serverFactory.getZooKeeperServer().serverStats().getClientResponseStats();\n    +            assertEquals(\"\", -1, stats.getLast());\n    +\n    +            zk.create(\"/a\", \"test\".getBytes(), Ids.OPEN_ACL_UNSAFE,\n    +                    CreateMode.PERSISTENT);\n    +\n    +            assertThat(stats.getLast(), greaterThan(0));\n    --- End diff --\n    \n    +1 for assert messages\r\n    Did you mean -1 as the magic number which means that stat has not been updated yet...?\n", "Github user rakeshadr commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r182325325\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/NIOServerCnxnTest.java ---\n    @@ -68,5 +74,19 @@ public void testOperationsAfterCnxnClose() throws IOException,\n             } finally {\n                 zk.close();\n             }\n    +\n    +    }\n    +\n    +    @Test\n    +    public void testClientResponseStatsUpdate() throws IOException, InterruptedException, KeeperException {\n    +        try (ZooKeeper zk = createClient()) {\n    +            ProposalStats stats = serverFactory.getZooKeeperServer().serverStats().getClientResponseStats();\n    +            assertEquals(\"\", -1, stats.getLast());\n    +\n    +            zk.create(\"/a\", \"test\".getBytes(), Ids.OPEN_ACL_UNSAFE,\n    +                    CreateMode.PERSISTENT);\n    +\n    +            assertThat(stats.getLast(), greaterThan(0));\n    --- End diff --\n    \n    please add comments about the expectations like, \r\n    assertEquals(\"stat should be initialized with -1\", -1, stats.getLast());  or a better message:)\r\n    \r\n    that will help easy test case maintenance.\r\n    b) greaterThan(0) , similarly good to add a message explaining why 0?\n", "Github user rakeshadr commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r182332830\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/command/MonitorCommand.java ---\n    @@ -75,9 +79,9 @@ public void commandRun() {\n                 print(\"synced_followers\", leader.getForwardingFollowers().size());\n                 print(\"pending_syncs\", leader.getNumPendingSyncs());\n     \n    -            print(\"last_proposal_size\", leader.getProposalStats().getLastProposalSize());\n    -            print(\"max_proposal_size\", leader.getProposalStats().getMaxProposalSize());\n    -            print(\"min_proposal_size\", leader.getProposalStats().getMinProposalSize());\n    +            print(\"last_proposal_size\", leader.getProposalStats().getLast());\n    --- End diff --\n    \n    One more observation. It seems \"ProposalStats\" is reused for clientResponseStats metrics, but it may create confusions due to the method name mismatches. Again, ProposalStats javadocs says \"Provides live statistics about a running Leader.\"  Also, stats will evolve and could be chance of adding unrelated metrics later. \r\n    \r\n    How about create a new class \"ResponseStats\" and name metrics like below. If we look at the existing min_proposal_size metrics, they didn't use the term leader/quorum. Keeping that in mind, do we need specifically ''client'' term in the metrics, simply response gives a context to the users that server-to-client response. Whats your opinion?\r\n    ```\r\n    last_response_size,\r\n    max_response_size,\r\n    min_response_size\r\n    ```\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r182459083\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/command/MonitorCommand.java ---\n    @@ -75,9 +79,9 @@ public void commandRun() {\n                 print(\"synced_followers\", leader.getForwardingFollowers().size());\n                 print(\"pending_syncs\", leader.getNumPendingSyncs());\n     \n    -            print(\"last_proposal_size\", leader.getProposalStats().getLastProposalSize());\n    -            print(\"max_proposal_size\", leader.getProposalStats().getMaxProposalSize());\n    -            print(\"min_proposal_size\", leader.getProposalStats().getMinProposalSize());\n    +            print(\"last_proposal_size\", leader.getProposalStats().getLast());\n    --- End diff --\n    \n    Agreed, javadoc is misleading.\r\n    \r\n    Actually I wanted to keep these two things together and would like to refactor both in a later commit. They refer to the same thing basically, exposing statistics on Jute buffer usage which is a feed of int values. I'm happy to find a better name for the class, but wouldn't create a separate one for almost the same purpose.\r\n    \r\n    What do you think of `BufferStats`?\r\n    \r\n\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r182698169\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/command/MonitorCommand.java ---\n    @@ -75,9 +79,9 @@ public void commandRun() {\n                 print(\"synced_followers\", leader.getForwardingFollowers().size());\n                 print(\"pending_syncs\", leader.getNumPendingSyncs());\n     \n    -            print(\"last_proposal_size\", leader.getProposalStats().getLastProposalSize());\n    -            print(\"max_proposal_size\", leader.getProposalStats().getMaxProposalSize());\n    -            print(\"min_proposal_size\", leader.getProposalStats().getMinProposalSize());\n    +            print(\"last_proposal_size\", leader.getProposalStats().getLast());\n    --- End diff --\n    \n    You're right about stats will evolve with time, but proposal and client request size are common in Jute buffer usage. I have a strong feeling that these two things will always evolve together hence it makes sense to keep the stats together which also makes refactoring easier. Later, if it turns out that they diverge, we can easily split them. \n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/466\n  \n    @rakeshadr I updated the pull request with your code review comments:\r\n    - stats class has been renamed,\r\n    - added comments to unit test asserts,\r\n    - replaced initial value magic number with a constant.\r\n    Please take a look.\n", "Github user rakeshadr commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r183201618\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -106,10 +104,10 @@ public String toString() {\n         private final HashSet<LearnerHandler> learners =\n             new HashSet<LearnerHandler>();\n     \n    -    private final ProposalStats proposalStats;\n    +    private final BufferStats bufferStats;\n    --- End diff --\n    \n    Could you use \"proposalStats\" variable name instead of \"bufferStats\", thats more readable.\n", "Github user rakeshadr commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r183201663\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/command/StatCommand.java ---\n    @@ -64,8 +64,8 @@ public void commandRun() {\n                 pw.println(zkServer.getZKDatabase().getNodeCount());\n                 if (serverStats.getServerState().equals(\"leader\")) {\n                     Leader leader = ((LeaderZooKeeperServer)zkServer).getLeader();\n    -                ProposalStats proposalStats = leader.getProposalStats();\n    -                pw.printf(\"Proposal sizes last/min/max: %s%n\", proposalStats.toString());\n    +                BufferStats bufferStats = leader.getBufferStats();\n    --- End diff --\n    \n    Same as above. Please use var name \"proposalStats\" instead of \"bufferStats\"\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 22 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1620//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1620//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1620//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/466\n  \n    @rakeshadr thanks, this is done.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/466\n  \n    is this intended for 3.4 or just 3.5+ ? The jira says 3.5+, is that right?\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r183565848\n  \n    --- Diff: src/contrib/monitoring/ganglia/zookeeper_ganglia.py ---\n    @@ -213,7 +213,13 @@ def metric_init(params=None):\n             'zk_max_file_descriptor_count': {'units': 'descriptors'},\n             'zk_followers': {'units': 'nodes'},\n             'zk_synced_followers': {'units': 'nodes'},\n    -        'zk_pending_syncs': {'units': 'syncs'}\n    +        'zk_pending_syncs': {'units': 'syncs'},\n    +        'zk_last_proposal_size': {'units': 'ms'},\n    --- End diff --\n    \n    Should these values be in \"ms\"? Seems like a cut/paste typo? I suspect you rather \"bytes\" - right?\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r183565978\n  \n    --- Diff: src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml ---\n    @@ -1897,6 +1896,12 @@ server.3=zoo3:2888:3888</programlisting>\n                   zk_pending_syncs    0               - only exposed by the Leader\n                   zk_open_file_descriptor_count 23    - only available on Unix platforms\n                   zk_max_file_descriptor_count 1024   - only available on Unix platforms\n    +              zk_last_proposal_size\n    --- End diff --\n    \n    these are missing example values\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r183664194\n  \n    --- Diff: src/contrib/monitoring/ganglia/zookeeper_ganglia.py ---\n    @@ -213,7 +213,13 @@ def metric_init(params=None):\n             'zk_max_file_descriptor_count': {'units': 'descriptors'},\n             'zk_followers': {'units': 'nodes'},\n             'zk_synced_followers': {'units': 'nodes'},\n    -        'zk_pending_syncs': {'units': 'syncs'}\n    +        'zk_pending_syncs': {'units': 'syncs'},\n    +        'zk_last_proposal_size': {'units': 'ms'},\n    --- End diff --\n    \n    Right. Good catch.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/466#discussion_r183664859\n  \n    --- Diff: src/docs/src/documentation/content/xdocs/zookeeperAdmin.xml ---\n    @@ -1897,6 +1896,12 @@ server.3=zoo3:2888:3888</programlisting>\n                   zk_pending_syncs    0               - only exposed by the Leader\n                   zk_open_file_descriptor_count 23    - only available on Unix platforms\n                   zk_max_file_descriptor_count 1024   - only available on Unix platforms\n    +              zk_last_proposal_size\n    --- End diff --\n    \n    Correct, I'll add some example values.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/466\n  \n    @phunt This is definitely for 3.4 too. I updated the Jira and will create a separate pull request for 3.4.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 22 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1622//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1622//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1622//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 22 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1624//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1624//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1624//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/466\n  \n    @anmolnar should we apply the same logic as my recent comment on #466 ? Add this to jmx and the mntr command output, but don't add it to the legacy/text 4lw. What do you think.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 22 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1696//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1696//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1696//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 19 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1697//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1697//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1697//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 19 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1698//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1698//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1698//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 19 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1699//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1699//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1699//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 19 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1700//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1700//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1700//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 19 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1884//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1884//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1884//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 19 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1916//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1916//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1916//console\n\nThis message is automatically generated.", "Issue resolved by pull request 466\n[https://github.com/apache/zookeeper/pull/466]"]}, {"Issue key": "ZOOKEEPER-2939", "Request type": "Sub-task", "Datetime creation": "2017-11-09 12:11:18", "Datetime resolution": "2018-02-07 00:14:18", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Resolved", "Description": "Monitor real-time Jute buffer usage as it relates to proposals.", "Comments": ["-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1182//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1182//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1182//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1180//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1180//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1180//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1179//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1179//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1179//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1181//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1181//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1181//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1183//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1183//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1183//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @afine Take a look at please the latest commit, I've added verification of the byte array itself to serializeRequest() unit test. I'm not 100% sure it's needed, but it might makes sense this way.\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1184//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1184//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1184//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @afine Thanks for approving.\r\n    I've added the same byte array verification to the other unit test too.\r\n    Also squashed everything into single commit.\r\n    \r\n    Ready to merge.\r\n\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1188//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1188//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1188//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to cause Findbugs (version 3.0.1) to fail.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1189//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1189//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1191//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1191//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1191//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1192//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1192//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1192//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1190//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1190//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1190//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1193//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1193//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1193//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    I didn't look at this in much depth yet but one obvious things struck me - you are missing the reset capability. See how we handle latency tracking in the beans.\r\n    \r\n    We try to keep jmx, 4lw and jetty interfaces (new in 3.5) in lock step wrt the metrics they provide. What do you think, do you want to try to include that in this patch or create separate JIRA(s) to track/address?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @phunt Thanks for looking into this. I'll include the reset capability into this patch as suggested.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @phunt I've added capability of resetting proposal statistics as well as unit tests for LeaderBean class.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1227//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1227//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1227//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1225//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1225//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1225//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1228//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1228//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1228//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1226//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1226//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1226//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1229//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1229//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1229//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1230//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1230//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1230//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    What's the plan re my other comment\r\n    \r\n    > We try to keep jmx, 4lw and jetty interfaces (new in 3.5) in lock step wrt the metrics they provide. \n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @phunt Sorry, I've completely forgotten about it.\r\n    I believe the easiest would be to add proposal stats to 'stat' 4lw in this patch, so that it could be easily applied to all major branches.\r\n    After that I'd create a separate PR for jetty changes which will target trunk and 3.5 only.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1249//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1249//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1249//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to cause Findbugs (version 3.0.1) to fail.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1250//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1250//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1253//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1253//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1253//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1252//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1252//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1252//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1251//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1251//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1251//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1254//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1254//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1254//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @phunt 4lw changes have been added.\r\n    @afine please start the review over, because so many things have been changed since you approved it.\r\n    \r\n    For some weird reason I cannot get a green build, but seems like it's unrelated to this patch.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 8 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1269//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1269//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1269//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 8 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1272//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1272//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1272//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 8 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1270//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1270//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1270//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 8 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1271//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1271//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1271//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 8 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1273//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1273//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1273//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 8 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1274//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1274//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1274//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 10 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1282//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1282//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1282//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 10 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1285//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1285//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1285//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 10 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1283//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1283//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1283//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 10 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1284//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1284//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1284//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 10 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1281//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1281//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1281//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 10 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1286//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1286//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1286//console\n\nThis message is automatically generated.", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r152110769\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/StatResetCommandTest.java ---\n    @@ -0,0 +1,112 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.zookeeper.server.ServerCnxn;\n    +import org.apache.zookeeper.server.ServerStats;\n    +import org.apache.zookeeper.server.ZooKeeperServer;\n    +import org.apache.zookeeper.server.command.StatResetCommand;\n    +import org.junit.Before;\n    +import org.junit.Test;\n    +\n    +import java.io.PrintWriter;\n    +import java.io.StringWriter;\n    +\n    +import static org.junit.Assert.assertEquals;\n    +import static org.mockito.Mockito.mock;\n    +import static org.mockito.Mockito.times;\n    +import static org.mockito.Mockito.verify;\n    +import static org.mockito.Mockito.when;\n    +\n    +public class StatResetCommandTest {\n    +    private static final String ZK_NOT_SERVING = \"This ZooKeeper instance is not currently serving requests\\n\";\n    --- End diff --\n    \n    nit: maybe we should make the version of this in AbstractFourLetterCommand visible to this class for the purpose of testing.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r152126049\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/StatCommandTest.java ---\n    @@ -0,0 +1,106 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.zookeeper.server.ServerCnxn;\n    +import org.apache.zookeeper.server.ServerCnxnFactory;\n    +import org.apache.zookeeper.server.ServerStats;\n    +import org.apache.zookeeper.server.ZKDatabase;\n    +import org.apache.zookeeper.server.command.FourLetterCommands;\n    +import org.apache.zookeeper.server.command.StatCommand;\n    +import org.junit.Before;\n    +import org.junit.Test;\n    +\n    +import java.io.IOException;\n    +import java.io.PrintWriter;\n    +import java.io.StringWriter;\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +\n    +import static org.hamcrest.core.StringContains.containsString;\n    --- End diff --\n    \n    According to: https://github.com/junit-team/junit4/wiki/matchers-and-assertthat we should probably use `import static org.hamcrest.CoreMatchers.containsString;`\r\n    \r\n    In addition, this will not resolve in intellij until we allow transitive test dependencies to be imported by changing build.xml:1820\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @afine You're not missing anything, I didn't add jetty support to this patch intentionally, because afaik jetty is not supported in 3.4. So the plan is to keep this patch compatible with all branches and I'll create a separate one for 3.5/trunk only.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r152276479\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/StatCommandTest.java ---\n    @@ -0,0 +1,106 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.zookeeper.server.ServerCnxn;\n    +import org.apache.zookeeper.server.ServerCnxnFactory;\n    +import org.apache.zookeeper.server.ServerStats;\n    +import org.apache.zookeeper.server.ZKDatabase;\n    +import org.apache.zookeeper.server.command.FourLetterCommands;\n    +import org.apache.zookeeper.server.command.StatCommand;\n    +import org.junit.Before;\n    +import org.junit.Test;\n    +\n    +import java.io.IOException;\n    +import java.io.PrintWriter;\n    +import java.io.StringWriter;\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +\n    +import static org.hamcrest.core.StringContains.containsString;\n    --- End diff --\n    \n    Thanks for the investigation. All done.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r152276508\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/StatResetCommandTest.java ---\n    @@ -0,0 +1,112 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.zookeeper.server.ServerCnxn;\n    +import org.apache.zookeeper.server.ServerStats;\n    +import org.apache.zookeeper.server.ZooKeeperServer;\n    +import org.apache.zookeeper.server.command.StatResetCommand;\n    +import org.junit.Before;\n    +import org.junit.Test;\n    +\n    +import java.io.PrintWriter;\n    +import java.io.StringWriter;\n    +\n    +import static org.junit.Assert.assertEquals;\n    +import static org.mockito.Mockito.mock;\n    +import static org.mockito.Mockito.times;\n    +import static org.mockito.Mockito.verify;\n    +import static org.mockito.Mockito.when;\n    +\n    +public class StatResetCommandTest {\n    +    private static final String ZK_NOT_SERVING = \"This ZooKeeper instance is not currently serving requests\\n\";\n    --- End diff --\n    \n    Done.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 13 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1291//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1291//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1291//console\n\nThis message is automatically generated.", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r152349015\n  \n    --- Diff: build.xml ---\n    @@ -1817,7 +1817,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n                  description=\"Create eclipse project files\">\n            <ivy:resolve useOrigin=\"true\" conf=\"test\"/>\n            <ivy:cachepath pathid=\"default.path.id\" conf=\"default\" />\n    -       <ivy:cachepath pathid=\"junit.path.id\" conf=\"test\" transitive=\"false\"/>\n    +       <ivy:cachepath pathid=\"junit.path.id\" conf=\"test\" transitive=\"true\"/>\n    --- End diff --\n    \n    nit: we can just remove the transitive property to be consistent\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 13 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1306//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1306//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1306//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 13 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1307//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1307//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1307//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 13 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1321//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1321//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1321//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 13 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1322//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1322//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1322//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 13 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1326//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1326//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1326//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @afine @phunt Findbugs issues have been resolved. Please review & commit.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @phunt do you think we can commit this patch?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @phunt @afine are u happy with the change?\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    This seems like a reasonable addition (see below). I like the refactorings (kudos). The code seems fine. I do have a couple questions though.\r\n    \r\n    1) this information should also be added to mntr command output. The idea of mntr is to have machine readable output - java properties format (we had this prior to adding the jetty support).\r\n    \r\n    2) the description for ZOOKEEPER-2939 is missing. I think it would be good to give some insight into why you are proposing/submitting this change. Esp around operational aspect.\r\n    \r\n    3) it's not clear to me how useful this will be in practice, from an operations perspective. Hopefully the answer to item 2 here will help. But say you are running a cluster in production. It will be under some load, with new proposals showing up pseudo-randomly, perhaps rapidly. last and min seem of very little use (which perhaps is fine, similar to us capturing min latency). Max I can see as useful. Why did you not decide to include \"avg\" for example? Unfortunately our stats tracking was created before some of the metrics tracking libraries available today were generally available. (might be a good project for someone to investigate separately from this PR).\r\n    \r\n\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @phunt That's a perfectly valid point Pat, I've been asked about it several times before. Therefore I added some more comments to the parent Jira of monitoring, please take a look at the description: https://issues.apache.org/jira/browse/ZOOKEEPER-2933\r\n    \r\n    I've also populated the description of subtasks too to help understanding them.\r\n    \r\n    Regarding to statistics tracking in Zookeeper: I wonder how much does it make sense to implementing something complicated within the server. One approach (which this PR tries to follow) is to expose basic values which can be sampled by a more sophisticated monitoring tool. Average, sliding window, etc. can be implemented in there. \r\n    \r\n    On the other hand we could add some more clever logic to ZK as well such as \r\n    https://google.github.io/guava/releases/21.0/api/docs/com/google/common/math/Quantiles.html\r\n    or\r\n    https://commons.apache.org/proper/commons-math/javadocs/api-3.0/org/apache/commons/math3/stat/descriptive/rank/Percentile.html\r\n    Basically calculating percentiles (50-90-99-Median-Max-etc.) with the appropriate library and expose the values with JMX. This will probably require us to gather samples with a sliding window within Zookeeper.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @phunt I added proposal stats to 'mntr' command output as requested.\r\n    \r\n    In the meantime I found the following metrics lib which could be useful and easily integrated into Zookeeper:\r\n    \r\n    http://metrics.dropwizard.io/3.2.3/getting-started.html\r\n    \r\n    Do you think it's worth merging this PR and refactor it in a separate one to use that lib?\r\n\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 13 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1376//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1376//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1376//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    > Do you think it's worth merging this PR and refactor it in a separate one to use that lib?\r\n    \r\n    I'd say, let's consider it separately. There's probably some work to do to identify what we should go to. IIRC at a recent meetup the Facebook folks mentioned they have done extensive work to add more metrics. We might look at what they have done. Similarly other Apache projects in the Hadoop ecosystem have also moved on, we might look at what they are using (although if I had to guess it's probably dropwizard, but I'm not sure)\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    > One approach (which this PR tries to follow) is to expose basic values which can be sampled by a more sophisticated monitoring tool. Average, sliding window, etc. can be implemented in there.\r\n    \r\n    That's fine, but I guess my thought was that sampling in this context will have very low fidelity vs having the server calculate, the avg for example. Given the monitoring tool will poll every 5 seconds or so (perhaps less frequently) the number of samples vs the number of proposals could be very low. Not a reason not to do it, but I'm not sure you're really going to get what you expect as an operator.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @phunt I asked around quickly:\r\n    HBase - own library (looks like they've started to use dropwizard somehow)\r\n    HDFS - Hadoop Metrics2 (included in hadoop-common)\r\n    Kafka - Yammer (dropwizard predecessor)\r\n    Cassandra - Yammer\r\n    \r\n    I'll give dropwizard a try first.\n", "GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/440\n\n    ZOOKEEPER-2939 Deal with maxbuffer as it relates to proposals - Use dropwizard stats library\n\n    This PR is intended to be the successor of https://github.com/apache/zookeeper/pull/415\r\n    Using dropwizard library's Histogram component we're able to provide more sophisticated statistics on Proposal sizes. \r\n    \r\n    From the docs:\r\n    \"A histogram measures the statistical distribution of values in a stream of data. In addition to minimum, maximum, mean, etc., it also measures median, 75th, 90th, 95th, 98th, 99th, and 99.9th percentiles.\"\r\n    \r\n    http://metrics.dropwizard.io/3.1.0/manual/core/#histograms\r\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2939-dropwizard\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/440.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #440\n    \n----\ncommit 6738e2d36b07f4643a97afd7e251a9d6c1c115f2\nAuthor: Andor Moln\u00e1r <andor@...>\nDate:   2017-11-06T16:31:44Z\n\n    ZOOKEEPER-2939: Added last/min/max proposal size JMX beans\n    \n    - Refactor proposal serialization logic to a common place,\n    - Add JMX metric to monitor jute.maxbuffer setting\n    - Add JMX metric to monitor min/max/last size of generated proposals\n    - This patch deals with server side maxbuffer monitoring only.\n\ncommit 68328d9027bf2a26d3425b9c83b4a9d5a526fc9b\nAuthor: Andor Moln\u00e1r <andor@...>\nDate:   2017-12-01T11:59:48Z\n\n    ZOOKEEPER-2939. Fixed findbugs issue: newline in format string\n\ncommit ece8f09cb09c456ccb77903c9a2f6977c34c1543\nAuthor: Andor Molnar <andor@...>\nDate:   2017-12-15T18:11:17Z\n\n    ZOOKEEPER-2933. Added proposal size statistics to 'mntr' command\n\ncommit 89376898995ecb60e6f26252853fce1d6d85ba2b\nAuthor: Andor Molnar <andor@...>\nDate:   2017-12-18T16:34:24Z\n\n    ZOOKEEPER-2939. Added dropwizard library to calculate histogram of proposal sizes\n\ncommit 70faba6c8f7478d44edf5fd22557df533bbbc6ce\nAuthor: Andor Molnar <andor@...>\nDate:   2018-01-02T15:24:12Z\n\n    ZOOKEEPER-2939. Fixed/added unit tests for Stat and Monitor commands\n\n----\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 17 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1393//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1393//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1393//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 17 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1394//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1394//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1394//console\n\nThis message is automatically generated.", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r159986909\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java ---\n    @@ -0,0 +1,70 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import com.codahale.metrics.ExponentiallyDecayingReservoir;\n    --- End diff --\n    \n    I don't see much being pulled in from dropwizard, only codahale. Is codahale.metrics available independently? \r\n    \r\n    It doesn't look like it but I only checked briefly.\r\n      \n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r159985176\n  \n    --- Diff: build.xml ---\n    @@ -198,7 +198,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <!-- ====================================================== -->\n         <!-- Dependency versions                                    -->\n         <!-- ====================================================== -->\n    -    <property name=\"slf4j.version\" value=\"1.7.25\"/>\n    +    <property name=\"slf4j.version\" value=\"1.7.22\"/>\n    --- End diff --\n    \n    what is the reason for the downgrade?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r159987502\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java ---\n    @@ -0,0 +1,70 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import com.codahale.metrics.ExponentiallyDecayingReservoir;\n    +import com.codahale.metrics.Histogram;\n    +import com.codahale.metrics.JmxReporter;\n    +import com.codahale.metrics.MetricRegistry;\n    +import com.codahale.metrics.Reservoir;\n    +import com.codahale.metrics.Snapshot;\n    +import org.apache.zookeeper.jmx.CommonNames;\n    +import org.apache.zookeeper.jmx.MBeanRegistry;\n    +\n    +import static com.codahale.metrics.MetricRegistry.name;\n    +\n    +/**\n    + * Provides real-time metrics on Leader's proposal size.\n    + * The class uses a histogram included in Dropwizard metrics library with ExponentiallyDecayingReservoir.\n    + * It provides stats of proposal sizes from the last 5 minutes with acceptable cpu/memory footprint optimized for streaming data.\n    + */\n    +public class ProposalStats {\n    +    private final Histogram proposalSizes;\n    +\n    +    ProposalStats() {\n    +        final MetricRegistry metrics = new MetricRegistry();\n    +        Reservoir reservoir = new ExponentiallyDecayingReservoir();\n    --- End diff --\n    \n    I won't pretend to know much about exponentially decaying reservoirs. I'm curious what the behavior is with minimum and maximum values. Are these guaranteed to always be exact and for what time period?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160236050\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/LeaderBeanTest.java ---\n    @@ -0,0 +1,119 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + * <p>\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + * <p>\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.jute.OutputArchive;\n    --- End diff --\n    \n    nit: there are a couple unused imports here\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160236436\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/LeaderBeanTest.java ---\n    @@ -0,0 +1,119 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + * <p>\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + * <p>\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.jute.OutputArchive;\n    +import org.apache.jute.Record;\n    +import org.apache.zookeeper.server.Request;\n    +import org.apache.zookeeper.server.ZKDatabase;\n    +import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n    +import org.apache.zookeeper.server.quorum.flexible.QuorumVerifier;\n    +import org.apache.zookeeper.server.util.SerializeUtils;\n    +import org.apache.zookeeper.test.ClientBase;\n    +import org.apache.zookeeper.txn.TxnHeader;\n    +import org.junit.After;\n    +import org.junit.Before;\n    +import org.junit.Test;\n    +import org.mockito.invocation.InvocationOnMock;\n    +import org.mockito.stubbing.Answer;\n    +\n    +import java.io.File;\n    +import java.io.IOException;\n    +\n    +import static org.junit.Assert.assertEquals;\n    +import static org.junit.Assert.assertNotEquals;\n    +import static org.mockito.Matchers.any;\n    +import static org.mockito.Matchers.anyString;\n    +import static org.mockito.Mockito.doAnswer;\n    +import static org.mockito.Mockito.mock;\n    +\n    +public class LeaderBeanTest {\n    +    private Leader leader;\n    +    private LeaderBean leaderBean;\n    +    private FileTxnSnapLog fileTxnSnapLog;\n    +    private LeaderZooKeeperServer zks;\n    +    private QuorumPeer qp;\n    +\n    +    @Before\n    +    public void setUp() throws IOException {\n    +        qp = new QuorumPeer();\n    +        QuorumVerifier quorumVerifierMock = mock(QuorumVerifier.class);\n    +        qp.setQuorumVerifier(quorumVerifierMock, false);\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        fileTxnSnapLog = new FileTxnSnapLog(new File(tmpDir, \"data\"),\n    +                new File(tmpDir, \"data_txnlog\"));\n    +        ZKDatabase zkDb = new ZKDatabase(fileTxnSnapLog);\n    +\n    +        zks = new LeaderZooKeeperServer(fileTxnSnapLog, qp, zkDb);\n    +        leader = new Leader(qp, zks);\n    +        leaderBean = new LeaderBean(leader, zks);\n    +    }\n    +\n    +    @After\n    +    public void tearDown() throws IOException {\n    +        fileTxnSnapLog.close();\n    +    }\n    +\n    +    @Test\n    +    public void testGetName() {\n    +        assertEquals(\"Leader\", leaderBean.getName());\n    +    }\n    +\n    +    @Test\n    +    public void testGetCurrentZxid() {\n    +        // Arrange\n    +        zks.setZxid(1);\n    +\n    +        // Assert\n    +        assertEquals(\"0x1\", leaderBean.getCurrentZxid());\n    +    }\n    +\n    +    @Test\n    +    public void testGetElectionTimeTaken() {\n    +        // Arrange\n    +        qp.setElectionTimeTaken(1);\n    +\n    +        // Assert\n    +        assertEquals(1, leaderBean.getElectionTimeTaken());\n    +    }\n    +\n    +    private Request createMockRequest() throws IOException {\n    --- End diff --\n    \n    is this ever used?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160249680\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java ---\n    @@ -0,0 +1,70 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import com.codahale.metrics.ExponentiallyDecayingReservoir;\n    +import com.codahale.metrics.Histogram;\n    +import com.codahale.metrics.JmxReporter;\n    +import com.codahale.metrics.MetricRegistry;\n    +import com.codahale.metrics.Reservoir;\n    +import com.codahale.metrics.Snapshot;\n    +import org.apache.zookeeper.jmx.CommonNames;\n    +import org.apache.zookeeper.jmx.MBeanRegistry;\n    +\n    +import static com.codahale.metrics.MetricRegistry.name;\n    +\n    +/**\n    + * Provides real-time metrics on Leader's proposal size.\n    + * The class uses a histogram included in Dropwizard metrics library with ExponentiallyDecayingReservoir.\n    + * It provides stats of proposal sizes from the last 5 minutes with acceptable cpu/memory footprint optimized for streaming data.\n    + */\n    +public class ProposalStats {\n    +    private final Histogram proposalSizes;\n    +\n    +    ProposalStats() {\n    +        final MetricRegistry metrics = new MetricRegistry();\n    +        Reservoir reservoir = new ExponentiallyDecayingReservoir();\n    --- End diff --\n    \n    Perhaps a user configurable SlidingTimeWindowReservoir may be more appropriate?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160233203\n  \n    --- Diff: ivy.xml ---\n    @@ -133,6 +133,12 @@\n         <dependency org=\"org.codehaus.jackson\" name=\"jackson-mapper-asl\"\n                     rev=\"${jackson-mapper-asl.version}\" conf=\"optional->default\"/>\n     \n    +    <dependency org=\"io.dropwizard.metrics\" name=\"metrics-core\"\n    +                rev=\"${dropwizard.version}\" conf=\"default\" />\n    +\n    +    <dependency org=\"org.hamcrest\" name=\"hamcrest-all\" rev=\"1.3\"\n    --- End diff --\n    \n    doesn't mockito pull these in already?\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160398663\n  \n    --- Diff: build.xml ---\n    @@ -198,7 +198,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <!-- ====================================================== -->\n         <!-- Dependency versions                                    -->\n         <!-- ====================================================== -->\n    -    <property name=\"slf4j.version\" value=\"1.7.25\"/>\n    +    <property name=\"slf4j.version\" value=\"1.7.22\"/>\n    --- End diff --\n    \n    Not sure how to get an evidence, but if remember correctly it was dropwizard-core which forced me to use an earlier version of slf4j.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160398954\n  \n    --- Diff: ivy.xml ---\n    @@ -133,6 +133,12 @@\n         <dependency org=\"org.codehaus.jackson\" name=\"jackson-mapper-asl\"\n                     rev=\"${jackson-mapper-asl.version}\" conf=\"optional->default\"/>\n     \n    +    <dependency org=\"io.dropwizard.metrics\" name=\"metrics-core\"\n    +                rev=\"${dropwizard.version}\" conf=\"default\" />\n    +\n    +    <dependency org=\"org.hamcrest\" name=\"hamcrest-all\" rev=\"1.3\"\n    --- End diff --\n    \n    Unfortunately not. Mockito pulls in hamcrest-core only which contains the CoreMatchers namespaces. The matcher I use in the test is only included in hamcrest-all.\r\n    \r\n    I believe it'd be good start using more of Hamcrest matchers anyway.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160399269\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java ---\n    @@ -0,0 +1,70 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import com.codahale.metrics.ExponentiallyDecayingReservoir;\n    --- End diff --\n    \n    Doesn't look like it has separate package for that.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160401512\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java ---\n    @@ -0,0 +1,70 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import com.codahale.metrics.ExponentiallyDecayingReservoir;\n    +import com.codahale.metrics.Histogram;\n    +import com.codahale.metrics.JmxReporter;\n    +import com.codahale.metrics.MetricRegistry;\n    +import com.codahale.metrics.Reservoir;\n    +import com.codahale.metrics.Snapshot;\n    +import org.apache.zookeeper.jmx.CommonNames;\n    +import org.apache.zookeeper.jmx.MBeanRegistry;\n    +\n    +import static com.codahale.metrics.MetricRegistry.name;\n    +\n    +/**\n    + * Provides real-time metrics on Leader's proposal size.\n    + * The class uses a histogram included in Dropwizard metrics library with ExponentiallyDecayingReservoir.\n    + * It provides stats of proposal sizes from the last 5 minutes with acceptable cpu/memory footprint optimized for streaming data.\n    + */\n    +public class ProposalStats {\n    +    private final Histogram proposalSizes;\n    +\n    +    ProposalStats() {\n    +        final MetricRegistry metrics = new MetricRegistry();\n    +        Reservoir reservoir = new ExponentiallyDecayingReservoir();\n    --- End diff --\n    \n    I'm not an expert either. According to the following article I think we've the following reservoir options:\r\n    http://taint.org/2014/01/16/145944a.html\r\n    \r\n    SlidingTimeWindowReservoir: the standard one, but looks like the memory footprint could be potentially high in some cases.\r\n    SlidingTimeWindowArrayReservoir: similar to the previous with much better memory handling\r\n    ExponentiallyDecayingReservoir: good memory/cpu footprint and optimised for streaming data. The main difference is that if there's no data comes in within the configured number of samples, previously collected statistics will be presented on JMX. SlidingTimeWindow reservoirs will zero out, which sounds correct behaviour to me, but it might be less convenient.\r\n\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160422407\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/LeaderBeanTest.java ---\n    @@ -0,0 +1,119 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + * <p>\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + * <p>\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.jute.OutputArchive;\n    --- End diff --\n    \n    thanks, done.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160422461\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/LeaderBeanTest.java ---\n    @@ -0,0 +1,119 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + * <p>\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + * <p>\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.apache.jute.OutputArchive;\n    +import org.apache.jute.Record;\n    +import org.apache.zookeeper.server.Request;\n    +import org.apache.zookeeper.server.ZKDatabase;\n    +import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n    +import org.apache.zookeeper.server.quorum.flexible.QuorumVerifier;\n    +import org.apache.zookeeper.server.util.SerializeUtils;\n    +import org.apache.zookeeper.test.ClientBase;\n    +import org.apache.zookeeper.txn.TxnHeader;\n    +import org.junit.After;\n    +import org.junit.Before;\n    +import org.junit.Test;\n    +import org.mockito.invocation.InvocationOnMock;\n    +import org.mockito.stubbing.Answer;\n    +\n    +import java.io.File;\n    +import java.io.IOException;\n    +\n    +import static org.junit.Assert.assertEquals;\n    +import static org.junit.Assert.assertNotEquals;\n    +import static org.mockito.Matchers.any;\n    +import static org.mockito.Matchers.anyString;\n    +import static org.mockito.Mockito.doAnswer;\n    +import static org.mockito.Mockito.mock;\n    +\n    +public class LeaderBeanTest {\n    +    private Leader leader;\n    +    private LeaderBean leaderBean;\n    +    private FileTxnSnapLog fileTxnSnapLog;\n    +    private LeaderZooKeeperServer zks;\n    +    private QuorumPeer qp;\n    +\n    +    @Before\n    +    public void setUp() throws IOException {\n    +        qp = new QuorumPeer();\n    +        QuorumVerifier quorumVerifierMock = mock(QuorumVerifier.class);\n    +        qp.setQuorumVerifier(quorumVerifierMock, false);\n    +        File tmpDir = ClientBase.createEmptyTestDir();\n    +        fileTxnSnapLog = new FileTxnSnapLog(new File(tmpDir, \"data\"),\n    +                new File(tmpDir, \"data_txnlog\"));\n    +        ZKDatabase zkDb = new ZKDatabase(fileTxnSnapLog);\n    +\n    +        zks = new LeaderZooKeeperServer(fileTxnSnapLog, qp, zkDb);\n    +        leader = new Leader(qp, zks);\n    +        leaderBean = new LeaderBean(leader, zks);\n    +    }\n    +\n    +    @After\n    +    public void tearDown() throws IOException {\n    +        fileTxnSnapLog.close();\n    +    }\n    +\n    +    @Test\n    +    public void testGetName() {\n    +        assertEquals(\"Leader\", leaderBean.getName());\n    +    }\n    +\n    +    @Test\n    +    public void testGetCurrentZxid() {\n    +        // Arrange\n    +        zks.setZxid(1);\n    +\n    +        // Assert\n    +        assertEquals(\"0x1\", leaderBean.getCurrentZxid());\n    +    }\n    +\n    +    @Test\n    +    public void testGetElectionTimeTaken() {\n    +        // Arrange\n    +        qp.setElectionTimeTaken(1);\n    +\n    +        // Assert\n    +        assertEquals(1, leaderBean.getElectionTimeTaken());\n    +    }\n    +\n    +    private Request createMockRequest() throws IOException {\n    --- End diff --\n    \n    No, removed.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 17 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1402//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1402//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1402//console\n\nThis message is automatically generated.", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160483835\n  \n    --- Diff: build.xml ---\n    @@ -198,7 +198,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <!-- ====================================================== -->\n         <!-- Dependency versions                                    -->\n         <!-- ====================================================== -->\n    -    <property name=\"slf4j.version\" value=\"1.7.25\"/>\n    +    <property name=\"slf4j.version\" value=\"1.7.22\"/>\n    --- End diff --\n    \n    So do we still need this lower version?\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160524365\n  \n    --- Diff: build.xml ---\n    @@ -198,7 +198,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <!-- ====================================================== -->\n         <!-- Dependency versions                                    -->\n         <!-- ====================================================== -->\n    -    <property name=\"slf4j.version\" value=\"1.7.25\"/>\n    +    <property name=\"slf4j.version\" value=\"1.7.22\"/>\n    --- End diff --\n    \n    yes, to be consistent with slf4j\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 17 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1404//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1404//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1404//console\n\nThis message is automatically generated.", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160689248\n  \n    --- Diff: build.xml ---\n    @@ -198,7 +198,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <!-- ====================================================== -->\n         <!-- Dependency versions                                    -->\n         <!-- ====================================================== -->\n    -    <property name=\"slf4j.version\" value=\"1.7.25\"/>\n    +    <property name=\"slf4j.version\" value=\"1.7.22\"/>\n    --- End diff --\n    \n    Here's the issue:\r\n    {code}\r\n    BUILD FAILED\r\n    /Users/Molnar/git/my-zookeeper/build.xml:420: impossible to resolve dependencies:\r\n    \torg.slf4j#slf4j-api;1.7.22 (needed by [io.dropwizard.metrics#metrics-core;3.2.5]) conflicts with org.slf4j#slf4j-api;1.7.25 (needed by [org.apache.zookeeper#zookeeper;3.6.0-SNAPSHOT])\r\n    {code}\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160889741\n  \n    --- Diff: build.xml ---\n    @@ -198,7 +198,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <!-- ====================================================== -->\n         <!-- Dependency versions                                    -->\n         <!-- ====================================================== -->\n    -    <property name=\"slf4j.version\" value=\"1.7.25\"/>\n    +    <property name=\"slf4j.version\" value=\"1.7.22\"/>\n    --- End diff --\n    \n    Can we just exclude org.slf4j#slf4j-api;1.7.22 ?\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r160891125\n  \n    --- Diff: build.xml ---\n    @@ -198,7 +198,7 @@ xmlns:cs=\"antlib:com.puppycrawl.tools.checkstyle.ant\">\n         <!-- ====================================================== -->\n         <!-- Dependency versions                                    -->\n         <!-- ====================================================== -->\n    -    <property name=\"slf4j.version\" value=\"1.7.25\"/>\n    +    <property name=\"slf4j.version\" value=\"1.7.22\"/>\n    --- End diff --\n    \n    Great. Works.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 17 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1405//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1405//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1405//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 17 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1406//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1406//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1406//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 17 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1407//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1407//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1407//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 17 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1408//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1408//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1408//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 17 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1409//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1409//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1409//console\n\nThis message is automatically generated.", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r161661577\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java ---\n    @@ -0,0 +1,70 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import com.codahale.metrics.ExponentiallyDecayingReservoir;\n    +import com.codahale.metrics.Histogram;\n    +import com.codahale.metrics.JmxReporter;\n    +import com.codahale.metrics.MetricRegistry;\n    +import com.codahale.metrics.Reservoir;\n    +import com.codahale.metrics.Snapshot;\n    +import org.apache.zookeeper.jmx.CommonNames;\n    +import org.apache.zookeeper.jmx.MBeanRegistry;\n    +\n    +import static com.codahale.metrics.MetricRegistry.name;\n    +\n    +/**\n    + * Provides real-time metrics on Leader's proposal size.\n    + * The class uses a histogram included in Dropwizard metrics library with ExponentiallyDecayingReservoir.\n    + * It provides stats of proposal sizes from the last 5 minutes with acceptable cpu/memory footprint optimized for streaming data.\n    + */\n    +public class ProposalStats {\n    +    private final Histogram proposalSizes;\n    +\n    +    ProposalStats() {\n    +        final MetricRegistry metrics = new MetricRegistry();\n    +        Reservoir reservoir = new ExponentiallyDecayingReservoir();\n    --- End diff --\n    \n    @afine Would you approve the PR with existing reservoir or do you still think it'd be better to go with configurable sliding window?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/440\n  \n    @phunt Do you have a chance to take a look at this approach?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r163390292\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java ---\n    @@ -0,0 +1,70 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import com.codahale.metrics.ExponentiallyDecayingReservoir;\n    +import com.codahale.metrics.Histogram;\n    +import com.codahale.metrics.JmxReporter;\n    +import com.codahale.metrics.MetricRegistry;\n    +import com.codahale.metrics.Reservoir;\n    +import com.codahale.metrics.Snapshot;\n    +import org.apache.zookeeper.jmx.CommonNames;\n    +import org.apache.zookeeper.jmx.MBeanRegistry;\n    +\n    +import static com.codahale.metrics.MetricRegistry.name;\n    +\n    +/**\n    + * Provides real-time metrics on Leader's proposal size.\n    + * The class uses a histogram included in Dropwizard metrics library with ExponentiallyDecayingReservoir.\n    + * It provides stats of proposal sizes from the last 5 minutes with acceptable cpu/memory footprint optimized for streaming data.\n    + */\n    +public class ProposalStats {\n    +    private final Histogram proposalSizes;\n    +\n    +    ProposalStats() {\n    +        final MetricRegistry metrics = new MetricRegistry();\n    +        Reservoir reservoir = new ExponentiallyDecayingReservoir();\n    --- End diff --\n    \n    From: http://metrics.dropwizard.io/3.1.0/manual/core/#exponentially-decaying-reservoirs\r\n    \r\n    > A histogram with an exponentially decaying reservoir produces quantiles which are representative of (roughly) the last five minutes of data.\r\n    \r\n    My guess is that we would want more than data representing the last 5 minutes right?\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r163391127\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZKDatabase.java ---\n    @@ -264,19 +262,8 @@ public void addCommittedProposal(Request request) {\n                     maxCommittedLog = request.zxid;\n                 }\n     \n    -            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    -            BinaryOutputArchive boa = BinaryOutputArchive.getArchive(baos);\n    -            try {\n    -                request.getHdr().serialize(boa, \"hdr\");\n    -                if (request.getTxn() != null) {\n    -                    request.getTxn().serialize(boa, \"txn\");\n    -                }\n    -                baos.close();\n    -            } catch (IOException e) {\n    -                LOG.error(\"This really should be impossible\", e);\n    -            }\n    -            QuorumPacket pp = new QuorumPacket(Leader.PROPOSAL, request.zxid,\n    -                    baos.toByteArray(), null);\n    +            byte[] data = SerializeUtils.serializeRequest(request);\n    --- End diff --\n    \n    Is this really apropos to the stated reason for the PR? If not separating out to another PR means 1) easier to review this patch, and 2) might be easier to get this committed separately rather than tying it to another issue.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/440\n  \n    I like the idea of moving to dropwizard vs our own homebrew. Seems like it would allow us richer insight for metrics. Here are my concerns:\r\n    \r\n    1) performance. Do we know the impact of this library vs our homebrew? Both in the small and the large.\r\n    \r\n    2) likely this change will go into master (3.6.0+) - impact on backports. I'm assuming we would want to take advantage of this library across the board. (can we do that? I assume yes?)\r\n    \r\n    3) I believe I recommended on the original PR separating the new metric from introducing new dependencies. I still believe that's the quickest way to get the feature addressed, vs introducing new metrics functionality.  Can we commit #415 independently of this change?\n", "Github user aberghage commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/440\n  \n    I apologize for the somewhat substance-light addition to the conversation, but having grafted some super crude histogram upgrades on counters in our patchset I'd be very much in favor of pulling in a library that does it right, which this seems to do.\r\n    \r\n    That said, splitting concerns between the new dependency and new metric also sounds correct to me.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/440\n  \n    No apologies necessary @aberghage - appreciate the feedback.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r163458563\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java ---\n    @@ -0,0 +1,70 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import com.codahale.metrics.ExponentiallyDecayingReservoir;\n    +import com.codahale.metrics.Histogram;\n    +import com.codahale.metrics.JmxReporter;\n    +import com.codahale.metrics.MetricRegistry;\n    +import com.codahale.metrics.Reservoir;\n    +import com.codahale.metrics.Snapshot;\n    +import org.apache.zookeeper.jmx.CommonNames;\n    +import org.apache.zookeeper.jmx.MBeanRegistry;\n    +\n    +import static com.codahale.metrics.MetricRegistry.name;\n    +\n    +/**\n    + * Provides real-time metrics on Leader's proposal size.\n    + * The class uses a histogram included in Dropwizard metrics library with ExponentiallyDecayingReservoir.\n    + * It provides stats of proposal sizes from the last 5 minutes with acceptable cpu/memory footprint optimized for streaming data.\n    + */\n    +public class ProposalStats {\n    +    private final Histogram proposalSizes;\n    +\n    +    ProposalStats() {\n    +        final MetricRegistry metrics = new MetricRegistry();\n    +        Reservoir reservoir = new ExponentiallyDecayingReservoir();\n    --- End diff --\n    \n    http://metrics.dropwizard.io/3.1.0/apidocs/com/codahale/metrics/ExponentiallyDecayingReservoir.html\r\n    Default constructor:\r\n    > Creates a new ExponentiallyDecayingReservoir of 1028 elements, which offers a 99.9% confidence level with a 5% margin of error assuming a normal distribution, and an alpha factor of 0.015, which heavily biases the reservoir to the past 5 minutes of measurements.\r\n    There're 2 other constructors which the reservoir can be configured with by size, alpha and clock. So, the window can be extended, though it's not as obvious as with `SlidingWindow`.\r\n    \r\n    Let's go with that as you suggested.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/440#discussion_r163458731\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZKDatabase.java ---\n    @@ -264,19 +262,8 @@ public void addCommittedProposal(Request request) {\n                     maxCommittedLog = request.zxid;\n                 }\n     \n    -            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    -            BinaryOutputArchive boa = BinaryOutputArchive.getArchive(baos);\n    -            try {\n    -                request.getHdr().serialize(boa, \"hdr\");\n    -                if (request.getTxn() != null) {\n    -                    request.getTxn().serialize(boa, \"txn\");\n    -                }\n    -                baos.close();\n    -            } catch (IOException e) {\n    -                LOG.error(\"This really should be impossible\", e);\n    -            }\n    -            QuorumPacket pp = new QuorumPacket(Leader.PROPOSAL, request.zxid,\n    -                    baos.toByteArray(), null);\n    +            byte[] data = SerializeUtils.serializeRequest(request);\n    --- End diff --\n    \n    Just a small refactoring. I'm happy to submit in another PR.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/440\n  \n    @aberghage Thanks for reviewing this.\r\n    @phunt \r\n    1. This library has some performance impact for sure, because it calculates more complicated statistics, while my original solution only exposes last / min / max proposal sizes and doesn't calculate anything. Not even average.\r\n    \r\n    2. Sure, I'll have to backport it to branch-3.4, it will need some manual work for sure, but I don't expect it to be the end of the world.\r\n    \r\n    3. Sure, I'd be more than happy if you could merge my previous PR first and later this one, because that would really mean some progress to be made on my side. Go ahead if you don't have concerns, I'm getting the build to be green asap. (the small refactoring you mentioned above is part of that PR too - be aware of that)\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @phunt @afine Do you think this PR is ready to committed before the Dropwizard one?\r\n\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @phunt I think this is ready to merge. Just waiting on your +1.\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/415\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/440\n  \n    I merged https://github.com/apache/zookeeper/pull/415. Please go ahead and create a new JIRA to correspond to this PR and I'll mark ZOOKEEPER-2939 as resolved.\n", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3719 (See [https://builds.apache.org/job/ZooKeeper-trunk/3719/])\nZOOKEEPER-2939: Added last/min/max proposal size JMX beans (afine: rev aefb13f2b289e19e32c0fcc5714711b07989d67f)\n* (add) src/java/test/org/apache/zookeeper/server/quorum/StatCommandTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServerMXBean.java\n* (edit) src/java/main/org/apache/zookeeper/server/command/StatCommand.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/Leader.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/StatResetCommandTest.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/LeaderBeanTest.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/ProposalStatsTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/LeaderMXBean.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/LeaderBean.java\n* (edit) src/java/main/org/apache/zookeeper/server/command/StatResetCommand.java\n* (add) src/java/main/org/apache/zookeeper/server/quorum/ProposalStats.java\n* (add) src/java/test/org/apache/zookeeper/server/util/SerializeUtilsTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServerBean.java\n* (edit) src/java/main/org/apache/zookeeper/server/command/AbstractFourLetterCommand.java\n* (edit) build.xml\n* (edit) src/java/main/org/apache/zookeeper/server/command/MonitorCommand.java\n* (edit) src/java/main/org/apache/zookeeper/server/ZKDatabase.java\n* (edit) src/java/test/org/apache/zookeeper/server/ZooKeeperServerStartupTest.java\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/440\n  \n    @afine PR has been rebased on top of the previous jutemaxbuffer commit as discussed. Please review.\n", "GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/462\n\n    ZOOKEEPER-2939. Deal with maxbuffer as it relates to proposals\n\n    Branch 3.4 version of https://github.com/apache/zookeeper/pull/415\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2939_34\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/462.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #462\n    \n----\ncommit f6dc63c7c2af38688a796b0fe9c0f47d8044d2b1\nAuthor: Andor Molnar <andor@...>\nDate:   2018-02-12T14:17:12Z\n\n    ZOOKEEPER-2939. Deal with maxbuffer as it relates to proposals\n\n----\n", "GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/463\n\n    ZOOKEEPER-2939 Deal with maxbuffer as it relates to proposals - branch-3.5 build fix\n\n    @afine This PR is a fix for branch-3.5 builds. Please take this as high priority.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2939_3.5\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/463.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #463\n    \n----\ncommit 57b20b92a949137897b19a0fd308750f0cb2a0ae\nAuthor: Andor Molnar <andor@...>\nDate:   2018-02-12T16:44:04Z\n\n    ZOOKEEPER-2939. Fix the build, because ClientBase.createEmptyTestDir() is not available on this branch\n\n----\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/463\n  \n    @anmolnar Thank you for fixing this so quickly. Please create a new JIRA for this (as things get complicated when we have many commits for the same JIRA ticket) and I will merge this.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/463\n  \n    @afine Thanks, it's done.\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 6 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1623//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1623//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1623//console\n\nThis message is automatically generated."]}, {"Issue key": "ZOOKEEPER-2938", "Request type": "Bug", "Datetime creation": "2017-11-09 00:31:57", "Datetime resolution": null, "Reporter login": "bothra90", "Reporter name": "Abhay Bothra", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "We see the following logs in the node with {{myid: 1}}\r\n{code}\r\n2017-11-08 15:06:28,375 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2017-11-08 15:06:28,375 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2017-11-08 15:07:28,375 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection@597] - Notification: 1 (message format version), 1 (n.leader), 0x28e000a8750 (n.zxid), 0x1 (n.round), LOOKING (n.state), 1 (n.sid), 0x28e (n.peerEpoch) LOOKING (my state)\r\n2017-11-08 15:07:28,375 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2017-11-08 15:07:28,376 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2017-11-08 15:08:28,375 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection@597] - Notification: 1 (message format version), 1 (n.leader), 0x28e000a8750 (n.zxid), 0x1 (n.round), LOOKING (n.state), 1 (n.sid), 0x28e (n.peerEpoch) LOOKING (my state)\r\n2017-11-08 15:08:28,376 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2017-11-08 15:08:28,376 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2017-11-08 15:09:28,376 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection@597] - Notification: 1 (message format version), 1 (n.leader), 0x28e000a8750 (n.zxid), 0x1 (n.round), LOOKING (n.state), 1 (n.sid), 0x28e (n.peerEpoch) LOOKING (my state)\r\n2017-11-08 15:09:28,376 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2017-11-08 15:09:28,376 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2017-11-08 15:10:28,376 [myid:1] - INFO  [WorkerReceiver[myid=1]:FastLeaderElection@597] - Notification: 1 (message format version), 1 (n.leader), 0x28e000a8750 (n.zxid), 0x1 (n.round), LOOKING (n.state), 1 (n.sid), 0x28e (n.peerEpoch) LOOKING (my state)\r\n2017-11-08 15:10:28,376 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2017-11-08 15:10:28,377 [myid:1] - INFO  [WorkerSender[myid=1]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n{code}\r\n\r\nOn the nodes with {{myid: 2}} and {{myid: 3}}, we see connection broken events for {{myid: 1}}\r\n{code}\r\n2017-11-07 02:54:32,135 [myid:2] - WARN  [RecvWorker:1:QuorumCnxManager$RecvWorker@780] - Connection broken for id 1, my id = 2, error =\r\njava.net.SocketException: Connection reset\r\n        at java.net.SocketInputStream.read(SocketInputStream.java:209)\r\n        at java.net.SocketInputStream.read(SocketInputStream.java:141)\r\n        at java.net.SocketInputStream.read(SocketInputStream.java:223)\r\n        at java.io.DataInputStream.readInt(DataInputStream.java:387)\r\n        at org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:765)\r\n2017-11-07 02:54:32,135 [myid:2] - WARN  [RecvWorker:1:QuorumCnxManager$RecvWorker@783] - Interrupting SendWorker\r\n2017-11-07 02:54:32,135 [myid:2] - WARN  [SendWorker:1:QuorumCnxManager$SendWorker@697] - Interrupted while waiting for message on queue\r\njava.lang.InterruptedException\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088)\r\n        at java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:418)\r\n        at org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:849)\r\n        at org.apache.zookeeper.server.quorum.QuorumCnxManager.access$500(QuorumCnxManager.java:64)\r\n        at org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:685)\r\n2017-11-07 02:54:32,135 [myid:2] - WARN  [SendWorker:1:QuorumCnxManager$SendWorker@706] - Send worker leaving thread\r\n{code}\r\n\r\nFrom the reported occurrences, it looks like this is a problem only when the node with the smallest {{myid}} loses connection.", "Comments": ["We're also wondering if this could be related to ZOOKEEPER-1732 and ZOOKEEPER-2172", "We are experiencing this as well, but the node that continually drops the connection does not have the smallest {{myid}} \u2013 here it is 6 but 5 is the smallest (5, 6, 7 are the IDs). ZooKeeper 3.4.6.  Killing the leader resulted in the full ensemble returning.\r\n\r\n{code:java}\r\n2018-02-12 16:29:48,428 [myid:6] - INFO  [Thread-1:QuorumCnxManager$Listener@504] - My election bind port: /10.122.11.104:6666\r\n2018-02-12 16:29:48,440 [myid:6] - INFO  [QuorumPeer[myid=6]/0.0.0.0:4444:QuorumPeer@714] - LOOKING\r\n2018-02-12 16:29:48,443 [myid:6] - INFO  [QuorumPeer[myid=6]/0.0.0.0:4444:FastLeaderElection@815] - New election. My id =  6, proposed zxid=0x1b00653e67\r\n2018-02-12 16:29:48,453 [myid:6] - INFO  [WorkerSender[myid=6]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (7, 6)\r\n2018-02-12 16:29:48,453 [myid:6] - INFO  [WorkerReceiver[myid=6]:FastLeaderElection@597] - Notification: 1 (message format version), 6 (n.leader), 0x1b00653e67 (n.zxid), 0x1 (n.round), LOOKING (n.state), 6 (\r\nn.sid), 0x1b (n.peerEpoch) LOOKING (my state)\r\n2018-02-12 16:29:48,657 [myid:6] - INFO  [QuorumPeer[myid=6]/0.0.0.0:4444:FastLeaderElection@849] - Notification time out: 400\r\n2018-02-12 16:29:48,657 [myid:6] - INFO  [WorkerReceiver[myid=6]:FastLeaderElection@597] - Notification: 1 (message format version), 6 (n.leader), 0x1b00653e67 (n.zxid), 0x1 (n.round), LOOKING (n.state), 6 (\r\nn.sid), 0x1b (n.peerEpoch) LOOKING (my state)\r\n2018-02-12 16:29:48,658 [myid:6] - INFO  [WorkerSender[myid=6]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (7, 6)\r\n2018-02-12 16:29:49,058 [myid:6] - INFO  [QuorumPeer[myid=6]/0.0.0.0:4444:FastLeaderElection@849] - Notification time out: 800\r\n2018-02-12 16:29:49,058 [myid:6] - INFO  [WorkerReceiver[myid=6]:FastLeaderElection@597] - Notification: 1 (message format version), 6 (n.leader), 0x1b00653e67 (n.zxid), 0x1 (n.round), LOOKING (n.state), 6 (\r\nn.sid), 0x1b (n.peerEpoch) LOOKING (my state)\r\n2018-02-12 16:29:49,859 [myid:6] - INFO  [QuorumPeer[myid=6]/0.0.0.0:4444:FastLeaderElection@849] - Notification time out: 1600\r\n2018-02-12 16:29:50,058 [myid:6] - INFO  [WorkerSender[myid=6]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (7, 6)\r\n2018-02-12 16:29:50,059 [myid:6] - INFO  [WorkerReceiver[myid=6]:FastLeaderElection@597] - Notification: 1 (message format version), 6 (n.leader), 0x1b00653e67 (n.zxid), 0x1 (n.round), LOOKING (n.state), 6 (\r\nn.sid), 0x1b (n.peerEpoch) LOOKING (my state)\r\n2018-02-12 16:29:50,059 [myid:6] - INFO  [WorkerSender[myid=6]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (7, 6)\r\n2018-02-12 16:29:51,660 [myid:6] - INFO  [QuorumPeer[myid=6]/0.0.0.0:4444:FastLeaderElection@849] - Notification time out: 3200\r\n2018-02-12 16:29:51,660 [myid:6] - INFO  [WorkerReceiver[myid=6]:FastLeaderElection@597] - Notification: 1 (message format version), 6 (n.leader), 0x1b00653e67 (n.zxid), 0x1 (n.round), LOOKING (n.state), 6 (\r\nn.sid), 0x1b (n.peerEpoch) LOOKING (my state)\r\n2018-02-12 16:29:51,660 [myid:6] - INFO  [WorkerSender[myid=6]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (7, 6)\r\n2018-02-12 16:29:54,861 [myid:6] - INFO  [QuorumPeer[myid=6]/0.0.0.0:4444:FastLeaderElection@849] - Notification time out: 6400\r\n2018-02-12 16:29:54,861 [myid:6] - INFO  [WorkerReceiver[myid=6]:FastLeaderElection@597] - Notification: 1 (message format version), 6 (n.leader), 0x1b00653e67 (n.zxid), 0x1 (n.round), LOOKING (n.state), 6 (\r\nn.sid), 0x1b (n.peerEpoch) LOOKING (my state)\r\n2018-02-12 16:29:54,862 [myid:6] - INFO  [WorkerSender[myid=6]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (7, 6)\r\n2018-02-12 16:30:01,262 [myid:6] - INFO  [QuorumPeer[myid=6]/0.0.0.0:4444:FastLeaderElection@849] - Notification time out: 12800\r\n2018-02-12 16:30:01,263 [myid:6] - INFO  [WorkerReceiver[myid=6]:FastLeaderElection@597] - Notification: 1 (message format version), 6 (n.leader), 0x1b00653e67 (n.zxid), 0x1 (n.round), LOOKING (n.state), 6 (\r\nn.sid), 0x1b (n.peerEpoch) LOOKING (my state)\r\n2018-02-12 16:30:01,263 [myid:6] - INFO  [WorkerSender[myid=6]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (7, 6)\r\n2018-02-12 16:30:02,050 [myid:6] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:4444:NIOServerCnxnFactory@197] - Accepted socket connection from /127.0.0.1:54541\r\n2018-02-12 16:30:02,057 [myid:6] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:4444:NIOServerCnxn@827] - Processing ruok command from /127.0.0.1:54541\r\n2018-02-12 16:30:02,060 [myid:6] - INFO  [Thread-2:NIOServerCnxn@1007] - Closed socket connection for client /127.0.0.1:54541 (no session established for client)\r\n2018-02-12 16:30:02,449 [myid:6] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:4444:NIOServerCnxnFactory@197] - Accepted socket connection from /127.0.0.1:54611\r\n2018-02-12 16:30:02,450 [myid:6] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:4444:NIOServerCnxn@827] - Processing ruok command from /127.0.0.1:54611\r\n2018-02-12 16:30:02,451 [myid:6] - INFO  [Thread-3:NIOServerCnxn@1007] - Closed socket connection for client /127.0.0.1:54611 (no session established for client)\r\n2018-02-12 16:30:02,789 [myid:6] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:4444:NIOServerCnxnFactory@197] - Accepted socket connection from /127.0.0.1:54671\r\n2018-02-12 16:30:02,790 [myid:6] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:4444:NIOServerCnxn@827] - Processing ruok command from /127.0.0.1:54671\r\n2018-02-12 16:30:02,791 [myid:6] - INFO  [Thread-4:NIOServerCnxn@1007] - Closed socket connection for client /127.0.0.1:54671 (no session established for client)\r\n... these messages continue\r\n{code}", "On our other quorum peers, we see a lot of connections in CLOSE_WAIT state to port 4181. Could these somehow prevent the quorum peer from processing leader election messages from the affected peer?", "We have received similar issue in quorum of 5 nodes, id: 1, 2, 3, 4, 5. Here 2 & 4 have connection error from node 3. Node 5 is leader.\r\n\r\nNode 3 while connecting to 2 & 4 failed due to connection error. But its giving similar error:\r\nHave smaller server identifier, so dropping the connection: (5, 3)\r\nAnd node 3 not able to join the quorum. But it should join (but 3 nodes are running as required for quorum).", "[~bothra90]\r\n\r\nThanks for reporting this issue, I'm taking a look at it. You mentioned that's it might be related to ZOOKEEPER-1732, are you sure about that? That would mean that it had never been fixed.\r\n\r\nBecause the log snippet you provided and the one I can see from [~adamjshook] doesn't seem to me related. In the original issue there wasn't any connection problem between the participants. The node was unable to join the ensemble even though it had all the necessary information of the running ensembe. (e.g. all notifications from other servers)\r\n\r\n[~sumitagrawal] This applies to your report as well, it looks like you all had similar issues, but I doubt it's anyhow related to 1732.\r\n\r\n[~fpj] Would you please take a very quick look at this ticket?\r\n\r\nYou worked on the original issues and might be able to confirm that this is not related. Thanks.", "[~bothra90] [~adamjshook] [~sumitagrawal]\r\n\r\nAre you saying that restarting only the failing node didn't solve the problem?\r\n\r\nSo, basically you had to restart the leader itself to get the full ensemble working again?", "[~andor]: Yes, restarting the failing node does not help, but restarting the leader does.", "FWIW, a group of us have observed this a few times now. We found that it was actually due to https://issues.apache.org/jira/browse/ZOOKEEPER-2186. When the QuorumCnxManager thread dies, you can't get any more elections to happen. But, when you restart the leader, you can form a quorum again just fine. ZK servers which are already a part of the quorum continue to merrily participate. Would suggest just closing this one as I don't think it's unique.\r\n\r\nZOOKEEPER-602 is also a good one to help tell us when this actually happens ;)", "Thank you for reporting this [~elserj]!  We were considering upgrading our ZooKeeper from 3.4.6 in the hopes that the issue would go away.  Now I'll definitely be upgrading.", "Hey guys,\r\n\r\nI'm running Zookeeper 3.5.5 with Kafka 2.2.1 in my Dev-Environment and got exactly this problem there.\r\n\r\nAnd as stated above, restarting the leader fixed it. So upgrading to 3.5.5 unfortunately doesn't fix the problem....\r\n\r\nLogs from all nodes with restart of node2, which was the leader:\r\n{code:java}\r\nnode 1 (not leader)\r\n2019-06-12 00:37:51,904 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-06-12 00:37:51,904 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):FastLeaderElection@919] - Notification time out: 3200\r\n2019-06-12 00:37:55,108 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-06-12 00:37:55,113 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-06-12 00:37:55,113 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):FastLeaderElection@919] - Notification time out: 6400\r\n2019-06-12 00:38:01,516 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-06-12 00:38:01,521 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-06-12 00:38:01,521 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):FastLeaderElection@919] - Notification time out: 12800\r\n2019-06-12 00:38:14,324 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-06-12 00:38:14,327 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-06-12 00:38:14,327 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):FastLeaderElection@919] - Notification time out: 25600\r\n2019-06-12 00:38:39,935 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-06-12 00:38:40,126 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-06-12 00:38:40,126 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):FastLeaderElection@919] - Notification time out: 51200\r\n2019-06-12 00:39:31,544 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-06-12 00:39:31,786 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-06-12 00:39:31,786 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):FastLeaderElection@919] - Notification time out: 60000\r\n2019-06-12 00:39:46,639 [myid:1] - WARN [NIOWorkerThread-1:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:46,639 [myid:1] - WARN [NIOWorkerThread-2:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:47,259 [myid:1] - WARN [NIOWorkerThread-3:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:48,756 [myid:1] - WARN [NIOWorkerThread-4:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:50,105 [myid:1] - WARN [NIOWorkerThread-1:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:50,620 [myid:1] - WARN [NIOWorkerThread-2:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:51,638 [myid:1] - WARN [NIOWorkerThread-3:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:53,116 [myid:1] - WARN [NIOWorkerThread-4:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:53,203 [myid:1] - WARN [NIOWorkerThread-1:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:54,416 [myid:1] - WARN [NIOWorkerThread-2:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:55,788 [myid:1] - WARN [NIOWorkerThread-3:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:55,814 [myid:1] - WARN [NIOWorkerThread-4:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:57,412 [myid:1] - WARN [NIOWorkerThread-1:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:58,224 [myid:1] - WARN [NIOWorkerThread-2:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:39:58,687 [myid:1] - WARN [NIOWorkerThread-3:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:00,237 [myid:1] - WARN [NIOWorkerThread-4:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:00,654 [myid:1] - WARN [NIOWorkerThread-1:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:02,051 [myid:1] - WARN [NIOWorkerThread-2:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:03,220 [myid:1] - WARN [NIOWorkerThread-3:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:03,262 [myid:1] - WARN [NIOWorkerThread-4:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:04,923 [myid:1] - WARN [NIOWorkerThread-1:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:05,506 [myid:1] - WARN [NIOWorkerThread-2:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:07,148 [myid:1] - WARN [NIOWorkerThread-3:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:07,497 [myid:1] - WARN [NIOWorkerThread-4:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:09,029 [myid:1] - INFO [/0.0.0.0:3888:QuorumCnxManager$Listener@888] - Received connection request /x.x.x.x:47290\r\n2019-06-12 00:40:09,449 [myid:1] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x1 (n.round), LOOKING (n.state), 3 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,449 [myid:1] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 3 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,452 [myid:1] - INFO [WorkerSender[myid=1]:QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-06-12 00:40:09,457 [myid:1] - INFO [WorkerSender[myid=1]:QuorumCnxManager@430] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-06-12 00:40:09,501 [myid:1] - WARN [NIOWorkerThread-1:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:09,676 [myid:1] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x1 (n.round), LOOKING (n.state), 1 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,677 [myid:1] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 1 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,677 [myid:1] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 3 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,679 [myid:1] - INFO [WorkerReceiver[myid=1]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 1 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,841 [myid:1] - WARN [NIOWorkerThread-2:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:09,880 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):QuorumPeer@1269] - FOLLOWING\r\n2019-06-12 00:40:09,897 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Learner@91] - TCP NoDelay set to: true\r\n2019-06-12 00:40:09,919 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:zookeeper.version=3.5.5-390fe37ea45dee01bf87dc1c042b5e3dcce88653, built on 05/03/2019 12:07 GMT\r\n2019-06-12 00:40:09,919 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:host.name=zookeeper_node_1\r\n2019-06-12 00:40:09,919 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.version=1.8.0_212\r\n2019-06-12 00:40:09,919 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.vendor=Oracle Corporation\r\n2019-06-12 00:40:09,919 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.home=/usr/local/openjdk-8\r\n2019-06-12 00:40:09,919 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.class.path=/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../zookeeper-server/target/classes:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../build/classes:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../zookeeper-server/target/lib/*.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../build/lib/*.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/zookeeper-jute-3.5.5.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/zookeeper-3.5.5.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/slf4j-log4j12-1.7.25.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/slf4j-api-1.7.25.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/netty-all-4.1.29.Final.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/log4j-1.2.17.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/json-simple-1.1.1.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jline-2.11.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jetty-util-9.4.17.v20190418.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jetty-servlet-9.4.17.v20190418.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jetty-server-9.4.17.v20190418.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jetty-security-9.4.17.v20190418.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jetty-io-9.4.17.v20190418.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jetty-http-9.4.17.v20190418.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/javax.servlet-api-3.1.0.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jackson-databind-2.9.8.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jackson-core-2.9.8.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jackson-annotations-2.9.0.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/commons-cli-1.2.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/audience-annotations-0.5.0.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../zookeeper-*.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../zookeeper-server/src/main/resources/lib/*.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../conf::/opt/zookeeper-cluster/newrelic/newrelic.jar\r\n2019-06-12 00:40:09,919 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib\r\n2019-06-12 00:40:09,919 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.io.tmpdir=/tmp\r\n2019-06-12 00:40:09,919 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.compiler=<NA>\r\n2019-06-12 00:40:09,919 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:os.name=Linux\r\n2019-06-12 00:40:09,919 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:os.arch=amd64\r\n2019-06-12 00:40:09,919 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:os.version=3.10.0-693.21.1.el7.x86_64\r\n2019-06-12 00:40:09,920 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:user.name=root\r\n2019-06-12 00:40:09,920 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:user.home=/root\r\n2019-06-12 00:40:09,920 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:user.dir=/\r\n2019-06-12 00:40:09,920 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:os.memory.free=290MB\r\n2019-06-12 00:40:09,920 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:os.memory.max=889MB\r\n2019-06-12 00:40:09,920 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:os.memory.total=396MB\r\n2019-06-12 00:40:09,923 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):ZooKeeperServer@938] - minSessionTimeout set to 4000\r\n2019-06-12 00:40:09,923 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):ZooKeeperServer@947] - maxSessionTimeout set to 40000\r\n2019-06-12 00:40:09,923 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):ZooKeeperServer@166] - Created server with tickTime 2000 minSessionTimeout 4000 maxSessionTimeout 40000 datadir /mnt/zk_data_log/version-2 snapdir /mnt/zk_data/version-2\r\n2019-06-12 00:40:09,924 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Follower@69] - FOLLOWING - LEADER ELECTION TOOK - 43 MS\r\n2019-06-12 00:40:10,184 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Learner@391] - Getting a diff from the leader 0x2d000022ce\r\n2019-06-12 00:40:10,207 [myid:1] - WARN [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Learner@454] - Got zxid 0x2d00000001 expected 0x1\r\n2019-06-12 00:40:10,321 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Learner@546] - Learner received NEWLEADER message\r\n2019-06-12 00:40:10,372 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):Learner@529] - Learner received UPTODATE message\r\n2019-06-12 00:40:10,400 [myid:1] - INFO [QuorumPeer[myid=1](plain=/0.0.0.0:2181)(secure=disabled):CommitProcessor@256] - Configuring CommitProcessor with 2 worker threads.\r\n2019-06-12 00:40:10,460 [myid:1] - INFO [SyncThread:1:FileTxnLog@216] - Creating new log file: log.2d00000001\r\n\r\n\r\nnode 2 (not leader)\r\n2019-06-12 00:40:09,456 [myid:2] - WARN [RecvWorker:1:QuorumCnxManager$RecvWorker@1176] - Connection broken for id 1, my id = 2, error =\r\njava.net.SocketException: Socket closed\r\nat java.net.SocketInputStream.socketRead0(Native Method)\r\nat java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\r\nat java.net.SocketInputStream.read(SocketInputStream.java:171)\r\nat java.net.SocketInputStream.read(SocketInputStream.java:141)\r\nat java.io.BufferedInputStream.fill(BufferedInputStream.java:246)\r\nat java.io.BufferedInputStream.read(BufferedInputStream.java:265)\r\nat java.io.DataInputStream.readInt(DataInputStream.java:387)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:1161)\r\n2019-06-12 00:40:09,456 [myid:2] - WARN [RecvWorker:1:QuorumCnxManager$RecvWorker@1179] - Interrupting SendWorker\r\n2019-06-12 00:40:09,457 [myid:2] - WARN [RecvWorker:2:QuorumCnxManager$RecvWorker@1176] - Connection broken for id 2, my id = 2, error =\r\njava.io.EOFException\r\nat java.io.DataInputStream.readInt(DataInputStream.java:392)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:1161)\r\n2019-06-12 00:40:09,457 [myid:2] - WARN [RecvWorker:2:QuorumCnxManager$RecvWorker@1179] - Interrupting SendWorker\r\n2019-06-12 00:40:09,460 [myid:2] - WARN [SendWorker:2:QuorumCnxManager$SendWorker@1092] - Interrupted while waiting for message on queue\r\njava.lang.InterruptedException\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088)\r\nat java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:418)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:1243)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.access$700(QuorumCnxManager.java:78)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:1080)\r\n2019-06-12 00:40:09,460 [myid:2] - INFO [/0.0.0.0:3888:QuorumCnxManager$Listener@888] - Received connection request /x.x.x.x:59918\r\n2019-06-12 00:40:09,461 [myid:2] - WARN [SendWorker:2:QuorumCnxManager$SendWorker@1102] - Send worker leaving thread id 2 my id = 2\r\n2019-06-12 00:40:09,461 [myid:2] - INFO [/0.0.0.0:3888:QuorumCnxManager$Listener@888] - Received connection request /x.x.x.x:44210\r\n2019-06-12 00:40:09,462 [myid:2] - WARN [SendWorker:1:QuorumCnxManager$SendWorker@1092] - Interrupted while waiting for message on queue\r\njava.lang.InterruptedException\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088)\r\nat java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:418)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:1243)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.access$700(QuorumCnxManager.java:78)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:1080)\r\n2019-06-12 00:40:09,463 [myid:2] - WARN [SendWorker:1:QuorumCnxManager$SendWorker@1102] - Send worker leaving thread id 1 my id = 2\r\n2019-06-12 00:40:09,464 [myid:2] - WARN [RecvWorker:1:QuorumCnxManager$RecvWorker@1176] - Connection broken for id 1, my id = 2, error =\r\njava.net.SocketException: Socket closed\r\nat java.net.SocketInputStream.socketRead0(Native Method)\r\nat java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\r\nat java.net.SocketInputStream.read(SocketInputStream.java:171)\r\nat java.net.SocketInputStream.read(SocketInputStream.java:141)\r\nat java.io.BufferedInputStream.fill(BufferedInputStream.java:246)\r\nat java.io.BufferedInputStream.read(BufferedInputStream.java:265)\r\nat java.io.DataInputStream.readInt(DataInputStream.java:387)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:1161)\r\n2019-06-12 00:40:09,464 [myid:2] - WARN [RecvWorker:1:QuorumCnxManager$RecvWorker@1179] - Interrupting SendWorker\r\n2019-06-12 00:40:09,464 [myid:2] - INFO [/0.0.0.0:3888:QuorumCnxManager$Listener@888] - Received connection request /x.x.x.x:59920\r\n2019-06-12 00:40:09,464 [myid:2] - WARN [SendWorker:2:QuorumCnxManager$SendWorker@1092] - Interrupted while waiting for message on queue\r\njava.lang.InterruptedException\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088)\r\nat java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:418)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:1243)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.access$700(QuorumCnxManager.java:78)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:1080)\r\n2019-06-12 00:40:09,465 [myid:2] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x1 (n.round), LOOKING (n.state), 3 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,465 [myid:2] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 3 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,467 [myid:2] - WARN [RecvWorker:2:QuorumCnxManager$RecvWorker@1179] - Interrupting SendWorker\r\n2019-06-12 00:40:09,467 [myid:2] - WARN [SendWorker:2:QuorumCnxManager$SendWorker@1102] - Send worker leaving thread id 2 my id = 2\r\n2019-06-12 00:40:09,588 [myid:2] - WARN [NIOWorkerThread-1:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:09,691 [myid:2] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 2 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,691 [myid:2] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@679] - Notification: 2 (message format version), 2 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 2 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,691 [myid:2] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@679] - Notification: 2 (message format version), 2 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 2 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,691 [myid:2] - INFO [WorkerReceiver[myid=2]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 2 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,892 [myid:2] - INFO [QuorumPeer[myid=2](plain=/0.0.0.0:2181)(secure=disabled):QuorumPeer@1269] - FOLLOWING\r\n2019-06-12 00:40:09,892 [myid:2] - INFO [QuorumPeer[myid=2](plain=/0.0.0.0:2181)(secure=disabled):ZooKeeperServer@938] - minSessionTimeout set to 4000\r\n2019-06-12 00:40:09,892 [myid:2] - INFO [QuorumPeer[myid=2](plain=/0.0.0.0:2181)(secure=disabled):ZooKeeperServer@947] - maxSessionTimeout set to 40000\r\n2019-06-12 00:40:09,892 [myid:2] - INFO [QuorumPeer[myid=2](plain=/0.0.0.0:2181)(secure=disabled):ZooKeeperServer@166] - Created server with tickTime 2000 minSessionTimeout 4000 maxSessionTimeout 40000 datadir /mnt/zk_data_log/version-2 snapdir /mnt/zk_data/version-2\r\n2019-06-12 00:40:09,892 [myid:2] - INFO [QuorumPeer[myid=2](plain=/0.0.0.0:2181)(secure=disabled):Follower@69] - FOLLOWING - LEADER ELECTION TOOK - 1 MS\r\n2019-06-12 00:40:09,950 [myid:2] - INFO [QuorumPeer[myid=2](plain=/0.0.0.0:2181)(secure=disabled):Learner@391] - Getting a diff from the leader 0x2d000022ce\r\n2019-06-12 00:40:09,951 [myid:2] - INFO [QuorumPeer[myid=2](plain=/0.0.0.0:2181)(secure=disabled):Learner@546] - Learner received NEWLEADER message\r\n2019-06-12 00:40:10,080 [myid:2] - INFO [QuorumPeer[myid=2](plain=/0.0.0.0:2181)(secure=disabled):Learner@529] - Learner received UPTODATE message\r\n2019-06-12 00:40:10,081 [myid:2] - INFO [QuorumPeer[myid=2](plain=/0.0.0.0:2181)(secure=disabled):CommitProcessor@256] - Configuring CommitProcessor with 2 worker threads.\r\n2019-06-12 00:40:11,310 [myid:2] - INFO [NIOWorkerThread-2:Learner@113] - Revalidating client: 0x305c08162210001\r\n\r\n\r\nNode 3 (leader)\r\n2019-06-12 00:38:40,130 [myid:3] - WARN [RecvWorker:1:QuorumCnxManager$RecvWorker@1176] - Connection broken for id 1, my id = 3, error =\r\njava.net.SocketException: Socket closed\r\nat java.net.SocketInputStream.socketRead0(Native Method)\r\nat java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\r\nat java.net.SocketInputStream.read(SocketInputStream.java:171)\r\nat java.net.SocketInputStream.read(SocketInputStream.java:141)\r\nat java.io.BufferedInputStream.fill(BufferedInputStream.java:246)\r\nat java.io.BufferedInputStream.read(BufferedInputStream.java:265)\r\nat java.io.DataInputStream.readInt(DataInputStream.java:387)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:1161)\r\n2019-06-12 00:38:40,130 [myid:3] - WARN [RecvWorker:1:QuorumCnxManager$RecvWorker@1179] - Interrupting SendWorker\r\n2019-06-12 00:38:40,130 [myid:3] - WARN [RecvWorker:3:QuorumCnxManager$RecvWorker@1176] - Connection broken for id 3, my id = 3, error =\r\njava.io.EOFException\r\nat java.io.DataInputStream.readInt(DataInputStream.java:392)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:1161)\r\n2019-06-12 00:38:40,130 [myid:3] - INFO [/0.0.0.0:3888:QuorumCnxManager$Listener@888] - Received connection request /x.x.x.x:33338\r\n2019-06-12 00:38:40,131 [myid:3] - WARN [RecvWorker:3:QuorumCnxManager$RecvWorker@1179] - Interrupting SendWorker\r\n2019-06-12 00:38:40,131 [myid:3] - WARN [SendWorker:3:QuorumCnxManager$SendWorker@1092] - Interrupted while waiting for message on queue\r\njava.lang.InterruptedException\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088)\r\nat java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:418)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:1243)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.access$700(QuorumCnxManager.java:78)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:1080)\r\n2019-06-12 00:38:40,136 [myid:3] - WARN [SendWorker:3:QuorumCnxManager$SendWorker@1102] - Send worker leaving thread id 3 my id = 3\r\n2019-06-12 00:38:40,146 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2c0000232e (n.zxid), 0x2 (n.round), LOOKING (n.state), 3 (n.sid), 0x2c (n.peerEPoch), LEADING (my state)0 (n.config version)\r\n2019-06-12 00:38:40,146 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2c0000232e (n.zxid), 0x2 (n.round), LEADING (n.state), 3 (n.sid), 0x2d (n.peerEPoch), LEADING (my state)0 (n.config version)\r\n2019-06-12 00:39:31,783 [myid:3] - INFO [/0.0.0.0:3888:QuorumCnxManager$Listener@888] - Received connection request /x.x.x.x:42022\r\n2019-06-12 00:39:31,789 [myid:3] - WARN [RecvWorker:1:QuorumCnxManager$RecvWorker@1176] - Connection broken for id 1, my id = 3, error =\r\njava.net.SocketException: Socket closed\r\nat java.net.SocketInputStream.socketRead0(Native Method)\r\nat java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\r\nat java.net.SocketInputStream.read(SocketInputStream.java:171)\r\nat java.net.SocketInputStream.read(SocketInputStream.java:141)\r\nat java.io.BufferedInputStream.fill(BufferedInputStream.java:246)\r\nat java.io.BufferedInputStream.read(BufferedInputStream.java:265)\r\nat java.io.DataInputStream.readInt(DataInputStream.java:387)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:1161)\r\n2019-06-12 00:39:31,789 [myid:3] - WARN [RecvWorker:1:QuorumCnxManager$RecvWorker@1179] - Interrupting SendWorker\r\n2019-06-12 00:39:31,789 [myid:3] - WARN [SendWorker:1:QuorumCnxManager$SendWorker@1092] - Interrupted while waiting for message on queue\r\njava.lang.InterruptedException\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088)\r\nat java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:418)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:1243)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.access$700(QuorumCnxManager.java:78)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:1080)\r\n2019-06-12 00:39:31,789 [myid:3] - WARN [SendWorker:1:QuorumCnxManager$SendWorker@1102] - Send worker leaving thread id 1 my id = 3\r\n2019-06-12 00:39:31,789 [myid:3] - WARN [RecvWorker:3:QuorumCnxManager$RecvWorker@1176] - Connection broken for id 3, my id = 3, error =\r\njava.io.EOFException\r\nat java.io.DataInputStream.readInt(DataInputStream.java:392)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$RecvWorker.run(QuorumCnxManager.java:1161)\r\n2019-06-12 00:39:31,791 [myid:3] - WARN [RecvWorker:3:QuorumCnxManager$RecvWorker@1179] - Interrupting SendWorker\r\n2019-06-12 00:39:31,790 [myid:3] - INFO [/0.0.0.0:3888:QuorumCnxManager$Listener@888] - Received connection request /x.x.x.x:33348\r\n2019-06-12 00:39:31,792 [myid:3] - WARN [SendWorker:3:QuorumCnxManager$SendWorker@1092] - Interrupted while waiting for message on queue\r\njava.lang.InterruptedException\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)\r\nat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2088)\r\nat java.util.concurrent.ArrayBlockingQueue.poll(ArrayBlockingQueue.java:418)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.pollSendQueue(QuorumCnxManager.java:1243)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager.access$700(QuorumCnxManager.java:78)\r\nat org.apache.zookeeper.server.quorum.QuorumCnxManager$SendWorker.run(QuorumCnxManager.java:1080)\r\n2019-06-12 00:39:31,794 [myid:3] - WARN [SendWorker:3:QuorumCnxManager$SendWorker@1102] - Send worker leaving thread id 3 my id = 3\r\n2019-06-12 00:39:31,984 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2c0000232e (n.zxid), 0x2 (n.round), LOOKING (n.state), 3 (n.sid), 0x2c (n.peerEPoch), LEADING (my state)0 (n.config version)\r\n2019-06-12 00:39:31,984 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2c0000232e (n.zxid), 0x2 (n.round), LEADING (n.state), 3 (n.sid), 0x2d (n.peerEPoch), LEADING (my state)0 (n.config version)\r\nsetting dataDir=/mnt/zk_data\r\nsetting dataLogDir=/mnt/zk_data_log\r\nsetting server.1=node1:2888:3888\r\nsetting server.2=node2:2888:3888\r\nsetting server.3=0.0.0.0:2888:3888\r\necho 3 > /mnt/zk_data/myid\r\nsetting ZOO_LOG4J_PROP=INFO,CONSOLE\r\nZooKeeper JMX enabled by default\r\nUsing config: /opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../conf/zoo.cfg\r\nJun 12, 2019 00:39:54 +0000 [1 1] com.newrelic INFO: New Relic Agent: Loading configuration file \"/opt/zookeeper-cluster/newrelic/./newrelic.yml\"\r\nJun 12, 2019 00:39:54 +0000 [1 1] com.newrelic INFO: Using default collector host: collector.newrelic.com\r\nJun 12, 2019 00:39:55 +0000 [1 1] com.newrelic INFO: New Relic Agent: Writing to log file: /opt/zookeeper-cluster/newrelic/logs/newrelic_agent.log\r\n2019-06-12 00:40:06,610 [myid:] - INFO [main:QuorumPeerConfig@133] - Reading configuration from: /opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../conf/zoo.cfg\r\n2019-06-12 00:40:06,627 [myid:] - INFO [main:QuorumPeerConfig@385] - clientPortAddress is 0.0.0.0/0.0.0.0:2181\r\n2019-06-12 00:40:06,627 [myid:] - INFO [main:QuorumPeerConfig@389] - secureClientPort is not set\r\n2019-06-12 00:40:06,879 [myid:3] - INFO [main:DatadirCleanupManager@78] - autopurge.snapRetainCount set to 3\r\n2019-06-12 00:40:06,880 [myid:3] - INFO [main:DatadirCleanupManager@79] - autopurge.purgeInterval set to 0\r\n2019-06-12 00:40:06,892 [myid:3] - INFO [main:DatadirCleanupManager@101] - Purge task is not scheduled.\r\n2019-06-12 00:40:06,893 [myid:3] - INFO [main:ManagedUtil@46] - Log4j found with jmx enabled.\r\n2019-06-12 00:40:06,967 [myid:3] - INFO [main:QuorumPeerMain@141] - Starting quorum peer\r\n2019-06-12 00:40:07,020 [myid:3] - INFO [main:ServerCnxnFactory@135] - Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory\r\n2019-06-12 00:40:07,041 [myid:3] - INFO [main:NIOServerCnxnFactory@673] - Configuring NIO connection handler with 10s sessionless connection timeout, 1 selector thread(s), 4 worker threads, and 64 kB direct buffers.\r\n2019-06-12 00:40:07,060 [myid:3] - INFO [main:NIOServerCnxnFactory@686] - binding to port 0.0.0.0/0.0.0.0:2181\r\n2019-06-12 00:40:07,407 [myid:3] - INFO [main:Log@193] - Logging initialized @14548ms to org.eclipse.jetty.util.log.Slf4jLog\r\n2019-06-12 00:40:07,864 [myid:3] - WARN [main:ContextHandler@1588] - o.e.j.s.ServletContextHandler@360bc645{/,null,UNAVAILABLE} contextPath ends with /*\r\n2019-06-12 00:40:07,864 [myid:3] - WARN [main:ContextHandler@1599] - Empty contextPath\r\n2019-06-12 00:40:08,096 [myid:3] - INFO [main:X509Util@79] - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation\r\n2019-06-12 00:40:08,117 [myid:3] - INFO [main:QuorumPeer@1488] - Local sessions disabled\r\n2019-06-12 00:40:08,119 [myid:3] - INFO [main:QuorumPeer@1499] - Local session upgrading disabled\r\n2019-06-12 00:40:08,119 [myid:3] - INFO [main:QuorumPeer@1466] - tickTime set to 2000\r\n2019-06-12 00:40:08,119 [myid:3] - INFO [main:QuorumPeer@1510] - minSessionTimeout set to 4000\r\n2019-06-12 00:40:08,119 [myid:3] - INFO [main:QuorumPeer@1521] - maxSessionTimeout set to 40000\r\n2019-06-12 00:40:08,119 [myid:3] - INFO [main:QuorumPeer@1536] - initLimit set to 10\r\n2019-06-12 00:40:08,140 [myid:3] - INFO [main:ZKDatabase@117] - zookeeper.snapshotSizeFactor = 0.33\r\n2019-06-12 00:40:08,158 [myid:3] - INFO [main:QuorumPeer@1781] - Using insecure (non-TLS) quorum communication\r\n2019-06-12 00:40:08,158 [myid:3] - INFO [main:QuorumPeer@1787] - Port unification disabled\r\n2019-06-12 00:40:08,158 [myid:3] - INFO [main:QuorumPeer@2154] - QuorumPeer communication is not secured! (SASL auth disabled)\r\n2019-06-12 00:40:08,158 [myid:3] - INFO [main:QuorumPeer@2183] - quorum.cnxn.threads.size set to 20\r\n2019-06-12 00:40:08,165 [myid:3] - INFO [main:FileSnap@83] - Reading snapshot /mnt/zk_data/version-2/snapshot.2c0000232e\r\n2019-06-12 00:40:08,602 [myid:3] - WARN [NIOWorkerThread-1:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:08,613 [myid:3] - INFO [main:Server@370] - jetty-9.4.17.v20190418; built: 2019-04-18T19:45:35.259Z; git: aa1c656c315c011c01e7b21aabb04066635b9f67; jvm 1.8.0_212-b04\r\n2019-06-12 00:40:08,618 [myid:3] - WARN [NIOWorkerThread-2:NIOServerCnxn@370] - Exception causing close of session 0x0: ZooKeeperServer not running\r\n2019-06-12 00:40:08,746 [myid:3] - INFO [main:DefaultSessionIdManager@365] - DefaultSessionIdManager workerName=node0\r\n2019-06-12 00:40:08,746 [myid:3] - INFO [main:DefaultSessionIdManager@370] - No SessionScavenger set, using defaults\r\n2019-06-12 00:40:08,754 [myid:3] - INFO [main:HouseKeeper@149] - node0 Scavenging every 660000ms\r\n2019-06-12 00:40:08,907 [myid:3] - INFO [main:ContextHandler@855] - Started o.e.j.s.ServletContextHandler@360bc645{/,null,AVAILABLE}\r\n2019-06-12 00:40:08,936 [myid:3] - INFO [main:AbstractConnector@292] - Started ServerConnector@7afb1741{HTTP/1.1,[http/1.1]}{0.0.0.0:8080}\r\n2019-06-12 00:40:08,936 [myid:3] - INFO [main:Server@410] - Started @16078ms\r\n2019-06-12 00:40:08,936 [myid:3] - INFO [main:JettyAdminServer@112] - Started AdminServer on address 0.0.0.0, port 8080 and command URL /commands\r\n2019-06-12 00:40:08,952 [myid:3] - INFO [QuorumPeerListener:QuorumCnxManager$Listener@881] - My election bind port: /0.0.0.0:3888\r\n2019-06-12 00:40:09,011 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):QuorumPeer@1193] - LOOKING\r\n2019-06-12 00:40:09,014 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):FastLeaderElection@885] - New election. My id = 3, proposed zxid=0x2d000022ce\r\n2019-06-12 00:40:09,046 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x1 (n.round), LOOKING (n.state), 3 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,276 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 2 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 2 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,277 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 1 (n.leader), 0x2c0000232e (n.zxid), 0x1 (n.round), LOOKING (n.state), 1 (n.sid), 0x2c (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,277 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):FastLeaderElection@919] - Notification time out: 400\r\n2019-06-12 00:40:09,281 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x1 (n.round), LOOKING (n.state), 3 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,281 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 3 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,282 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 3 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,458 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x1 (n.round), LOOKING (n.state), 1 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,463 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 1 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,470 [myid:3] - INFO [WorkerReceiver[myid=3]:FastLeaderElection@679] - Notification: 2 (message format version), 3 (n.leader), 0x2d000022ce (n.zxid), 0x3 (n.round), LOOKING (n.state), 2 (n.sid), 0x2d (n.peerEPoch), LOOKING (my state)0 (n.config version)\r\n2019-06-12 00:40:09,671 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):QuorumPeer@1281] - LEADING\r\n2019-06-12 00:40:09,676 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Leader@66] - TCP NoDelay set to: true\r\n2019-06-12 00:40:09,676 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Leader@86] - zookeeper.leader.maxConcurrentSnapshots = 10\r\n2019-06-12 00:40:09,676 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Leader@88] - zookeeper.leader.maxConcurrentSnapshotTimeout = 5\r\n2019-06-12 00:40:09,712 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:zookeeper.version=3.5.5-390fe37ea45dee01bf87dc1c042b5e3dcce88653, built on 05/03/2019 12:07 GMT\r\n2019-06-12 00:40:09,712 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:host.name=zookeeper_node_3\r\n2019-06-12 00:40:09,712 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.version=1.8.0_212\r\n2019-06-12 00:40:09,713 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.vendor=Oracle Corporation\r\n2019-06-12 00:40:09,713 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.home=/usr/local/openjdk-8\r\n2019-06-12 00:40:09,713 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.class.path=/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../zookeeper-server/target/classes:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../build/classes:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../zookeeper-server/target/lib/*.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../build/lib/*.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/zookeeper-jute-3.5.5.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/zookeeper-3.5.5.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/slf4j-log4j12-1.7.25.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/slf4j-api-1.7.25.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/netty-all-4.1.29.Final.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/log4j-1.2.17.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/json-simple-1.1.1.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jline-2.11.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jetty-util-9.4.17.v20190418.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jetty-servlet-9.4.17.v20190418.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jetty-server-9.4.17.v20190418.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jetty-security-9.4.17.v20190418.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jetty-io-9.4.17.v20190418.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jetty-http-9.4.17.v20190418.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/javax.servlet-api-3.1.0.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jackson-databind-2.9.8.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jackson-core-2.9.8.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/jackson-annotations-2.9.0.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/commons-cli-1.2.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../lib/audience-annotations-0.5.0.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../zookeeper-*.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../zookeeper-server/src/main/resources/lib/*.jar:/opt/zookeeper-cluster/apache-zookeeper-3.5.5-bin/bin/../conf::/opt/zookeeper-cluster/newrelic/newrelic.jar\r\n2019-06-12 00:40:09,713 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib\r\n2019-06-12 00:40:09,713 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.io.tmpdir=/tmp\r\n2019-06-12 00:40:09,713 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:java.compiler=<NA>\r\n2019-06-12 00:40:09,713 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:os.name=Linux\r\n2019-06-12 00:40:09,713 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:os.arch=amd64\r\n2019-06-12 00:40:09,713 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:os.version=3.10.0-693.21.1.el7.x86_64\r\n2019-06-12 00:40:09,722 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:user.name=root\r\n2019-06-12 00:40:09,723 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:user.home=/root\r\n2019-06-12 00:40:09,723 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:user.dir=/\r\n2019-06-12 00:40:09,723 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:os.memory.free=106MB\r\n2019-06-12 00:40:09,723 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:os.memory.max=889MB\r\n2019-06-12 00:40:09,723 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Environment@109] - Server environment:os.memory.total=253MB\r\n2019-06-12 00:40:09,734 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):ZooKeeperServer@938] - minSessionTimeout set to 4000\r\n2019-06-12 00:40:09,735 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):ZooKeeperServer@947] - maxSessionTimeout set to 40000\r\n2019-06-12 00:40:09,736 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):ZooKeeperServer@166] - Created server with tickTime 2000 minSessionTimeout 4000 maxSessionTimeout 40000 datadir /mnt/zk_data_log/version-2 snapdir /mnt/zk_data/version-2\r\n2019-06-12 00:40:09,743 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Leader@464] - LEADING - LEADER ELECTION TOOK - 72 MS\r\n2019-06-12 00:40:09,750 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):FileTxnSnapLog@372] - Snapshotting: 0x2d000022ce to /mnt/zk_data/version-2/snapshot.2d000022ce\r\n2019-06-12 00:40:09,904 [myid:3] - INFO [LearnerHandler-/x.x.x.x:42794:LearnerHandler@406] - Follower sid: 2 : info : node2:2888:3888:participant\r\n2019-06-12 00:40:09,943 [myid:3] - INFO [LearnerHandler-/x.x.x.x:42794:ZKDatabase@295] - On disk txn sync enabled with snapshotSizeFactor 0.33\r\n2019-06-12 00:40:09,944 [myid:3] - INFO [LearnerHandler-/x.x.x.x:42794:LearnerHandler@708] - Synchronizing with Follower sid: 2 maxCommittedLog=0x2d000022ce minCommittedLog=0x2d000020da lastProcessedZxid=0x2d000022ce peerLastZxid=0x2d000022ce\r\n2019-06-12 00:40:09,944 [myid:3] - INFO [LearnerHandler-/x.x.x.x:42794:LearnerHandler@752] - Sending DIFF zxid=0x2d000022ce for peer sid: 2\r\n2019-06-12 00:40:09,955 [myid:3] - INFO [LearnerHandler-/x.x.x.x:48552:LearnerHandler@406] - Follower sid: 1 : info : node1:2888:3888:participant\r\n2019-06-12 00:40:09,967 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):Leader@1296] - Have quorum of supporters, sids: [ [2, 3],[2, 3] ]; starting up and setting last processed zxid: 0x2e00000000\r\n2019-06-12 00:40:09,989 [myid:3] - INFO [LearnerHandler-/x.x.x.x:48552:ZKDatabase@295] - On disk txn sync enabled with snapshotSizeFactor 0.33\r\n2019-06-12 00:40:09,989 [myid:3] - INFO [LearnerHandler-/x.x.x.x:48552:LearnerHandler@708] - Synchronizing with Follower sid: 1 maxCommittedLog=0x2d000022ce minCommittedLog=0x2d000020da lastProcessedZxid=0x2d000022ce peerLastZxid=0x2c0000232e\r\n2019-06-12 00:40:09,992 [myid:3] - INFO [LearnerHandler-/x.x.x.x:48552:LearnerHandler@784] - Use txnlog and committedLog for peer sid: 1\r\n2019-06-12 00:40:09,994 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):CommitProcessor@256] - Configuring CommitProcessor with 2 worker threads.\r\n2019-06-12 00:40:10,072 [myid:3] - INFO [QuorumPeer[myid=3](plain=/0.0.0.0:2181)(secure=disabled):ContainerManager@64] - Using checkIntervalMs=60000 maxPerMinute=10000\r\n2019-06-12 00:40:10,077 [myid:3] - INFO [LearnerHandler-/x.x.x.x:48552:LearnerHandler@859] - Sending DIFF zxid=0x2d000022ce for peer sid: 1\r\n\r\n{code}", "I deployed the 3.5.5 in our Test-Environment after it was running fine in Dev, but there it went crazy... Was not able to update Kafka without the mentioned errors and manually restarting some Zookeeper-leaders.\r\n\r\nSo this Sunday I changed back to 3.4.14 which is running fine without the problem...\r\n\r\nIt's a bit strange that it's running fine in Dev, which is also 3 node Kafka-cluster with 3 Zookeepers.... Test just adds some mirroring to another site with 3 node-cluster in each location, but as this is more related to Kafka it shouldn't have any impact on the Zookeepers. The errors happen in both sites for the zookeepers during an update of the cluster which re-deploys the Docker-Images... Of course all the images are from same repo with same tags...\r\n\r\nJust tell me what you need and I can send log-files, configuration etc.", "I see this behavior at 3.4.14 as well. Restart the leader solves the issue", "We use 3.4.5 and deployed in AWS ec2, we see this issue when ever a server with smaller ID replaced with different IP address, if we reuse the IP address we don't see this issue.", "This issue may be related toZOOKEEPER-2164, not yet fixed in an official version, but done in github for incoming versions[3.7.0|https://issues.apache.org/jira/issues/?jql=project+%3D+ZOOKEEPER+AND+fixVersion+%3D+3.7.0],[3.6.1|https://issues.apache.org/jira/issues/?jql=project+%3D+ZOOKEEPER+AND+fixVersion+%3D+3.6.1],[3.5.8|https://issues.apache.org/jira/issues/?jql=project+%3D+ZOOKEEPER+AND+fixVersion+%3D+3.5.8].\r\n\r\nI got the same issue, and updating to a 3.6.1-SNAPSHOT version fixed it (just built today from 3.6 branch).", "Encountered this in 3.4.14 as well - no chance to have the fix added to any of the 3.4 versions?\r\n\r\nI cannot move to 3.5.5 or later in our prod environment, because of the HA breaking bughttps://issues.apache.org/jira/browse/ZOOKEEPER-3828. Hoping a fix for one of these to be available soon.", "We use 3.4.6 and deployed in aliyun vpc ecs, we see this issue server is unable to join quorum.\r\n\r\nzookeeper version: 3.4.6\r\n\r\njdk version:jdk1.8.0_60\r\n\r\nThere is an error for server 1, which can explains maybe the problem\r\n{code:java}\r\n// code placeholder\r\n2019-02-01 12:21:36,415[myid:1]- INFO[main:FileSnap@83]- Reading snapshot /alidata1/admin/data/zookeeper/version-2/snapshot.e009c148d\r\n2019-02-01 12:21:37,695[myid:1]- INFO[Thread-2:QuorumCnxManager$Listener@504]- My election bind port: /10.139.98.126:3888\r\n2019-02-01 12:21:37,707[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumPeer@714] - LOOKING\r\n2019-02-01 12:21:37,710[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:FastLeaderElection@815] - New election. My id = 1, proposed zxid=0xe009c7817\r\n2019-02-01 12:21:37,716[myid:1]- INFO [WorkerReceiver[myid=1]:FastLeaderElection@597] - Notification: 1 (message format version), 1 (n.leader), 0xe009c7817 (n.zxid), 0x1 (n.round), LOOKING (n.state), 1 (n.sid), 0xe (n.peerEpoch) LOOKING (my state)\r\n2019-02-01 12:21:37,720[myid:1]- INFO [WorkerSender[myid=1]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-02-01 12:21:37,723[myid:1]- INFO [WorkerSender[myid=1]:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-02-01 12:21:37,920[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-02-01 12:21:37,922[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-02-01 12:21:37,922[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:FastLeaderElection@849] - Notification time out: 400\r\n2019-02-01 12:21:38,325[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-02-01 12:21:38,327[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-02-01 12:21:38,332[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:FastLeaderElection@849] - Notification time out: 800\r\n2019-02-01 12:21:39,134[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-02-01 12:21:39,136[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-02-01 12:21:39,136[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:FastLeaderElection@849] - Notification time out: 1600\r\n2019-02-01 12:21:40,739[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-02-01 12:21:40,742[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-02-01 12:21:40,743[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:FastLeaderElection@849] - Notification time out: 3200\r\n2019-02-01 12:21:43,946[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-02-01 12:21:43,948[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-02-01 12:21:43,949[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:FastLeaderElection@849] - Notification time out: 6400\r\n2019-02-01 12:21:50,351[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-02-01 12:21:50,353[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-02-01 12:21:50,354[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:FastLeaderElection@849] - Notification time out: 12800\r\n2019-02-01 12:22:03,156[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-02-01 12:22:03,159[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-02-01 12:22:03,159[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:FastLeaderElection@849] - Notification time out: 25600\r\n2019-02-01 12:22:24,202[myid:1]- INFO[NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@197]- Accepted socket connection from /127.0.0.1:53713\r\n2019-02-01 12:22:24,211[myid:1]- INFO[NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@827]- Processing srvr command from /127.0.0.1:53713\r\n2019-02-01 12:22:24,214[myid:1]- INFO[Thread-3:NIOServerCnxn@1007]- Closed socket connection for client /127.0.0.1:53713 (no session established for client)\r\n2019-02-01 12:22:28,763[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (2, 1)\r\n2019-02-01 12:22:28,766[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:QuorumCnxManager@193] - Have smaller server identifier, so dropping the connection: (3, 1)\r\n2019-02-01 12:22:28,766[myid:1]- INFO [QuorumPeer[myid=1]/0.0.0.0:2181:FastLeaderElection@849] - Notification time out: 51200\r\n2019-02-01 12:22:36,573[myid:1]- INFO[NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@197]- Accepted socket connection from /127.0.0.1:53723\r\n{code}\r\n", "I am having the same issue on a Confluent Kafka helm chart deployment on Kubernetes. 3 ZK nodes, show the same backtraces, and as a result, Kafka nodes cannot come up.\r\n\r\n", "[~samuelan86]have you tried to specifically restart the leader node?", "[~RAbreu], I double checked. My problem happens most likely due to my Kube cluster's network security. By default, communication between pods are denied. I will try set up proper network policy and retry and update this Jira if finding otherwise.", "Not sure whether this issue is being progressed, but we also recently hit on a similar problem. Investigated and found that this only happens when the zookeeper ensemble is deployed across the same nodes as the broker cluster. Isolating the zookeeper ensemble from the broker cluster i.e different nodes for ensemble and cluster results in expected behaviour.\r\n\r\nHope this helps to progress the investigation.", "[~edwiny] Could you please explain more what you mean \"when the zookeeper ensemble is deployed across the same nodes as the broker cluster\".\r\n\r\nDo you mean that this happens when kafka and zookeeper nodes are on the same VM ?", "[~samuelan86] [~edwiny] [~Nizar] Everyone has this problem when rejoining the cluster with different ips using the same id?\r\n\r\nI have this problem in my k8s cluster, because the k8s pod will be assigned a new ip after restarting", "Anybody know in what zookeeper version was resolved? Thanks!", "I've had the same problem and I've noticed that it was happening when all 3 ZK nodes had following:\r\n\r\n* config\r\n{code}\r\nserver.1=my-zk-1:1234:5678\r\nserver.2=my-zk-2:1234:5678\r\nserver.3=my-zk-3:1234:5678\r\n{code}\r\n\r\nBut when I changed to following:\r\n\r\n* config on *my-zk-1*\r\n{code}\r\nserver.1=0.0.0.0:1234:5678\r\nserver.2=my-zk-2:1234:5678\r\nserver.3=my-zk-3:1234:5678\r\n{code}\r\n* config on *my-zk-2*\r\n{code}\r\nserver.1=my-zk-1:1234:5678\r\nserver.2=0.0.0.0:1234:5678\r\nserver.3=my-zk-3:1234:5678\r\n{code}\r\n* config on *my-zk-3*\r\n{code}\r\nserver.1=my-zk-1:1234:5678\r\nserver.2=my-zk-2:1234:5678\r\nserver.3=0.0.0.0:1234:5678\r\n{code}\r\n\r\nThen, after restart of *my-zk-1* it had the\r\n{code}\r\nHave smaller server identifier, so dropping the connection\r\n{code}\r\ntwice, but then it received connection requests from other two nodes and continued working normally\r\n", "Thanks [~atomac], your fix worked for our Zookeeper", "Is the check for myid there so that ZK ensures that it's always the larger ID initiating a connection with the smaller id?\r\n\r\nI was a bit confused why that check exists there at all - it seems like a smaller ID node can never initiate a connection to a bigger ID node itself?\r\n\r\nTherefore, I have to assume that something is causing the larger ID to NOT connect to the smaller ID upon restart\r\n\r\n", "I hit this issue on a client site where quorum formation was hit and miss, so I had a look through the code.\r\n\r\nThe Peers try to ensure that they only have one connection between any pair of servers in the peer group to manage the quorum formation, and they do this by dropping the connection when the server that initiates the connection finds that the server it has connected to has a higher zkid. If the server that initiates the connection finds that it has a higher zkid then it maintains the connection. That's where we get:\r\nHave smaller server identifier, so dropping the connection:\r\nThis is expected behaviour. The problem is actually that the server with the higher zkid fails to sustain a connection to the server that is emitting this error.\r\n\r\nAs part of resolving the peer list for the quorum, each node scans the initial configuration and if it notices that the ID of the server it reads from the config is its own zkid, it stores its own hostname(s). It seems this was done as part ofhttps://issues.apache.org/jira/browse/ZOOKEEPER-107 to allow a server to discover its own hostname(s) and communicate them to the other nodes to allow for dynamic reconfiguration.\r\n\r\nSo, when the quorum manager initiates a connection to a peer, in sends its hostnames to that peer. ([here|https://github.com/apache/zookeeper/blob/15f29b51a22bc51b9d6074cb7f3e72bb00a9753a/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L466])\r\n\r\nWhen a quorum manager successfully _receives_ a connection from a peer and it has a higher zkid than the server it has received a connection from it _immediately_ initiates a connection back to the sender, using the zkid and hostname(s) sent in the sender's initial connection. If this all happens as the receiving server is starting up, it will interfere with that server's attempts to connect to other servers using its initial configuration because the quorum manager won't attempt to connect to another server if it's already attempting to connect to a server with that same zkid. ([here|https://github.com/apache/zookeeper/blob/15f29b51a22bc51b9d6074cb7f3e72bb00a9753a/zookeeper-server/src/main/java/org/apache/zookeeper/server/quorum/QuorumCnxManager.java#L597])\r\n\r\nIn an environment where the hostname that a Zookeeper server discovers for itself is different from the hostname other servers use to discover it, eg when your ensemble spans multiple Kubernetes clusters, the hostname that a node discovers for itself might not be suitable for other nodes to try and resolve. If the node discovers its hostname is {{{}zookeeper1.zookeeper.zookeeper-us-east-dc.svc.cluster.local{}}}, it can pass that on to other nodes in the ensemble who may then fail to connect because they're in a different Kubernetes cluster.\r\n\r\nSetting the hostname to \"{{{}0.0.0.0{}}}\" works because Zookeeper can bind to that IP address, but there is no hostname to pass on to other servers. Or more technically, it passes its hostname as {{null}} to other servers which then handle the {{null}} address by using the address they already have in their configuration.\r\n\r\n"]}, {"Issue key": "ZOOKEEPER-2937", "Request type": "Bug", "Datetime creation": "2017-11-08 16:30:58", "Datetime resolution": null, "Reporter login": "sriramch", "Reporter name": "Sriram Chandramouli", "Assignee login": null, "Assignee name": null, "Status": "Patch Available", "Description": "we have created an authentication provider plugin that can authenticate clients based on the cert that client is presenting. our zookeeper instance has been configured (and started) to authenticate and allow only certain appid's. this works as intended when clients (ours are c-clients) send an auth message via yca_add_auth containing the cert *and* the authentication provider is configured to allow it.\r\n\r\nhowever, if the clients do *not* present one (i.e. do not send an auth packet), and if the authentication provider allows only certain appid's, this connection still goes through - i.e. clients are able to connect, create/watch nodes etc.! this is unexpected and does *not* allow us to prevent certain clients from connecting to a zookeeper quorum (as they can still connect without present any credentials). \r\n\r\nit looks like zookeeper will only invoke the auth providers if it receives an auth packet from the client.\r\n\r\nnone of this block - https://github.com/sriramch/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java#L1060\r\n\r\never gets executed, and it directly jumps to this \r\n\r\nhttps://github.com/sriramch/zookeeper/blob/master/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java#L1108\r\n\r\nwe have a usecase where we only want clients that can present valid credentials to connect to zookeeper (zk). \r\n\r\ni was hoping to expose an interface where different auth providers (when they are loaded)  would let zk know if they need to authenticate a client before processing other data packets. the default ones (kerberos/ip/digest etc.) would say no to maintain compatibility. our auth provider can be configured to say yes/no (default no) depending on use-case. zk before processing a data packet can look at the auth info in the server connection to see the schemes that requires authentication and have successfully authenticated. connection will succeed if all schemes that require authentication have successfully authenticated; else, we disable receive.\r\n\r\ncan someone please look into this issue and evaluate the proposal? i can work on creating a pr for this.", "Comments": ["this is a patch set on 3.4.6 version. this issue seems to exist in the latest version (master) too.\r\n\r\n{{diff --git a/apache_release/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java b/apache_release/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java\r\nindex c1812c4..dddf976 100644\r\n--- a/apache_release/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java\r\n+++ b/apache_release/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java\r\n@@ -30,6 +30,8 @@ import java.util.HashMap;\r\n import java.util.LinkedList;\r\n import java.util.List;\r\n import java.util.Random;\r\n+import java.util.SortedSet;\r\n+import java.util.TreeSet;\r\n\r\n import javax.security.sasl.SaslException;\r\n\r\n@@ -936,8 +938,30 @@ public class ZooKeeperServer implements SessionExpirer, ServerStats.Provider {\r\n                 cnxn.sendResponse(rh,rsp, \"response\"); // not sure about 3rd arg..what is it?\r\n             }\r\n             else {\r\n+                List<Id> authInfo = cnxn.getAuthInfo();\r\n+                // Iterate over auth info and create this\r\n+                SortedSet<String> providedAuthSchemes = new TreeSet<String>();\r\n+                for (Id authid : authInfo) {\r\n+                    providedAuthSchemes.add(authid.getScheme());\r\n+                }\r\n+\r\n+                SortedSet<String> neededAuthSchemes =\r\n+                    ProviderRegistry.getSchemesRequiringAuth();\r\n+                if (!providedAuthSchemes.containsAll(neededAuthSchemes)) {\r\n+                    // We got a data packet without completing the necessary\r\n+                    // authentication; so, nuke it!\r\n+                    LOG.warn(\"Missing required authentication; closing connection\");\r\n+                    ReplyHeader rh = new ReplyHeader(h.getXid(), 0,\r\n+                            KeeperException.Code.NOAUTH.intValue());\r\n+                    cnxn.sendResponse(rh, null, null);\r\n+                    // ... and close connection\r\n+                    cnxn.sendBuffer(ServerCnxnFactory.closeConn);\r\n+                    cnxn.disableRecv();\r\n+                    return;\r\n+                }\r\n+\r\n                 Request si = new Request(cnxn, cnxn.getSessionId(), h.getXid(),\r\n-                  h.getType(), incomingBuffer, cnxn.getAuthInfo());\r\n+                  h.getType(), incomingBuffer, authInfo);\r\n                 si.setOwner(ServerCnxn.me);\r\n                 submitRequest(si);\r\n             }\r\ndiff --git a/apache_release/src/java/main/org/apache/zookeeper/server/auth/AuthenticationProvider.java b/apache_release/src/java/main/org/apache/zookeeper/server/auth/AuthenticationProvider.java\r\nindex dd6e32f..3e1ff3a 100644\r\n--- a/apache_release/src/java/main/org/apache/zookeeper/server/auth/AuthenticationProvider.java\r\n+++ b/apache_release/src/java/main/org/apache/zookeeper/server/auth/AuthenticationProvider.java\r\n@@ -79,4 +79,13 @@ public interface AuthenticationProvider {\r\n      * @return true if id is well formed.\r\n      */\r\n     boolean isValid(String id);\r\n+\r\n+    /**\r\n+     * This method is used to check and see if the provider has to\r\n+     * authenticate the client before any requests from it can be processed.\r\n+     *\r\n+     * @return true if this provider needs to authenticate the client before\r\n+     * it can honor any requests from it\r\n+     */\r\n+    boolean needAuthentication();\r\n }\r\ndiff --git a/apache_release/src/java/main/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java b/apache_release/src/java/main/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java\r\nindex 2427e7a..c2805b4 100644\r\n--- a/apache_release/src/java/main/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java\r\n+++ b/apache_release/src/java/main/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java\r\n@@ -126,6 +126,10 @@ public class DigestAuthenticationProvider implements AuthenticationProvider {\r\n         return id.equals(aclExpr);\r\n     }\r\n\r\n+    public boolean needAuthentication() {\r\n+        return false;\r\n+    }\r\n+\r\n     /** Call with a single argument of user:pass to generate authdata.\r\n      * Authdata output can be used when setting superDigest for example.\r\n      * @param args single argument of user:pass\r\ndiff --git a/apache_release/src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java b/apache_release/src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java\r\nindex 192dc06..c48a8ba 100644\r\n--- a/apache_release/src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java\r\n+++ b/apache_release/src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java\r\n@@ -114,4 +114,8 @@ public class IPAuthenticationProvider implements AuthenticationProvider {\r\n     public boolean isValid(String id) {\r\n         return addr2Bytes(id) != null;\r\n     }\r\n+\r\n+    public boolean needAuthentication() {\r\n+        return false;\r\n+    }\r\n }\r\ndiff --git a/apache_release/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java b/apache_release/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java\r\nindex 406015f..e2df13c 100644\r\n--- a/apache_release/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java\r\n+++ b/apache_release/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java\r\n@@ -20,6 +20,9 @@ package org.apache.zookeeper.server.auth;\r\n\r\n import java.util.Enumeration;\r\n import java.util.HashMap;\r\n+import java.util.Collections;\r\n+import java.util.SortedSet;\r\n+import java.util.TreeSet;\r\n\r\n import org.slf4j.Logger;\r\n import org.slf4j.LoggerFactory;\r\n@@ -32,6 +35,9 @@ public class ProviderRegistry {\r\n     private static boolean initialized = false;\r\n     private static HashMap<String, AuthenticationProvider> authenticationProviders =\r\n         new HashMap<String, AuthenticationProvider>();\r\n+    // Set of authentication schemes that needs to see an auth packet from\r\n+    // the client before letting it transact with zookeeper\r\n+    private static TreeSet<String> schemesRequiringAuth = new TreeSet<String>();\r\n\r\n     public static void initialize() {\r\n         synchronized (ProviderRegistry.class) {\r\n@@ -41,6 +47,13 @@ public class ProviderRegistry {\r\n             DigestAuthenticationProvider digp = new DigestAuthenticationProvider();\r\n             authenticationProviders.put(ipp.getScheme(), ipp);\r\n             authenticationProviders.put(digp.getScheme(), digp);\r\n+\r\n+            if (ipp.needAuthentication()) {\r\n+                schemesRequiringAuth.add(ipp.getScheme());\r\n+            }\r\n+            if (digp.needAuthentication()) {\r\n+                schemesRequiringAuth.add(digp.getScheme());\r\n+            }\r\n             Enumeration<Object> en = System.getProperties().keys();\r\n             while (en.hasMoreElements()) {\r\n                 String k = (String) en.nextElement();\r\n@@ -52,6 +65,20 @@ public class ProviderRegistry {\r\n                         AuthenticationProvider ap = (AuthenticationProvider) c\r\n                                 .newInstance();\r\n                         authenticationProviders.put(ap.getScheme(), ap);\r\n+\r\n+                        // Check if the authentication provider supports the\r\n+                        // new interface\r\n+                        try {\r\n+                            ap.getClass().getDeclaredMethod(\"needAuthentication\");\r\n+                        }\r\n+                        catch (NoSuchMethodException e) {\r\n+                            LOG.warn(\"Provider for \" + ap.getScheme() +\r\n+                                     \" does not define needAuthentication\");\r\n+                            continue;\r\n+                        }\r\n+                        if (ap.needAuthentication()) {\r\n+                            schemesRequiringAuth.add(ap.getScheme());\r\n+                        }\r\n                     } catch (Exception e) {\r\n                         LOG.warn(\"Problems loading \" + className,e);\r\n                     }\r\n@@ -74,4 +101,10 @@ public class ProviderRegistry {\r\n }\r\n         return sb.toString();\r\n     }\r\n+\r\n+    public static SortedSet<String> getSchemesRequiringAuth() {\r\n+        if(!initialized)\r\n+            initialize();\r\n+        return Collections.unmodifiableSortedSet(schemesRequiringAuth);\r\n+    }\r\n }\r\ndiff --git a/apache_release/src/java/main/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java b/apache_release/src/java/main/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java\r\nindex 063304f..f098cf0 100644\r\n--- a/apache_release/src/java/main/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java\r\n+++ b/apache_release/src/java/main/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java\r\n@@ -66,5 +66,7 @@ public class SASLAuthenticationProvider implements AuthenticationProvider {\r\n         }\r\n    }\r\n\r\n-\r\n+   public boolean needAuthentication() {\r\n+        return false;\r\n+    }\r\n }\r\n}}", "GitHub user sriramch opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/418\n\n    [zookeeper-2937] disallow client requests without completing authentication...\n\n    - https://issues.apache.org/jira/browse/ZOOKEEPER-2937\r\n    - do not process data packets, if authentication via providers that\r\n      *requires* authentication aren't completed\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/sriramch/zookeeper master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/418.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #418\n    \n----\ncommit ed6986b83eea71e280976df78b13c44088915efa\nAuthor: Sriram Chandramouli <sriramch@csp0094.csp.corp.gq1.yahoo.com>\nDate:   2017-11-15T21:25:29Z\n\n    [zookeeper-2937]\n    \n    - https://issues.apache.org/jira/browse/ZOOKEEPER-2937\n    - do not process data packets, if authentication via providers that\n      *requires* authentication aren't completed\n\ncommit 2e2e4b5b4a57212da70e004c402711412b1d6f07\nAuthor: Sriram Chandramouli <sriramch@csp0094.csp.corp.gq1.yahoo.com>\nDate:   2017-11-16T02:54:29Z\n\n    - do the auth checks only once after connection establishment before\n      processing data packets\n\ncommit 74271caa44484b06b435e39cd5e22362bb2c73cf\nAuthor: Sriram Chandramouli <sriramch@csp0094.csp.corp.gq1.yahoo.com>\nDate:   2017-11-16T02:57:42Z\n\n    Merge branch 'master' of https://github.com/apache/zookeeper\n\n----\n"]}, {"Issue key": "ZOOKEEPER-2936", "Request type": "Bug", "Datetime creation": "2017-11-08 15:51:51", "Datetime resolution": "2018-03-02 22:13:48", "Reporter login": "harisekhon", "Reporter name": "Hari Sekhon", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "Recent versions of ZooKeeper have introduced the following duplicate keys in to the contrib log4j.properties files.\r\n\r\nIn this file:\r\n{code}\r\n./zookeeper-3.4.8/contrib/rest/conf/log4j.properties\r\n{code}\r\nand this file:\r\n{code}\r\n./zookeeper-3.4.8/src/contrib/rest/conf/log4j.properties\r\n{code}\r\n\r\nthe following duplicate keys are found:\r\n\r\n{code}\r\nlog4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\r\nlog4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\r\n{code}\r\n\r\nThis was discovered because I've written file validators for most major formats which recurse all my github repos and this was failing my integration tests when pulling ZooKeeper source code. I actually added --exclude and --ignore-duplicate-keys switches to {code}validate_ini.py{code} to work around this and fix my builds for now but just remembered to raise this to you guys.\r\n\r\nThe validator tools if you're interested can be found at:\r\n\r\nhttps://github.com/harisekhon/pytools\r\n\r\nCheers\r\n\r\nHari", "Comments": ["GitHub user asutosh936 opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/473\n\n    ZOOKEEPER-2936 - Removed duplicate code\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/asutosh936/zookeeper master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/473.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #473\n    \n----\ncommit a02ef3db8d18cc738a1a3e24eafcaa0b5379d297\nAuthor: asutosh936 <asutosh.pandya@...>\nDate:   2018-02-25T23:40:14Z\n\n    ZOOKEEPER-2936 - Removed duplicate code\n\n----\n", "[~harisekhon]\r\n\r\n\r\n\r\nHave created pull request for above issue: [https://github.com/apache/zookeeper/pull/473.]\r\n\r\nI am trying to attach the patch as well but unable to do that, also am not able to assign the issue to myself. Let me know if I need to send a patch through other digital medium.\r\n\r\nBest Regards,\r\n\r\nAsutosh\r\n\r\n", "Github user asutosh936 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/473\n  \n    Can someone please review and merge this PR.\n", "Github user asutosh936 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/473\n  \n    @anmolnar - Thanks for the Review.\r\n    \r\n    The issue is about having duplicate keys for ROLLINGFILE layout and conversion pattern. The fix is to remove the duplicate keys from the file. As rightly said there is no reason of commenting the code, instead deleting it. Please review.\n", "Github user asutosh936 commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/473\n  \n    @anmolnar - Could You or someone from Your team please merge this PR?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/473\n  \n    @afine please take a look, I think this is ready to commit. thanks.\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/473\n", "Issue resolved by pull request 473\n[https://github.com/apache/zookeeper/pull/473]", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/473\n  \n    Thanks @asutosh936!\n", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3747 (See [https://builds.apache.org/job/ZooKeeper-trunk/3747/])\nZOOKEEPER-2936: Removed duplicate code (afine: rev ecb1162ec7f381963fb3263c7971a85fc35b27c8)\n* (edit) src/contrib/rest/conf/log4j.properties\n"]}, {"Issue key": "ZOOKEEPER-2935", "Request type": "Sub-task", "Datetime creation": "2017-11-06 22:08:56", "Datetime resolution": "2017-11-27 23:11:47", "Reporter login": "abrahamfine", "Reporter name": "Abraham Fine", "Assignee login": "abrahamfine", "Assignee name": "Abraham Fine", "Status": "Resolved", "Description": null, "Comments": ["GitHub user afine opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/417\n\n    ZOOKEEPER-2935: [QP MutualAuth]: Port ZOOKEEPER-1045 implementation from branch-3.5 to trunk\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/afine/zookeeper ZOOKEEPER-2935\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/417.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #417\n    \n----\ncommit f211a512566b43375d76443392157b231e6ba9a1\nAuthor: Abraham Fine <abefine@cloudera.com>\nDate:   2017-11-06T22:48:36Z\n\n    init\n\n----\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1186//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1186//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1186//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1187//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1187//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1187//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to cause Findbugs (version 3.0.1) to fail.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1195//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1195//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1194//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1194//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1194//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1199//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1199//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1199//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1200//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1200//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1200//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1205//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1205//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1205//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to cause Findbugs (version 3.0.1) to fail.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1206//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1206//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1208//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1208//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1208//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1209//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1209//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1209//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1201//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1201//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1201//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1196//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1196//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1196//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1197//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1197//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1197//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1198//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1198//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1198//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1204//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1204//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1204//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1203//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1203//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1203//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1202//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1202//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1202//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1207//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1207//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1207//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1210//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1210//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1210//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 57 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1211//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1211//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1211//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/417\n  \n    Hi Abe. I started looking at this but noticed an issue right off the bat. This line is removed when I diff btw your patch applied to trunk and branch-3.5. Can you take a look through this again and verify? (obv fix this as well).\r\n    \r\n    ```\r\n         <property name=\"test.data.buffersize.dir\" value=\"${test.data.dir}/buffersize\" />\r\n    -    <property name=\"test.data.kerberos.dir\" value=\"${test.data.dir}/kerberos\" />\r\n         <property name=\"test.data.ssl.dir\" value=\"${test.data.dir}/ssl\" />\r\n    ```\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/417\n  \n    @phunt fixed!\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 58 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1294//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1294//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1294//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/417\n  \n    There's a debug log missing from 1045 in src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/417\n  \n    Reviewed this an aside from the noted issue it seems ok to me. Ran some tests and they are passing. I think we're good to go if you can get this one last item finalized.\n", "Github user rakeshadr commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/417#discussion_r153161187\n  \n    --- Diff: ivy.xml ---\n    @@ -90,6 +90,69 @@\n         <dependency org=\"org.owasp\" name=\"dependency-check-ant\"\n                     rev=\"${dependency-check-ant.version}\" conf=\"owasp->default\"/>\n     \n    +    <dependency org=\"commons-io\" name=\"commons-io\"\n    +                rev=\"${commons-io.version}\" conf=\"test->default\"/>\n    +\n    +      <dependency org=\"org.apache.kerby\" name=\"kerby-config\" rev=\"${kerby.version}\" conf=\"test->default\">\n    +          <exclude org=\"org.slf4j\" module=\"slf4j-api\"/>\n    --- End diff --\n    \n    Good work! Thanks @afine for your efforts. \r\n    Apart from @phunt comment, I've below observation.\r\n    \r\n    Should we need to exclude 'slf4j-api' and 'slf4j-log4j12' from all the kerb dependency, which is missing in branch-3.5. If needed then could you please raise a minor imprv task to correct in branch-3.5 and push it in together, that would syncup the code between branches.\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/417\n  \n    @phunt i believe all of your concerns are resolved.\r\n\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/417#discussion_r153334347\n  \n    --- Diff: ivy.xml ---\n    @@ -90,6 +90,69 @@\n         <dependency org=\"org.owasp\" name=\"dependency-check-ant\"\n                     rev=\"${dependency-check-ant.version}\" conf=\"owasp->default\"/>\n     \n    +    <dependency org=\"commons-io\" name=\"commons-io\"\n    +                rev=\"${commons-io.version}\" conf=\"test->default\"/>\n    +\n    +      <dependency org=\"org.apache.kerby\" name=\"kerby-config\" rev=\"${kerby.version}\" conf=\"test->default\">\n    +          <exclude org=\"org.slf4j\" module=\"slf4j-api\"/>\n    --- End diff --\n    \n    I reduced the number of excludes to the minimum that I think is necessary. Not sure why the ivy \"stict\" resolution change is not in 3.5. I'll investigate\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/417#discussion_r153334506\n  \n    --- Diff: ivy.xml ---\n    @@ -90,6 +90,69 @@\n         <dependency org=\"org.owasp\" name=\"dependency-check-ant\"\n                     rev=\"${dependency-check-ant.version}\" conf=\"owasp->default\"/>\n     \n    +    <dependency org=\"commons-io\" name=\"commons-io\"\n    +                rev=\"${commons-io.version}\" conf=\"test->default\"/>\n    +\n    +      <dependency org=\"org.apache.kerby\" name=\"kerby-config\" rev=\"${kerby.version}\" conf=\"test->default\">\n    +          <exclude org=\"org.slf4j\" module=\"slf4j-api\"/>\n    --- End diff --\n    \n    And create a jira to make the branches the same if necessary\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 58 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1313//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1313//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1313//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 58 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1312//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1312//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1312//console\n\nThis message is automatically generated.", "Issue resolved by pull request 417\n[https://github.com/apache/zookeeper/pull/417]", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/417\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/417\n  \n    lgtm +1 - Thanks Abe.\n", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3631 (See [https://builds.apache.org/job/ZooKeeper-trunk/3631/])\nZOOKEEPER-2935: [QP MutualAuth]: Port ZOOKEEPER-1045 implementation from (phunt: rev 75411ab34a3d53c43c2d508b12314a9788aa417d)\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/Leader.java\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/LearnerTest.java\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/LearnerHandlerTest.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/auth/MiniKdc.java\n* (edit) src/zookeeper.jute\n* (add) src/java/test/org/apache/zookeeper/server/quorum/auth/QuorumAuthTestBase.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/Observer.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java\n* (add) src/java/main/org/apache/zookeeper/server/quorum/auth/QuorumAuthLearner.java\n* (edit) src/java/main/org/apache/zookeeper/server/ServerCnxn.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/Follower.java\n* (add) src/java/main/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthServer.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/auth/QuorumKerberosAuthTest.java\n* (edit) build.xml\n* (edit) src/java/main/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java\n* (edit) src/java/main/org/apache/zookeeper/client/ZooKeeperSaslClient.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/Learner.java\n* (add) src/java/main/org/apache/zookeeper/server/quorum/auth/SaslQuorumAuthLearner.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/auth/KerberosSecurityTestcase.java\n* (add) src/java/main/org/apache/zookeeper/server/quorum/auth/SaslQuorumServerCallbackHandler.java\n* (edit) src/java/main/org/apache/zookeeper/Login.java\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java\n* (add) src/java/test/data/kerberos/minikdc.ldiff\n* (add) src/java/test/org/apache/zookeeper/server/quorum/auth/QuorumAuthUpgradeTest.java\n* (add) src/java/main/org/apache/zookeeper/server/quorum/auth/NullQuorumAuthLearner.java\n* (add) src/java/test/data/kerberos/minikdc-krb5.conf\n* (add) src/java/test/org/apache/zookeeper/server/quorum/auth/MiniKdcTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java\n* (add) src/java/main/org/apache/zookeeper/util/SecurityUtils.java\n* (edit) ivy.xml\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerTestBase.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/auth/QuorumDigestAuthTest.java\n* (add) src/java/main/org/apache/zookeeper/SaslClientCallbackHandler.java\n* (edit) src/java/test/org/apache/zookeeper/test/CnxManagerTest.java\n* (add) src/java/main/org/apache/zookeeper/server/quorum/auth/QuorumAuthServer.java\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/EphemeralNodeDeletionTest.java\n* (add) src/java/main/org/apache/zookeeper/server/quorum/auth/QuorumAuth.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/FLEBackwardElectionRoundTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java\n* (add) src/java/main/org/apache/zookeeper/server/quorum/auth/NullQuorumAuthServer.java\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/RaceConditionTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperSaslServer.java\n* (edit) src/java/test/org/apache/zookeeper/server/quorum/FLELostMessageTest.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/auth/QuorumKerberosHostBasedAuthTest.java\n* (edit) src/java/test/org/apache/zookeeper/test/FLEPredicateTest.java\n* (edit) src/java/test/config/findbugsExcludeFile.xml\n* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/auth/KerberosTestUtils.java\n"]}, {"Issue key": "ZOOKEEPER-2934", "Request type": "Bug", "Datetime creation": "2017-11-06 20:44:47", "Datetime resolution": "2017-11-15 22:19:08", "Reporter login": "abrahamfine", "Reporter name": "Abraham Fine", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Resolved", "Description": "I see errors like: \r\n{code}\r\n/var/zookeeper/src/recipes/queue/src/c/../../../../../src/c/include/zookeeper_log.h:39:74: error: expected expression before ')' token\r\n     log_message(_cb, ZOO_LOG_LEVEL_DEBUG, __LINE__, __func__, __VA_ARGS__)\r\n                                                                          ^\r\n{code}", "Comments": ["I've taken a look at other usages of LOG_DEBUG macro and it looks slightly different in the C client library.\r\n\r\n{code}\r\nsrc/c/src/zookeeper.c:    LOG_DEBUG(LOGCALLBACK(zh), \"Sending request xid=%#x for path [%s] to %s\",h.xid,path,\r\n{code}\r\n\r\nwheres in the recipe code:\r\n\r\n{code}\r\nsrc/recipes/queue/src/c/src/zoo_queue.c:        LOG_DEBUG((\"Error! Called await twice.\"));\r\n{code}\r\n\r\nI suspect that the macro has been changed recently and the recipe hasn't been updated. \r\nI'll take a closer look how to fix it later today.", "Caused by https://issues.apache.org/jira/browse/ZOOKEEPER-1400", "This problem exist in 'lock' recipe too.\r\n\r\nI'm going to create patch for both of them.", "GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/416\n\n    ZOOKEEPER-2934: Updated usage of LOG_DEBUG in recipes to follow changes in ZK client\n\n    LOG_DEBUG macro has been changed recently in https://issues.apache.org/jira/browse/ZOOKEEPER-1400\r\n    \r\n    This patch updates 'lock' and 'queue' recipes to follow the changes.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2934\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/416.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #416\n    \n----\ncommit 86dc7190aeda82ffb3cf32aaa45426294ab7395b\nAuthor: Andor Moln\u00e1r <andor@cloudera.com>\nDate:   2017-11-07T12:09:02Z\n\n    ZOOKEEPER-2934: Updated usage of LOG_DEBUG in recipes to follow changes in ZK client\n\n----\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1185//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1185//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1185//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/416\n  \n    I ran \"ant compile\" and \"ant test\" from the toplevel and it worked fine for me - passed.\r\n    \r\n    +1 - I'm committing, if I missed something we can followup with another jira. \r\n    \r\n    Thanks Andor!\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/416\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/416\n  \n    Ic - \"ant ..\" is only exercising the java code. NM. Still committing this, although it would be good to followup separately on Abe's comment.\n", "Issue resolved by pull request 416\n[https://github.com/apache/zookeeper/pull/416]", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3610 (See [https://builds.apache.org/job/ZooKeeper-trunk/3610/])\nZOOKEEPER-2934: Updated usage of LOG_DEBUG in recipes to follow changes (phunt: rev f6d2abf58adeda5a8c5da8192ea4a6549285e561)\n* (edit) src/recipes/queue/src/c/src/zoo_queue.c\n* (edit) src/recipes/queue/src/c/include/zoo_queue.h\n* (edit) src/recipes/lock/src/c/src/zoo_lock.c\n"]}, {"Issue key": "ZOOKEEPER-2933", "Request type": "New Feature", "Datetime creation": "2017-11-06 16:22:17", "Datetime resolution": "2018-10-02 09:38:45", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Closed", "Description": "This is related to jute.maxbuffer problems on the server side when Leader generates a proposal that doesn't fit into Follower's Jute buffer causing the quorum to be broken.\r\n\r\nProposed solution is to add the following new JMX Beans:\r\n\r\n1. Add getJuteMaxBuffer to ZookeeperServerBean which monitors the current jute.maxbuffer setting,\r\n2. Add get last/min/max ProposalSize to LeaderBean which monitors the size of the latest/min/max proposal.\r\n\r\nThe rationale behind this new feature is to add capability to JMX monitoring API to determine what is the current/min/max usage of the Jute buffer. This will let third party monitoring tools to get samples of buffer usage and create some statistics or generate alerts if it breaches a particular value.\r\n\r\nThis will not solve the problems related to jute.maxbuffer setting on its own, but it's intended to be the first step towards better handling or preventing production issues to happen.\r\n\r\nSubtasks have been created to separately implement client and server side buffer size monitoring.", "Comments": ["GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/415\n\n    ZOOKEEPER-2933: Added last/min/max proposal size JMX beans\n\n    https://issues.apache.org/jira/browse/ZOOKEEPER-2933\r\n    - Refactor proposal serialization logic to a common place (SerializeUtils),\r\n    - Add JMX metric to monitor jute.maxbuffer setting\r\n    - Add JMX metric to monitor min/max/last size of generated proposals\r\n    - Unit tests\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2933\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/415.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #415\n    \n----\ncommit 67efc8553d80b374146aac07613eb3e217ba080f\nAuthor: Andor Moln\u00e1r <andor@cloudera.com>\nDate:   2017-11-06T16:31:44Z\n\n    ZOOKEEPER-2933: Added last/min/max proposal size JMX beans\n    \n    - Refactor proposal serialization logic to a common place,\n    - Add JMX metric to monitor jute.maxbuffer setting\n    - Add JMX metric to monitor min/max/last size of generated proposals\n\n----\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1176//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1176//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1176//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1177//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1177//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1177//console\n\nThis message is automatically generated.", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149830970\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/LeaderStatsTest.java ---\n    @@ -0,0 +1,39 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.junit.Test;\n    +\n    +import static org.junit.Assert.assertEquals;\n    +\n    +public class LeaderStatsTest {\n    +    @Test\n    +    public void testSetProposalSize_SetMinMax() {\n    +        LeaderStats stats = new LeaderStats();\n    --- End diff --\n    \n    Maybe we should check what the min and max are before a proposal is received to make sure we set that behavior in stone.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149829950\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -984,8 +990,6 @@ public void commitAndActivate(long zxid, long designatedLeader) {\n     \n         /**\n          * Create an inform packet and send it to all observers.\n    -     * @param zxid\n    -     * @param proposal\n    --- End diff --\n    \n    Not that it adds much value, but why does this line need to be removed?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149830882\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/LeaderStatsTest.java ---\n    @@ -0,0 +1,39 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.junit.Test;\n    +\n    +import static org.junit.Assert.assertEquals;\n    +\n    +public class LeaderStatsTest {\n    +    @Test\n    +    public void testSetProposalSize_SetMinMax() {\n    --- End diff --\n    \n    nit:  the underscore in the test name is a little unconventional I think\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149832748\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/LeaderStats.java ---\n    @@ -0,0 +1,61 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +/**\n    + * Provides live statistics about a running Leader.\n    + */\n    +class LeaderStats {\n    --- End diff --\n    \n    nit: Maybe we can call this `ProposalStats` at least it until it includes something not related to proposals\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149832324\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServerBean.java ---\n    @@ -167,4 +167,9 @@ public String getSecureClientAddress() {\n         public long getTxnLogElapsedSyncTime() {\n             return zks.getTxnLogElapsedSyncTime();\n         }\n    +\n    +    @Override\n    +    public int getJuteMaxBufferSize() {\n    +        return Integer.getInteger(\"jute.maxbuffer\", 0xfffff);\n    --- End diff --\n    \n    I think the magic number 0xfffff is defined elsewhere in the code, it would be great to only have it in one place.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149832062\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/util/SerializeUtilsTest.java ---\n    @@ -0,0 +1,73 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.util;\n    +\n    +import org.apache.jute.OutputArchive;\n    +import org.apache.jute.Record;\n    +import org.apache.zookeeper.server.Request;\n    +import org.apache.zookeeper.txn.TxnHeader;\n    +import org.junit.Test;\n    +import org.mockito.InOrder;\n    +\n    +import java.io.IOException;\n    +\n    +import static org.junit.Assert.assertNotNull;\n    +import static org.junit.Assert.assertNull;\n    +import static org.mockito.Matchers.any;\n    +import static org.mockito.Matchers.eq;\n    +import static org.mockito.Mockito.inOrder;\n    +import static org.mockito.Mockito.mock;\n    +import static org.mockito.Mockito.verify;\n    +\n    +public class SerializeUtilsTest {\n    +\n    +    @Test\n    +    public void testSerializeRequest_RequestIsNull() {\n    +        byte[] data = SerializeUtils.serializeRequest(null);\n    +        assertNull(data);\n    +    }\n    +\n    +    @Test\n    +    public void testSerializeRequest_RequestHeaderIsNull() {\n    +        Request request = new Request(0, 0, 0, null, null, 0);\n    +        byte[] data = SerializeUtils.serializeRequest(request);\n    +        assertNull(data);\n    +    }\n    +\n    +    @Test\n    +    public void testSerializeRequest_WithoutTxn() throws IOException {\n    +        TxnHeader header = mock(TxnHeader.class);\n    +        Request request = new Request(1, 2, 3, header, null, 4);\n    +        byte[] data = SerializeUtils.serializeRequest(request);\n    +        assertNotNull(data);\n    +        verify(header).serialize(any(OutputArchive.class), eq(\"hdr\"));\n    +    }\n    +\n    +    @Test\n    +    public void testSerializeRequest_WithTxn() throws IOException {\n    +        Record txn = mock(Record.class);\n    +        TxnHeader header = mock(TxnHeader.class);\n    +        Request request = new Request(1, 2, 3, header, txn, 4);\n    +        byte[] data = SerializeUtils.serializeRequest(request);\n    +        assertNotNull(data);\n    +        InOrder inOrder = inOrder(header, txn);\n    --- End diff --\n    \n    I'm concerned that we do not actually check that the result of serializing the header and transaction ever make it into `data`. Would it be possible to write this test to mock out the serialization of the `header` and `txn` then make sure we get the `data` we expect?\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149833628\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/LeaderStats.java ---\n    @@ -0,0 +1,61 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +/**\n    + * Provides live statistics about a running Leader.\n    + */\n    +class LeaderStats {\n    +    /**\n    +     * Size of the last generated proposal. This should fit into server's jute.maxbuffer setting.\n    +     */\n    +    private int lastProposalSize = 0;\n    +\n    +    /**\n    +     * Size of the smallest proposal which has been generated since the server was started.\n    +     */\n    +    private int minProposalSize = -1;\n    +\n    +    /**\n    +     * Size of the largest proposal which has been generated since the server was started.\n    +     */\n    +    private int maxProposalSize = 0;\n    --- End diff --\n    \n    nit: can we set all of these to -1 for consistency\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149829634\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -34,12 +33,12 @@\n     import java.util.List;\n     import java.util.Map;\n     import java.util.Set;\n    +import java.util.concurrent.atomic.AtomicInteger;\n    --- End diff --\n    \n    unused import\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149945747\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServerBean.java ---\n    @@ -167,4 +167,9 @@ public String getSecureClientAddress() {\n         public long getTxnLogElapsedSyncTime() {\n             return zks.getTxnLogElapsedSyncTime();\n         }\n    +\n    +    @Override\n    +    public int getJuteMaxBufferSize() {\n    +        return Integer.getInteger(\"jute.maxbuffer\", 0xfffff);\n    --- End diff --\n    \n    I deal with it in the other way around. Directly access BinaryInputArchive.maxBuffer from here.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149945916\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -34,12 +33,12 @@\n     import java.util.List;\n     import java.util.Map;\n     import java.util.Set;\n    +import java.util.concurrent.atomic.AtomicInteger;\n    --- End diff --\n    \n    Good catch, thanks.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149946142\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/Leader.java ---\n    @@ -984,8 +990,6 @@ public void commitAndActivate(long zxid, long designatedLeader) {\n     \n         /**\n          * Create an inform packet and send it to all observers.\n    -     * @param zxid\n    -     * @param proposal\n    --- End diff --\n    \n    Intellij keep notifying me about these comments not referring to valid parameters in the method definition anymore. I thought it'd be nice to do some cleanup together with the patch.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149946413\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/LeaderStats.java ---\n    @@ -0,0 +1,61 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +/**\n    + * Provides live statistics about a running Leader.\n    + */\n    +class LeaderStats {\n    --- End diff --\n    \n    Done.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149946468\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/LeaderStats.java ---\n    @@ -0,0 +1,61 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +/**\n    + * Provides live statistics about a running Leader.\n    + */\n    +class LeaderStats {\n    +    /**\n    +     * Size of the last generated proposal. This should fit into server's jute.maxbuffer setting.\n    +     */\n    +    private int lastProposalSize = 0;\n    +\n    +    /**\n    +     * Size of the smallest proposal which has been generated since the server was started.\n    +     */\n    +    private int minProposalSize = -1;\n    +\n    +    /**\n    +     * Size of the largest proposal which has been generated since the server was started.\n    +     */\n    +    private int maxProposalSize = 0;\n    --- End diff --\n    \n    Done.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149946634\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/LeaderStatsTest.java ---\n    @@ -0,0 +1,39 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.junit.Test;\n    +\n    +import static org.junit.Assert.assertEquals;\n    +\n    +public class LeaderStatsTest {\n    +    @Test\n    +    public void testSetProposalSize_SetMinMax() {\n    --- End diff --\n    \n    Removed.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149947085\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/quorum/LeaderStatsTest.java ---\n    @@ -0,0 +1,39 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.quorum;\n    +\n    +import org.junit.Test;\n    +\n    +import static org.junit.Assert.assertEquals;\n    +\n    +public class LeaderStatsTest {\n    +    @Test\n    +    public void testSetProposalSize_SetMinMax() {\n    +        LeaderStats stats = new LeaderStats();\n    --- End diff --\n    \n    Good point. I've also added checking the lastProposalSize size value besides min/max.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/415#discussion_r149948702\n  \n    --- Diff: src/java/test/org/apache/zookeeper/server/util/SerializeUtilsTest.java ---\n    @@ -0,0 +1,73 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.zookeeper.server.util;\n    +\n    +import org.apache.jute.OutputArchive;\n    +import org.apache.jute.Record;\n    +import org.apache.zookeeper.server.Request;\n    +import org.apache.zookeeper.txn.TxnHeader;\n    +import org.junit.Test;\n    +import org.mockito.InOrder;\n    +\n    +import java.io.IOException;\n    +\n    +import static org.junit.Assert.assertNotNull;\n    +import static org.junit.Assert.assertNull;\n    +import static org.mockito.Matchers.any;\n    +import static org.mockito.Matchers.eq;\n    +import static org.mockito.Mockito.inOrder;\n    +import static org.mockito.Mockito.mock;\n    +import static org.mockito.Mockito.verify;\n    +\n    +public class SerializeUtilsTest {\n    +\n    +    @Test\n    +    public void testSerializeRequest_RequestIsNull() {\n    +        byte[] data = SerializeUtils.serializeRequest(null);\n    +        assertNull(data);\n    +    }\n    +\n    +    @Test\n    +    public void testSerializeRequest_RequestHeaderIsNull() {\n    +        Request request = new Request(0, 0, 0, null, null, 0);\n    +        byte[] data = SerializeUtils.serializeRequest(request);\n    +        assertNull(data);\n    +    }\n    +\n    +    @Test\n    +    public void testSerializeRequest_WithoutTxn() throws IOException {\n    +        TxnHeader header = mock(TxnHeader.class);\n    +        Request request = new Request(1, 2, 3, header, null, 4);\n    +        byte[] data = SerializeUtils.serializeRequest(request);\n    +        assertNotNull(data);\n    +        verify(header).serialize(any(OutputArchive.class), eq(\"hdr\"));\n    +    }\n    +\n    +    @Test\n    +    public void testSerializeRequest_WithTxn() throws IOException {\n    +        Record txn = mock(Record.class);\n    +        TxnHeader header = mock(TxnHeader.class);\n    +        Request request = new Request(1, 2, 3, header, txn, 4);\n    +        byte[] data = SerializeUtils.serializeRequest(request);\n    +        assertNotNull(data);\n    +        InOrder inOrder = inOrder(header, txn);\n    --- End diff --\n    \n    Very good question, I'd been thinking about it for a while. The reason why I eventually left it out is that this unit test verifies the behaviour of serializeRequest() method and _not_ the serialization itself. So basically we have to verify that the right serialize() methods get called in the right order instead of what they actually do. \r\n    \r\n    On the other hand, you're right, because if we mock the serialize() methods, they won't have sideeffect on our test.\r\n    \r\n    What do you think?\r\n\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/415\n  \n    @afine I've created 2 subtasks for the Jira as you suggested and changed this PR to refer to the right one.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 4 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1178//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1178//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1178//console\n\nThis message is automatically generated."]}, {"Issue key": "ZOOKEEPER-2932", "Request type": "Improvement", "Datetime creation": "2017-11-06 09:17:53", "Datetime resolution": null, "Reporter login": "ouyanggod", "Reporter name": "OuYang Liang", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "The method FileTxnLog.getLogFiles is used to find out the target log files to be retained base on the given zxid when purging task is running. The current implementation of this method is trivial to understand, and iterate the log files twice to achieve its purchase. It could be improved from both performance and readability.", "Comments": ["GitHub user OuYangLiang opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/414\n\n    ZOOKEEPER-2932 Performance enhancement about purging task.\n\n    The method FileTxnLog.getLogFiles is used to find out the target log files to be retained base on the given zxid when purging task is running. The current implementation of this method is trivial to understand, and iterate the log files twice to achieve its purchase. It could be improved from both performance and readability.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/OuYangLiang/zookeeper master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/414.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #414\n    \n----\ncommit 598841212f6e197f2a5577a84432a6bd7e886201\nAuthor: ouyangliang <ouyanggod@gmail.com>\nDate:   2017-11-06T13:48:43Z\n\n    ZOOKEEPER-2932 Performance enhancement about purging task.\n\n----\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1157//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1157//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1157//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1158//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1158//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1158//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1160//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1160//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1160//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1161//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1161//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1161//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1156//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1156//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1156//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1159//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1159//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1159//console\n\nThis message is automatically generated.", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/414#discussion_r149206744\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java ---\n    @@ -255,30 +255,19 @@ private void padFile(FileOutputStream out) throws IOException {\n          */\n         public static File[] getLogFiles(File[] logDirList,long snapshotZxid) {\n             List<File> files = Util.sortDataDir(logDirList, \"log\", true);\n    --- End diff --\n    \n    couldn't we make the last param false and then we can use a simpler `for (File f : files)` loop?\n", "Github user OuYangLiang commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/414#discussion_r149251675\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java ---\n    @@ -255,30 +255,19 @@ private void padFile(FileOutputStream out) throws IOException {\n          */\n         public static File[] getLogFiles(File[] logDirList,long snapshotZxid) {\n             List<File> files = Util.sortDataDir(logDirList, \"log\", true);\n    --- End diff --\n    \n    Agree, I'll make the change, thanks.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1163//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1163//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1163//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to cause Findbugs (version 3.0.1) to fail.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1164//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1164//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1166//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1166//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1166//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1167//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1167//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1167//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1165//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1165//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1165//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1168//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1168//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1168//console\n\nThis message is automatically generated.", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/414\n  \n    I got curious and took a look, it seems like this is related to `sortDataDir` and the way it handles files that have a different \"prefix\" than what is passed in. \r\n    ```\r\n        * @param prefix files not matching this prefix are assumed to have a\r\n        * version = -1)\r\n    ```\r\n    \r\n    Not sure what the best way to handle this would be. I think throwing in a check while iterating getLogFiles may be the simplest way to go. Maybe you could think of something cleaner.\n", "Github user OuYangLiang commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/414\n  \n    I prefer to the simplest way. Make a check while iterating files in the getLogFiles method. `sortDataDir ` is a little confusion, I'll take a deep look to see if there's better approach.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1170//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1170//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1170//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to cause Findbugs (version 3.0.1) to fail.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1171//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1171//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1173//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1173//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1173//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1174//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1174//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1174//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1172//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1172//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1172//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1175//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1175//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1175//console\n\nThis message is automatically generated."]}, {"Issue key": "ZOOKEEPER-2931", "Request type": "Bug", "Datetime creation": "2017-11-05 18:56:51", "Datetime resolution": "2017-11-15 23:36:03", "Reporter login": "javicacheiro", "Reporter name": "Javier Cacheiro", "Assignee login": null, "Assignee name": null, "Status": "Resolved", "Description": "When the nodes are sorted in WriteLock.java using a TreeSet the whole znode path is taken into account and not just the sequence number.\r\n\r\nThis causes an issue when the sessionId is included in the znode path because a znode with a lower sessionId will appear as lower than other znode with a higher sessionId even if its sequence number is bigger. \r\n\r\nIn specific situations this ended with two clients holding the lock at the same time.", "Comments": ["Added link to the github PR with the fix.\r\nPending to add some unit tests to the pull request.", "Github user javicacheiro commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/413\n  \n    Created JIRA issue:\r\n    https://issues.apache.org/jira/browse/ZOOKEEPER-2931\r\n    I will add some unit tests to the pull request.\n", "Github user javicacheiro commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/413\n  \n    Added unit tests and created JIRA issue:\r\n    \r\n    https://issues.apache.org/jira/browse/ZOOKEEPER-2931\r\n\n", "Issue resolved by pull request 413\n[https://github.com/apache/zookeeper/pull/413]", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3612 (See [https://builds.apache.org/job/ZooKeeper-trunk/3612/])\nZOOKEEPER-2931: WriteLock recipe: Fix bug in znode ordering when the (phunt: rev f299303add79250ec2181f6c03b15e3754825284)\n* (edit) src/recipes/lock/test/org/apache/zookeeper/recipes/lock/ZNodeNameTest.java\n* (edit) src/recipes/lock/src/java/org/apache/zookeeper/recipes/lock/ZNodeName.java\n"]}, {"Issue key": "ZOOKEEPER-2930", "Request type": "Bug", "Datetime creation": "2017-11-03 08:16:20", "Datetime resolution": null, "Reporter login": "jiangjiafu", "Reporter name": "Jiafu Jiang", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "I deploy a cluster of ZooKeeper with three nodes:\r\n\r\nofs_zk1:20.10.11.101, 30.10.11.101\r\nofs_zk2:20.10.11.102, 30.10.11.102\r\nofs_zk3:20.10.11.103, 30.10.11.103\r\n\r\nI shutdown the network interfaces of ofs_zk2 using \"ifdown eth0 eth1\" command.\r\n\r\nIt is supposed that the new Leader should be elected in some seconds, but the fact is, ofs_zk1 and ofs_zk3 just keep electing again and again, but none of them can become the new Leader.\r\n\r\nI change the log level to DEBUG (the default is INFO), and restart zookeeper servers on ofs_zk1 and ofs_zk2 again, but it can not fix the problem.\r\n\r\nI read the log and the ZooKeeper source code, and I think I find the reason.\r\n\r\nWhen the potential leader(says ofs_zk3) begins the election(FastLeaderElection.lookForLeader()), it will send notifications to all the servers. \r\nWhen it fails to receive any notification during a timeout, it will resend the notifications, and double the timeout. This process will repeat until any notification is received or the timeout reaches a max value.\r\nThe FastLeaderElection.sendNotifications() just put the notification message into a queue and return. The WorkerSender is responsable to send the notifications.\r\n\r\nThe WorkerSender just process the notifications one by one by passing the notifications to QuorumCnxManager. Here comes the problem, the QuorumCnxManager.toSend() blocks for a long time when the notification is send to ofs_zk2(whose network is down) and some notifications (which belongs to ofs_zk1) will thus be blocked for a long time. The repeated notifications by FastLeaderElection.sendNotifications() just make things worse.\r\n\r\nHere is the related source code:\r\n\r\n{code:java}\r\n    public void toSend(Long sid, ByteBuffer b) {\r\n        /*\r\n         * If sending message to myself, then simply enqueue it (loopback).\r\n         */\r\n        if (this.mySid == sid) {\r\n             b.position(0);\r\n             addToRecvQueue(new Message(b.duplicate(), sid));\r\n            /*\r\n             * Otherwise send to the corresponding thread to send.\r\n             */\r\n        } else {\r\n             /*\r\n              * Start a new connection if doesn't have one already.\r\n              */\r\n             ArrayBlockingQueue<ByteBuffer> bq = new ArrayBlockingQueue<ByteBuffer>(SEND_CAPACITY);\r\n             ArrayBlockingQueue<ByteBuffer> bqExisting = queueSendMap.putIfAbsent(sid, bq);\r\n             if (bqExisting != null) {\r\n                 addToSendQueue(bqExisting, b);\r\n             } else {\r\n                 addToSendQueue(bq, b);\r\n             }\r\n             \r\n             // This may block!!!\r\n             connectOne(sid);\r\n                \r\n        }\r\n    }\r\n{code}\r\n\r\nTherefore, when ofs_zk3 believes that it is the leader, it begins to wait the epoch ack, but in fact the ofs_zk1 does not receive the notification(which says the leader is ofs_zk3) because the ofs_zk3 has not sent the notification(which may still exist in the sendqueue of WorkerSender). At last, the potential leader ofs_zk3 fails to receive the epoch ack in timeout, so it quits the leader and begins a new election. \r\n\r\nThe log files of ofs_zk1 and ofs_zk3 are attached.", "Comments": ["zookeeper1.log \uff1a ofs_zk1\r\nzookeeper2.log \uff1a ofs_zk3", "I suggest that there can be more that one WorkSender in FastLeaderElection, so that network failure of some zk servers will not affect the notifications to others.", "I encounter the same problem. Wait for a conclusion.", " Mark, meet the same problem.    ", "GitHub user JonathanO opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/456\n\n    ZOOKEEPER-2930: Leader cannot be elected due to network timeout of some members.\n\n    Move sock.connect() into the async connection worker thread.\r\n    Use initiateConnectionAsync for all connections.\r\n    This prevents connection delays blocking notifications to other nodes.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/transferwise/zookeeper ZOOKEEPER-2930\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/456.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #456\n    \n----\ncommit 68e327e112b0910e56b9fa2b3ba948e4179adb6b\nAuthor: Jonathan Oddy <jonathan.oddy@...>\nDate:   2018-02-02T15:33:50Z\n\n    ZOOKEEPER-2930: Leader cannot be elected due to network timeout of some members.\n    \n    Move sock.connect() into the async connection worker thread.\n    Use initiateConnectionAsync for all connections.\n    This prevents connection delays blocking notifications to other nodes.\n\n----\n", "So, I think what happens is, if the 2nd node in the list dies in a way that causes new connections to time out then the notification messages to the 3rd node are delayed by >=5s while those to the 1st node are delivered on time. (sendNotifications() queues a notification to all three nodes (including the local node), in order, andtoSend() blocks during sending the message to the 2nd node.)\r\n\r\nThis 5s delay means that if the 3rd node is elected, it will see the election complete >= 5s after the 1st node does. The 1st node attempts to connect to the 3rd on the leader port 5 times with a 1s delay (both hard coded) but, since the 3rd node hasn't seen the election complete, it hasn't started listening on that port yet. Unless you're very lucky with timing, the 1st node will give up and start a new election round before the 3rd realises that it has been elected. The 3rd node then sits there for initLimit before going back to the LOOKING state, leaving you with a broken cluster for at least initLimit.\r\n\r\nMy patch attempts to fix this by makingthe entire process of establishing a connection async, avoiding it blocking toSend().", "Github user JonathanO commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/456#discussion_r166036745\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java ---\n    @@ -689,15 +669,15 @@ synchronized void connectOne(long sid){\n                 Map<Long, QuorumPeer.QuorumServer> lastProposedView = lastSeenQV.getAllMembers();\n                 if (lastCommittedView.containsKey(sid)) {\n                     knownId = true;\n    -                if (connectOne(sid, lastCommittedView.get(sid).electionAddr))\n    -                    return;\n    --- End diff --\n    \n    This part of the change isn't quite right since it relied on connectOne returning false on an IOException calling sock.connect(). We will no longer attempt to use lastProposedView.get(sid).electionAddr in the case that a connection using the lastCommittedView failed and the electionAddr has changed. I don't know what effect this will have. Maybe I need to move this condition into the async connection mechanism too?\n", "GitHub user JonathanO opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/465\n\n    ZOOKEEPER-2930: Leader cannot be elected due to network timeout of some members.\n\n    Backported to 3.4 from the ZOOKEEPER-2930 branch.\r\n    \r\n    Move sock.connect() into the async connection worker thread.\r\n    Moved a load of connectOne(sid) into the async connection worker thread.\r\n    Use use the async connection worker for all connections.\r\n    This prevents connection delays blocking notifications to other nodes.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/transferwise/zookeeper branch-3.4-ZOOKEEPER-2930\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/465.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #465\n    \n----\ncommit ca05df6049e3282fef9fd3f34d07337011b5f4f6\nAuthor: Jonathan Oddy <jonathan.oddy@...>\nDate:   2018-02-15T12:22:24Z\n\n    ZOOKEEPER-2930: Leader cannot be elected due to network timeout of some members.\n    \n    Backported from 3.5.\n    \n    Move sock.connect() into the async connection worker thread.\n    Moved a load of connectOne(sid) into the async connection worker thread.\n    Use use the async connection worker for all connections.\n    This prevents connection delays blocking notifications to other nodes.\n\n----\n", "Github user fpj commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/456#discussion_r168620297\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java ---\n    @@ -318,76 +318,167 @@ public Thread newThread(Runnable r) {\n          */\n         public void testInitiateConnection(long sid) throws Exception {\n             LOG.debug(\"Opening channel to server \" + sid);\n    -        Socket sock = new Socket();\n    -        setSockOpts(sock);\n    -        sock.connect(self.getVotingView().get(sid).electionAddr, cnxTO);\n    -        initiateConnection(sock, sid);\n    +        initiateConnection(sid, self.getVotingView().get(sid).electionAddr);\n    +    }\n    +\n    +    private Socket openChannel(long sid, InetSocketAddress electionAddr) {\n    +        LOG.debug(\"Opening channel to server \" + sid);\n    +        try {\n    +            final Socket sock = new Socket();\n    +            setSockOpts(sock);\n    +            sock.connect(electionAddr, cnxTO);\n    +            LOG.debug(\"Connected to server \" + sid);\n    +            return sock;\n    +        } catch (UnresolvedAddressException e) {\n    +            // Sun doesn't include the address that causes this\n    +            // exception to be thrown, also UAE cannot be wrapped cleanly\n    +            // so we log the exception in order to capture this critical\n    +            // detail.\n    +            LOG.warn(\"Cannot open channel to \" + sid\n    +                    + \" at election address \" + electionAddr, e);\n    +            throw e;\n    +        } catch (IOException e) {\n    +            LOG.warn(\"Cannot open channel to \" + sid\n    +                            + \" at election address \" + electionAddr,\n    +                    e);\n    +            return null;\n    +        }\n         }\n     \n         /**\n          * If this server has initiated the connection, then it gives up on the\n          * connection if it loses challenge. Otherwise, it keeps the connection.\n          */\n    -    public void initiateConnection(final Socket sock, final Long sid) {\n    +    public boolean initiateConnection(final Long sid, InetSocketAddress electionAddr) {\n             try {\n    -            startConnection(sock, sid);\n    -        } catch (IOException e) {\n    -            LOG.error(\"Exception while connecting, id: {}, addr: {}, closing learner connection\",\n    -                    new Object[] { sid, sock.getRemoteSocketAddress() }, e);\n    -            closeSocket(sock);\n    -            return;\n    +            Socket sock = openChannel(sid, electionAddr);\n    +            if (sock != null) {\n    +                try {\n    +                    startConnection(sock, sid);\n    +                } catch (IOException e) {\n    +                    LOG.error(\"Exception while connecting, id: {}, addr: {}, closing learner connection\",\n    +                            new Object[]{sid, sock.getRemoteSocketAddress()}, e);\n    +                    closeSocket(sock);\n    +                }\n    +                return true;\n    +            } else {\n    +                return false;\n    +            }\n    +        } finally {\n    +            inprogressConnections.remove(sid);\n             }\n         }\n     \n    -    /**\n    -     * Server will initiate the connection request to its peer server\n    -     * asynchronously via separate connection thread.\n    -     */\n    -    public void initiateConnectionAsync(final Socket sock, final Long sid) {\n    +    synchronized private void connectOneAsync(final Long sid, final ZooKeeperThread connectorThread) {\n    +        if (senderWorkerMap.get(sid) != null) {\n    +            LOG.debug(\"There is a connection already for server \" + sid);\n    +            return;\n    +        }\n             if(!inprogressConnections.add(sid)){\n                 // simply return as there is a connection request to\n                 // server 'sid' already in progress.\n                 LOG.debug(\"Connection request to server id: {} is already in progress, so skipping this request\",\n                         sid);\n    -            closeSocket(sock);\n                 return;\n             }\n             try {\n    -            connectionExecutor.execute(\n    -                    new QuorumConnectionReqThread(sock, sid));\n    +            connectionExecutor.execute(connectorThread);\n                 connectionThreadCnt.incrementAndGet();\n             } catch (Throwable e) {\n                 // Imp: Safer side catching all type of exceptions and remove 'sid'\n                 // from inprogress connections. This is to avoid blocking further\n                 // connection requests from this 'sid' in case of errors.\n                 inprogressConnections.remove(sid);\n                 LOG.error(\"Exception while submitting quorum connection request\", e);\n    -            closeSocket(sock);\n             }\n         }\n     \n    +    /**\n    +     * Try to establish a connection to server with id sid using its electionAddr.\n    +     *\n    +     * Server will initiate the connection request to its peer server\n    +     * asynchronously via separate connection thread.\n    +     *\n    +     *  @param sid  server id\n    +     *  @param electionAddr election address\n    +     */\n    +    private void connectOne(final Long sid, InetSocketAddress electionAddr) {\n    +        connectOneAsync(sid, new QuorumConnectionReqThread(sid, electionAddr));\n    +    }\n    +\n    +    /**\n    +     * Try to establish a connection to server with id sid.\n    +     *\n    +     * Server will initiate the connection request to its peer server\n    +     * asynchronously via separate connection thread.\n    +     *\n    +     *  @param sid  server id\n    +     */\n    +    public void connectOne(final Long sid) {\n    +        connectOneAsync(sid, new QuorumConnectionReqBySidThread(sid));\n    +    }\n    +\n         /**\n          * Thread to send connection request to peer server.\n          */\n    -    private class QuorumConnectionReqThread extends ZooKeeperThread {\n    -        final Socket sock;\n    +    private class QuorumConnectionReqBySidThread extends ZooKeeperThread {\n             final Long sid;\n    -        QuorumConnectionReqThread(final Socket sock, final Long sid) {\n    +\n    +        QuorumConnectionReqBySidThread(final Long sid) {\n                 super(\"QuorumConnectionReqThread-\" + sid);\n    -            this.sock = sock;\n                 this.sid = sid;\n             }\n     \n             @Override\n             public void run() {\n    -            try{\n    -                initiateConnection(sock, sid);\n    -            } finally {\n    -                inprogressConnections.remove(sid);\n    +            synchronized (self.QV_LOCK) {\n    +                boolean knownId = false;\n    +                // Resolve hostname for the remote server before attempting to\n    +                // connect in case the underlying ip address has changed.\n    +                self.recreateSocketAddresses(sid);\n    +                Map<Long, QuorumPeer.QuorumServer> lastCommittedView = self.getView();\n    +                QuorumVerifier lastSeenQV = self.getLastSeenQuorumVerifier();\n    +                Map<Long, QuorumPeer.QuorumServer> lastProposedView = lastSeenQV.getAllMembers();\n    +                if (lastCommittedView.containsKey(sid)) {\n    +                    knownId = true;\n    +                    if (initiateConnection(sid, lastCommittedView.get(sid).electionAddr)) {\n    +                        return;\n    +                    }\n    +                }\n    +                if (lastSeenQV != null && lastProposedView.containsKey(sid)\n    +                        && (!knownId || (lastProposedView.get(sid).electionAddr !=\n    +                        lastCommittedView.get(sid).electionAddr))) {\n    +                    knownId = true;\n    +                    if (initiateConnection(sid, lastProposedView.get(sid).electionAddr)) {\n    +                        return;\n    +                    }\n    +                }\n    +                if (!knownId) {\n    +                    LOG.warn(\"Invalid server id: \" + sid);\n    +                    return;\n    +                }\n                 }\n             }\n         }\n     \n    +    /**\n    +     * Thread to send connection request to peer server.\n    +     */\n    +    private class QuorumConnectionReqThread extends ZooKeeperThread {\n    --- End diff --\n    \n    Since we are making this change to run the connection establishment on a separate thread, I wonder if it would make sense to use an executor rather than instantiate a thread each time. What do you think?\n", "Github user fpj commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/456\n  \n    I have also tested this PR a bit locally.\n", "Github user JonathanO commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/456#discussion_r169910520\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java ---\n    @@ -318,76 +318,167 @@ public Thread newThread(Runnable r) {\n          */\n         public void testInitiateConnection(long sid) throws Exception {\n             LOG.debug(\"Opening channel to server \" + sid);\n    -        Socket sock = new Socket();\n    -        setSockOpts(sock);\n    -        sock.connect(self.getVotingView().get(sid).electionAddr, cnxTO);\n    -        initiateConnection(sock, sid);\n    +        initiateConnection(sid, self.getVotingView().get(sid).electionAddr);\n    +    }\n    +\n    +    private Socket openChannel(long sid, InetSocketAddress electionAddr) {\n    +        LOG.debug(\"Opening channel to server \" + sid);\n    +        try {\n    +            final Socket sock = new Socket();\n    +            setSockOpts(sock);\n    +            sock.connect(electionAddr, cnxTO);\n    +            LOG.debug(\"Connected to server \" + sid);\n    +            return sock;\n    +        } catch (UnresolvedAddressException e) {\n    +            // Sun doesn't include the address that causes this\n    +            // exception to be thrown, also UAE cannot be wrapped cleanly\n    +            // so we log the exception in order to capture this critical\n    +            // detail.\n    +            LOG.warn(\"Cannot open channel to \" + sid\n    +                    + \" at election address \" + electionAddr, e);\n    +            throw e;\n    +        } catch (IOException e) {\n    +            LOG.warn(\"Cannot open channel to \" + sid\n    +                            + \" at election address \" + electionAddr,\n    +                    e);\n    +            return null;\n    +        }\n         }\n     \n         /**\n          * If this server has initiated the connection, then it gives up on the\n          * connection if it loses challenge. Otherwise, it keeps the connection.\n          */\n    -    public void initiateConnection(final Socket sock, final Long sid) {\n    +    public boolean initiateConnection(final Long sid, InetSocketAddress electionAddr) {\n             try {\n    -            startConnection(sock, sid);\n    -        } catch (IOException e) {\n    -            LOG.error(\"Exception while connecting, id: {}, addr: {}, closing learner connection\",\n    -                    new Object[] { sid, sock.getRemoteSocketAddress() }, e);\n    -            closeSocket(sock);\n    -            return;\n    +            Socket sock = openChannel(sid, electionAddr);\n    +            if (sock != null) {\n    +                try {\n    +                    startConnection(sock, sid);\n    +                } catch (IOException e) {\n    +                    LOG.error(\"Exception while connecting, id: {}, addr: {}, closing learner connection\",\n    +                            new Object[]{sid, sock.getRemoteSocketAddress()}, e);\n    +                    closeSocket(sock);\n    +                }\n    +                return true;\n    +            } else {\n    +                return false;\n    +            }\n    +        } finally {\n    +            inprogressConnections.remove(sid);\n             }\n         }\n     \n    -    /**\n    -     * Server will initiate the connection request to its peer server\n    -     * asynchronously via separate connection thread.\n    -     */\n    -    public void initiateConnectionAsync(final Socket sock, final Long sid) {\n    +    synchronized private void connectOneAsync(final Long sid, final ZooKeeperThread connectorThread) {\n    +        if (senderWorkerMap.get(sid) != null) {\n    +            LOG.debug(\"There is a connection already for server \" + sid);\n    +            return;\n    +        }\n             if(!inprogressConnections.add(sid)){\n                 // simply return as there is a connection request to\n                 // server 'sid' already in progress.\n                 LOG.debug(\"Connection request to server id: {} is already in progress, so skipping this request\",\n                         sid);\n    -            closeSocket(sock);\n                 return;\n             }\n             try {\n    -            connectionExecutor.execute(\n    -                    new QuorumConnectionReqThread(sock, sid));\n    +            connectionExecutor.execute(connectorThread);\n                 connectionThreadCnt.incrementAndGet();\n             } catch (Throwable e) {\n                 // Imp: Safer side catching all type of exceptions and remove 'sid'\n                 // from inprogress connections. This is to avoid blocking further\n                 // connection requests from this 'sid' in case of errors.\n                 inprogressConnections.remove(sid);\n                 LOG.error(\"Exception while submitting quorum connection request\", e);\n    -            closeSocket(sock);\n             }\n         }\n     \n    +    /**\n    +     * Try to establish a connection to server with id sid using its electionAddr.\n    +     *\n    +     * Server will initiate the connection request to its peer server\n    +     * asynchronously via separate connection thread.\n    +     *\n    +     *  @param sid  server id\n    +     *  @param electionAddr election address\n    +     */\n    +    private void connectOne(final Long sid, InetSocketAddress electionAddr) {\n    +        connectOneAsync(sid, new QuorumConnectionReqThread(sid, electionAddr));\n    +    }\n    +\n    +    /**\n    +     * Try to establish a connection to server with id sid.\n    +     *\n    +     * Server will initiate the connection request to its peer server\n    +     * asynchronously via separate connection thread.\n    +     *\n    +     *  @param sid  server id\n    +     */\n    +    public void connectOne(final Long sid) {\n    +        connectOneAsync(sid, new QuorumConnectionReqBySidThread(sid));\n    +    }\n    +\n         /**\n          * Thread to send connection request to peer server.\n          */\n    -    private class QuorumConnectionReqThread extends ZooKeeperThread {\n    -        final Socket sock;\n    +    private class QuorumConnectionReqBySidThread extends ZooKeeperThread {\n             final Long sid;\n    -        QuorumConnectionReqThread(final Socket sock, final Long sid) {\n    +\n    +        QuorumConnectionReqBySidThread(final Long sid) {\n                 super(\"QuorumConnectionReqThread-\" + sid);\n    -            this.sock = sock;\n                 this.sid = sid;\n             }\n     \n             @Override\n             public void run() {\n    -            try{\n    -                initiateConnection(sock, sid);\n    -            } finally {\n    -                inprogressConnections.remove(sid);\n    +            synchronized (self.QV_LOCK) {\n    +                boolean knownId = false;\n    +                // Resolve hostname for the remote server before attempting to\n    +                // connect in case the underlying ip address has changed.\n    +                self.recreateSocketAddresses(sid);\n    +                Map<Long, QuorumPeer.QuorumServer> lastCommittedView = self.getView();\n    +                QuorumVerifier lastSeenQV = self.getLastSeenQuorumVerifier();\n    +                Map<Long, QuorumPeer.QuorumServer> lastProposedView = lastSeenQV.getAllMembers();\n    +                if (lastCommittedView.containsKey(sid)) {\n    +                    knownId = true;\n    +                    if (initiateConnection(sid, lastCommittedView.get(sid).electionAddr)) {\n    +                        return;\n    +                    }\n    +                }\n    +                if (lastSeenQV != null && lastProposedView.containsKey(sid)\n    +                        && (!knownId || (lastProposedView.get(sid).electionAddr !=\n    +                        lastCommittedView.get(sid).electionAddr))) {\n    +                    knownId = true;\n    +                    if (initiateConnection(sid, lastProposedView.get(sid).electionAddr)) {\n    +                        return;\n    +                    }\n    +                }\n    +                if (!knownId) {\n    +                    LOG.warn(\"Invalid server id: \" + sid);\n    +                    return;\n    +                }\n                 }\n             }\n         }\n     \n    +    /**\n    +     * Thread to send connection request to peer server.\n    +     */\n    +    private class QuorumConnectionReqThread extends ZooKeeperThread {\n    --- End diff --\n    \n    I considered it, especially as the QuorumConnectionReqBySidThread case (and the backport to 3.4 #465) are effectively run serially. It just seemed consistent with the existing approach to stick with creating a thread for every new connection. There shouldn't be large numbers of them being created, so I figured it should be fine.\n", "I hope this PB can be fix in version 3.4.X, since 3.4.X is the stable version.", "PR #465 contains the backport of my fix to 3.4.x.", "Github user JonathanO commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/456#discussion_r172802731\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java ---\n    @@ -318,76 +318,167 @@ public Thread newThread(Runnable r) {\n          */\n         public void testInitiateConnection(long sid) throws Exception {\n             LOG.debug(\"Opening channel to server \" + sid);\n    -        Socket sock = new Socket();\n    -        setSockOpts(sock);\n    -        sock.connect(self.getVotingView().get(sid).electionAddr, cnxTO);\n    -        initiateConnection(sock, sid);\n    +        initiateConnection(sid, self.getVotingView().get(sid).electionAddr);\n    +    }\n    +\n    +    private Socket openChannel(long sid, InetSocketAddress electionAddr) {\n    +        LOG.debug(\"Opening channel to server \" + sid);\n    +        try {\n    +            final Socket sock = new Socket();\n    +            setSockOpts(sock);\n    +            sock.connect(electionAddr, cnxTO);\n    +            LOG.debug(\"Connected to server \" + sid);\n    +            return sock;\n    +        } catch (UnresolvedAddressException e) {\n    +            // Sun doesn't include the address that causes this\n    +            // exception to be thrown, also UAE cannot be wrapped cleanly\n    +            // so we log the exception in order to capture this critical\n    +            // detail.\n    +            LOG.warn(\"Cannot open channel to \" + sid\n    +                    + \" at election address \" + electionAddr, e);\n    +            throw e;\n    +        } catch (IOException e) {\n    +            LOG.warn(\"Cannot open channel to \" + sid\n    +                            + \" at election address \" + electionAddr,\n    +                    e);\n    +            return null;\n    +        }\n         }\n     \n         /**\n          * If this server has initiated the connection, then it gives up on the\n          * connection if it loses challenge. Otherwise, it keeps the connection.\n          */\n    -    public void initiateConnection(final Socket sock, final Long sid) {\n    +    public boolean initiateConnection(final Long sid, InetSocketAddress electionAddr) {\n             try {\n    -            startConnection(sock, sid);\n    -        } catch (IOException e) {\n    -            LOG.error(\"Exception while connecting, id: {}, addr: {}, closing learner connection\",\n    -                    new Object[] { sid, sock.getRemoteSocketAddress() }, e);\n    -            closeSocket(sock);\n    -            return;\n    +            Socket sock = openChannel(sid, electionAddr);\n    +            if (sock != null) {\n    +                try {\n    +                    startConnection(sock, sid);\n    +                } catch (IOException e) {\n    +                    LOG.error(\"Exception while connecting, id: {}, addr: {}, closing learner connection\",\n    +                            new Object[]{sid, sock.getRemoteSocketAddress()}, e);\n    +                    closeSocket(sock);\n    +                }\n    +                return true;\n    +            } else {\n    +                return false;\n    +            }\n    +        } finally {\n    +            inprogressConnections.remove(sid);\n             }\n         }\n     \n    -    /**\n    -     * Server will initiate the connection request to its peer server\n    -     * asynchronously via separate connection thread.\n    -     */\n    -    public void initiateConnectionAsync(final Socket sock, final Long sid) {\n    +    synchronized private void connectOneAsync(final Long sid, final ZooKeeperThread connectorThread) {\n    +        if (senderWorkerMap.get(sid) != null) {\n    +            LOG.debug(\"There is a connection already for server \" + sid);\n    +            return;\n    +        }\n             if(!inprogressConnections.add(sid)){\n                 // simply return as there is a connection request to\n                 // server 'sid' already in progress.\n                 LOG.debug(\"Connection request to server id: {} is already in progress, so skipping this request\",\n                         sid);\n    -            closeSocket(sock);\n                 return;\n             }\n             try {\n    -            connectionExecutor.execute(\n    -                    new QuorumConnectionReqThread(sock, sid));\n    +            connectionExecutor.execute(connectorThread);\n                 connectionThreadCnt.incrementAndGet();\n             } catch (Throwable e) {\n                 // Imp: Safer side catching all type of exceptions and remove 'sid'\n                 // from inprogress connections. This is to avoid blocking further\n                 // connection requests from this 'sid' in case of errors.\n                 inprogressConnections.remove(sid);\n                 LOG.error(\"Exception while submitting quorum connection request\", e);\n    -            closeSocket(sock);\n             }\n         }\n     \n    +    /**\n    +     * Try to establish a connection to server with id sid using its electionAddr.\n    +     *\n    +     * Server will initiate the connection request to its peer server\n    +     * asynchronously via separate connection thread.\n    +     *\n    +     *  @param sid  server id\n    +     *  @param electionAddr election address\n    +     */\n    +    private void connectOne(final Long sid, InetSocketAddress electionAddr) {\n    +        connectOneAsync(sid, new QuorumConnectionReqThread(sid, electionAddr));\n    +    }\n    +\n    +    /**\n    +     * Try to establish a connection to server with id sid.\n    +     *\n    +     * Server will initiate the connection request to its peer server\n    +     * asynchronously via separate connection thread.\n    +     *\n    +     *  @param sid  server id\n    +     */\n    +    public void connectOne(final Long sid) {\n    +        connectOneAsync(sid, new QuorumConnectionReqBySidThread(sid));\n    +    }\n    +\n         /**\n          * Thread to send connection request to peer server.\n          */\n    -    private class QuorumConnectionReqThread extends ZooKeeperThread {\n    -        final Socket sock;\n    +    private class QuorumConnectionReqBySidThread extends ZooKeeperThread {\n             final Long sid;\n    -        QuorumConnectionReqThread(final Socket sock, final Long sid) {\n    +\n    +        QuorumConnectionReqBySidThread(final Long sid) {\n                 super(\"QuorumConnectionReqThread-\" + sid);\n    -            this.sock = sock;\n                 this.sid = sid;\n             }\n     \n             @Override\n             public void run() {\n    -            try{\n    -                initiateConnection(sock, sid);\n    -            } finally {\n    -                inprogressConnections.remove(sid);\n    +            synchronized (self.QV_LOCK) {\n    +                boolean knownId = false;\n    +                // Resolve hostname for the remote server before attempting to\n    +                // connect in case the underlying ip address has changed.\n    +                self.recreateSocketAddresses(sid);\n    +                Map<Long, QuorumPeer.QuorumServer> lastCommittedView = self.getView();\n    +                QuorumVerifier lastSeenQV = self.getLastSeenQuorumVerifier();\n    +                Map<Long, QuorumPeer.QuorumServer> lastProposedView = lastSeenQV.getAllMembers();\n    +                if (lastCommittedView.containsKey(sid)) {\n    +                    knownId = true;\n    +                    if (initiateConnection(sid, lastCommittedView.get(sid).electionAddr)) {\n    +                        return;\n    +                    }\n    +                }\n    +                if (lastSeenQV != null && lastProposedView.containsKey(sid)\n    +                        && (!knownId || (lastProposedView.get(sid).electionAddr !=\n    +                        lastCommittedView.get(sid).electionAddr))) {\n    +                    knownId = true;\n    +                    if (initiateConnection(sid, lastProposedView.get(sid).electionAddr)) {\n    +                        return;\n    +                    }\n    +                }\n    +                if (!knownId) {\n    +                    LOG.warn(\"Invalid server id: \" + sid);\n    +                    return;\n    +                }\n                 }\n             }\n         }\n     \n    +    /**\n    +     * Thread to send connection request to peer server.\n    +     */\n    +    private class QuorumConnectionReqThread extends ZooKeeperThread {\n    --- End diff --\n    \n    Are you OK with this approach, or would you prefer me to change it?\n", "Fix needed for 3.5.5?"]}, {"Issue key": "ZOOKEEPER-2929", "Request type": "Bug", "Datetime creation": "2017-11-02 14:20:11", "Datetime resolution": null, "Reporter login": "mspavan052@gmail.com", "Reporter name": "Pavan", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "1. Zookeeper server deployed as a docker container in Kubernetes\r\n2. In the Java Client configured zookeeper 'domainname' for the server address \r\n3. Once we restart the Zookeeper 'POD', the Zookeeper container starting with new IP\r\n4. During this time the Zookeeper client able to resolve the new ip and making the connection But it is also keep trying to connect to old IP also. The connection status in netstat is coming as \r\n        SYNC_SENT and Connection getting closed \r\n\r\nNote: Already applied https://issues.apache.org/jira/browse/ZOOKEEPER-2184 patch \r\n\r\n", "Comments": ["[~andor] Sir,could you plz take a look at this?"]}, {"Issue key": "ZOOKEEPER-2928", "Request type": "Bug", "Datetime creation": "2017-10-30 07:59:42", "Datetime resolution": null, "Reporter login": "lnitcscq", "Reporter name": "xiaomingzhongguo", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "when call zookeeper_close \r\nthread hang at pthread_join ,  do_io thread not exist , and do_completion not exit \r\n\r\n#0  0x00002b8e38b6b725 in pthread_join () from /lib64/libpthread.so.0\r\n#1  0x0000000000cc6b86 in adaptor_finish (zh=0x2aaaaae05240) at src/mt_adaptor.c:285\r\n#2  0x0000000000cc21f3 in zookeeper_close (zh=0x2aaaaae05240) at src/zookeeper.c:2493\r\n#3  0x00000000008eeb04 in ZkAPI::ZkClose ()\r\n#4  0x00000000009270b1 in AgentInfo::zkCloseConnection ()\r\n#5  0x0000000000929e02 in AgentInfo::timeSyncHandler ()\r\n#6  0x00000000010f0585 in event_base_loop (base=0x1679d00, flags=0) at event.c:1350\r\n#7  0x0000000000924f31 in AgentInfo::run ()\r\n#8  0x00000000008998bf in gseThread::run_helper ()\r\n#9  0x0000000000922956 in tos::util_thread_start ()\r\n#10 0x00002b8e38b6a193 in start_thread () from /lib64/libpthread.so.0\r\n#11 0x00002b8e3929ff0d in clone () from /lib64/libc.so.6\r\n\r\n#0  0x00002b8e38b6e326 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0\r\n#1  0x0000000000cc70be in do_completion (v=0x2aaaaae05240) at src/mt_adaptor.c:463\r\n#2  0x00002b8e38b6a193 in start_thread () from /lib64/libpthread.so.0\r\n#3  0x00002b8e3929ff0d in clone () from /lib64/libc.so.6\r\n#4  0x0000000000000000 in ?? ()\r\n", "Comments": ["at /proc/<pid> can find exit thread info.\r\n\r\ncat /proc/<pid>/stack \r\noutput like this:\r\n[<ffffffff8109c324>] futex_wait_queue_me+0xc4/0x100\r\n[<ffffffff8109e5bc>] futex_wait+0x18c/0x270\r\n[<ffffffff8109f2bf>] do_futex+0xaf/0x1b0\r\n[<ffffffff8109f43d>] SyS_futex+0x7d/0x170\r\n[<ffffffff81ac7362>] system_call_fastpath+0x16/0x1b\r\n[<ffffffffffffffff>] 0xffffffffffffffff", "The Suse10 SP1 environment can easily trigger this bug", "This is a kernel bug or a program code bug?", "I am also hitting the exact same issue on 3.4.8 via python client. Here is the stack trace:\r\n{code:java}\r\n$ sudo strace -p 30368\r\nsudo: unable to resolve host ip-10-3-76-130\r\nstrace: Process 30368 attached\r\nfutex(0x7fd7516b69d0, FUTEX_WAIT, 30375, NULL{code}\r\n{code:java}\r\n(gdb) attach 30368\r\nAttaching to process 30368\r\n[New LWP 30373]\r\n[New LWP 30375]\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\n0x00007fd75736d98d in pthread_join () from /lib/x86_64-linux-gnu/libpthread.so.0\r\n(gdb) bt\r\n#0 0x00007fd75736d98d in pthread_join () from /lib/x86_64-linux-gnu/libpthread.so.0\r\n#1 0x00007fd753681cec in adaptor_finish (zh=0x2f1d920) at src/mt_adaptor.c:293\r\n#2 0x00007fd75367cf0c in zookeeper_close (zh=0x2f1d920) at src/zookeeper.c:2514\r\n#3 0x00007fd753670c27 in pyzoo_close (self=<optimized out>, args=<optimized out>) at src/c/zookeeper.c:1293\r\n#4 0x00000000004c45fa in PyEval_EvalFrameEx ()\r\n#5 0x00000000004c9d7f in PyEval_EvalFrameEx ()\r\n#6 0x00000000004c9d7f in PyEval_EvalFrameEx ()\r\n#7 0x00000000004c9d7f in PyEval_EvalFrameEx ()\r\n#8 0x00000000004c9d7f in PyEval_EvalFrameEx ()\r\n#9 0x00000000004c9d7f in PyEval_EvalFrameEx ()\r\n#10 0x00000000004c2705 in PyEval_EvalCodeEx ()\r\n#11 0x00000000004c24a9 in PyEval_EvalCode ()\r\n#12 0x00000000004f19ef in ?? ()\r\n#13 0x00000000004ec372 in PyRun_FileExFlags ()\r\n#14 0x00000000004eaaf1 in PyRun_SimpleFileExFlags ()\r\n#15 0x000000000049e208 in Py_Main ()\r\n#16 0x00007fd756fbb830 in __libc_start_main () from /lib/x86_64-linux-gnu/libc.so.6\r\n#17 0x000000000049da59 in _start ()\r\n{code}"]}, {"Issue key": "ZOOKEEPER-2927", "Request type": "Improvement", "Datetime creation": "2017-10-28 09:48:47", "Datetime resolution": null, "Reporter login": "xuqihong", "Reporter name": "Qihong Xu", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "When zookeeper quorum recovers from shutdown/crash, a client with a local session will reconnect to a random server in quorum. If this random-chosen server is not leader and does not own the local session previously, it will forward this session to leader for validation. And then if this is a global session, leader will update its owner, if not, leader adds Boolean false to packet and does nothing. \r\n\r\nSince our system involves mostly local session and has a large amount of connections, this procedure may be redundant and add potential pressure to leader. Is this reasonable for the reconnect scenario that local session validation not forward to leader, instead return by follower directly? \r\n", "Comments": []}, {"Issue key": "ZOOKEEPER-2926", "Request type": "Bug", "Datetime creation": "2017-10-27 23:23:08", "Datetime resolution": "2018-08-08 04:21:56", "Reporter login": "lvfangmin", "Reporter name": "Fangmin Lv", "Assignee login": "lvfangmin", "Assignee name": "Fangmin Lv", "Status": "Resolved", "Description": "The local session upgrading feature will upgrade the session locally before receving a quorum commit of creating global session. It's possible that the server shutdown before the creating session request being sent to leader, if we retained the ZKDatabase or there is Snapshot happened just before shutdown, then only this server will have the global session. \r\n\r\nIf that server didn't become leader, then it will have more global sessions than others, and those global sessions won't expire as the leader doesn't know it's existence. If the server became leader, it will accept the client renew session request and the client is allowed to create ephemeral nodes, which means other servers only have ephemeral nodes but not that global session. If there is follower going to have SNAP sync with it, then it will also have the global session. If the server without that global session becomes new leader, it will check and delete those dangling ephemeral node before serving traffic. These could introduce the issues that the ephemeral node being exist on some servers but not others. \r\n\r\nThere is dangling global session issue even without local session feature, because on leader it will update the ZKDatabase when processing ConnectionRequest and in the PrepRequestProcessor before it's quorum committed, which also has this risk.", "Comments": ["GitHub user lvfangmin opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/447\n\n    [ZOOKEEPER-2926] Fix potential data consistency issue due to the session management bug\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/lvfangmin/zookeeper ZOOKEEPER-2926\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/447.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #447\n    \n----\ncommit 04ec15841c5d164f1212eea9cdfd02e10aa4478e\nAuthor: Fangmin Lyu <allenlyu@...>\nDate:   2018-01-09T06:58:32Z\n\n    fix potential data consistency issue due to global session added too early\n\n----\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 26 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1403//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1403//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1403//console\n\nThis message is automatically generated.", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/447#discussion_r160972325\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---\n    @@ -1187,13 +1187,8 @@ private ProcessTxnResult processTxn(Request request, TxnHeader hdr,\n             if (opCode == OpCode.createSession) {\n                 if (hdr != null && txn instanceof CreateSessionTxn) {\n                     CreateSessionTxn cst = (CreateSessionTxn) txn;\n    -                sessionTracker.addGlobalSession(sessionId, cst.getTimeOut());\n    -            } else if (request != null && request.isLocalSession()) {\n    -                request.request.rewind();\n    -                int timeout = request.request.getInt();\n    -                request.request.rewind();\n    -                sessionTracker.addSession(request.sessionId, timeout);\n    -            } else {\n    +                sessionTracker.commitSession(sessionId, cst.getTimeOut());\n    +            } else if (request == null || !request.isLocalSession()) {\n    --- End diff --\n    \n    Do you need this check here?\r\n    Basically you removed the part of requesting localSession creation, because it has already happened in PrepRequestProcessor and it's safe to leave the default 'else' handler as it was.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/447#discussion_r160970304\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java ---\n    @@ -579,13 +579,8 @@ protected void pRequest2Txn(int type, long zxid, Request request,\n                     int to = request.request.getInt();\n                     request.setTxn(new CreateSessionTxn(to));\n                     request.request.rewind();\n    -                if (request.isLocalSession()) {\n    -                    // This will add to local session tracker if it is enabled\n    -                    zks.sessionTracker.addSession(request.sessionId, to);\n    -                } else {\n    -                    // Explicitly add to global session if the flag is not set\n    -                    zks.sessionTracker.addGlobalSession(request.sessionId, to);\n    -                }\n    +                // only add the global session tracker but not to ZKDb\n    +                zks.sessionTracker.addGlobalSession(request.sessionId, to);\n    --- End diff --\n    \n    You could remove this check safely, because effectively there was no difference between `addSession()` and `addGlobalSession()` calls.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/447#discussion_r160971106\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java ---\n    @@ -280,6 +278,12 @@ public synchronized boolean addSession(long id, int sessionTimeout) {\n             return added;\n         }\n     \n    +    public synchronized boolean commitSession(long id, int sessionTimeout) {\n    --- End diff --\n    \n    `sessionsWithTimeout` is a Map within ZKdb, so adding sessions to it is equivalent to persisting them.\r\n    \r\n    I think you could also remove the `addGlobalSession()` method completely, because it doesn't do anything special than forwarding the call to `addSession()`.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/447#discussion_r160976160\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java ---\n    @@ -102,32 +101,42 @@ public boolean isGlobalSession(long sessionId) {\n         }\n     \n         public boolean addGlobalSession(long sessionId, int sessionTimeout) {\n    +        // no global session tracker, do nothing\n    +        return false;\n    --- End diff --\n    \n    Is it possible to throw UnsupportedOperationException instead?\n", "Github user lvfangmin commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/447#discussion_r161296493\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java ---\n    @@ -579,13 +579,8 @@ protected void pRequest2Txn(int type, long zxid, Request request,\n                     int to = request.request.getInt();\n                     request.setTxn(new CreateSessionTxn(to));\n                     request.request.rewind();\n    -                if (request.isLocalSession()) {\n    -                    // This will add to local session tracker if it is enabled\n    -                    zks.sessionTracker.addSession(request.sessionId, to);\n    -                } else {\n    -                    // Explicitly add to global session if the flag is not set\n    -                    zks.sessionTracker.addGlobalSession(request.sessionId, to);\n    -                }\n    +                // only add the global session tracker but not to ZKDb\n    +                zks.sessionTracker.addGlobalSession(request.sessionId, to);\n    --- End diff --\n    \n    On LeaderSessionTracker, we need to differentiate add local session or global session, but since we only call createSession when add local session, I think I can simplify the interface more by removing addGlobalSession and rename addSession to trackSession.\n", "Github user lvfangmin commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/447#discussion_r161300774\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java ---\n    @@ -1187,13 +1187,8 @@ private ProcessTxnResult processTxn(Request request, TxnHeader hdr,\n             if (opCode == OpCode.createSession) {\n                 if (hdr != null && txn instanceof CreateSessionTxn) {\n                     CreateSessionTxn cst = (CreateSessionTxn) txn;\n    -                sessionTracker.addGlobalSession(sessionId, cst.getTimeOut());\n    -            } else if (request != null && request.isLocalSession()) {\n    -                request.request.rewind();\n    -                int timeout = request.request.getInt();\n    -                request.request.rewind();\n    -                sessionTracker.addSession(request.sessionId, timeout);\n    -            } else {\n    +                sessionTracker.commitSession(sessionId, cst.getTimeOut());\n    +            } else if (request == null || !request.isLocalSession()) {\n    --- End diff --\n    \n    Local session creation is happened in ZooKeeperServer when the when processing connection request, PrepRequestProcessor only deals with the global sessions.\r\n    \r\n    Local session creation will also send a createSession op into the processor pipeline, so if we remove the else check, a lot of warning log will show for local session createSession op, that's not what we wanted.\n", "Github user lvfangmin commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/447#discussion_r161296695\n  \n    --- Diff: src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java ---\n    @@ -280,6 +278,12 @@ public synchronized boolean addSession(long id, int sessionTimeout) {\n             return added;\n         }\n     \n    +    public synchronized boolean commitSession(long id, int sessionTimeout) {\n    --- End diff --\n    \n    Yes, that's kind of commit changes to ZkDB, like the usual txns commit to DataTree in ZkDB.\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 26 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1411//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1411//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1411//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/447\n  \n    @lvfangmin Have you amended your commit?\r\n    I see a lot of changes since I last reviewed this PR.\n", "Github user lvfangmin commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/447\n  \n    @anmolnar I changed the code based on your comments and did amend, is this the right process?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/447\n  \n    @lvfangmin Got it. Recently we talked about why multiple commits are better for review over squashing. Now I see why.\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/447#discussion_r161405611\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/SessionTrackerCheckTest.java ---\n    @@ -185,8 +182,8 @@ public void testLeaderSessionTracker() throws Exception {\n                     TICK_TIME, expirer.sid, false, testZKSListener());\n     \n             // Global session\n    -        sessionId = 0xdeadbeef;\n    -        tracker.addSession(sessionId, CONNECTION_TIMEOUT);\n    +        sessionId = 0xdeadbef0;\n    --- End diff --\n    \n    Why have you changed this? :)\n", "Github user lvfangmin commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/447#discussion_r161855408\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/SessionTrackerCheckTest.java ---\n    @@ -185,8 +182,8 @@ public void testLeaderSessionTracker() throws Exception {\n                     TICK_TIME, expirer.sid, false, testZKSListener());\n     \n             // Global session\n    -        sessionId = 0xdeadbeef;\n    -        tracker.addSession(sessionId, CONNECTION_TIMEOUT);\n    +        sessionId = 0xdeadbef0;\n    --- End diff --\n    \n    I think this is not changed by intention, might happen when merge patch, I'll get this fixed.\n", "Github user lvfangmin commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/447\n  \n    @anmolnar I also find it's hard to track when using overwriting the commit, I'll use stack instead.\r\n    \r\n    For the tests, I need to inject some failure in the Quorum being set up, that's why I need the customized way I'm doing in my code, I think I prefer to create a separate test class.\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 20 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1974//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1974//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1974//console\n\nThis message is automatically generated.", "Issue resolved by pull request 447\n[https://github.com/apache/zookeeper/pull/447]", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #143 (See [https://builds.apache.org/job/ZooKeeper-trunk/143/])\nZOOKEEPER-2926: Fix potential data consistency issue due to the session (hanm: rev cd209456b67cde5aba771b1a240ebe5607398459)\n* (edit) src/java/test/org/apache/zookeeper/test/ClientBase.java\n* (edit) src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java\n* (edit) src/java/test/org/apache/zookeeper/server/MockServerCnxn.java\n* (edit) src/java/main/org/apache/zookeeper/server/SessionTracker.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java\n* (edit) src/java/test/org/apache/zookeeper/server/PrepRequestProcessorTest.java\n* (add) src/java/test/org/apache/zookeeper/server/quorum/SessionUpgradeQuorumTest.java\n* (edit) src/java/test/org/apache/zookeeper/test/QuorumBase.java\n* (edit) src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java\n* (edit) src/java/test/org/apache/zookeeper/server/SessionTrackerTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java\n* (edit) src/java/test/org/apache/zookeeper/test/SessionTrackerCheckTest.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/LocalSessionTracker.java\n* (edit) src/java/main/org/apache/zookeeper/server/ServerCnxn.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/LeaderSessionTracker.java\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/UpgradeableSessionTracker.java\n"]}, {"Issue key": "ZOOKEEPER-2925", "Request type": "Bug", "Datetime creation": "2017-10-27 22:16:03", "Datetime resolution": null, "Reporter login": "rthille", "Reporter name": "Robert P. Thille", "Assignee login": null, "Assignee name": null, "Status": "Patch Available", "Description": "Due to two threads trying to create the dataDir and snapDir, and the java.io.File.mkdirs() call returning false both for errors and for the directory already existing, sometimes ZooKeeper will fail to start with the following stack trace:\r\n\r\n{noformat}\r\n2017-10-25 22:30:40,069 [myid:] - INFO  [main:ZooKeeperServerMain@95] - Starting server\r\n2017-10-25 22:30:40,075 [myid:] - INFO  [main:Environment@100] - Server environment:zookeeper.version=3.4.6-mdavis8efb625--1, built on 10/25/2017 01:12 GMT\r\n\r\n[ More 'Server environment:blah blah blah' messages trimmed]\r\n\r\n2017-10-25 22:30:40,077 [myid:] - INFO  [main:Environment@100] - Server environment:user.dir=/\r\n2017-10-25 22:30:40,081 [myid:] - ERROR [main:ZooKeeperServerMain@63] - Unexpected exception, exiting abnormally\r\njava.io.IOException: Unable to create data directory /bp2/data/version-2\r\n    at org.apache.zookeeper.server.persistence.FileTxnSnapLog.<init>(FileTxnSnapLog.java:85)\r\n    at org.apache.zookeeper.server.ZooKeeperServerMain.runFromConfig(ZooKeeperServerMain.java:104)\r\n    at org.apache.zookeeper.server.ZooKeeperServerMain.initializeAndRun(ZooKeeperServerMain.java:86)\r\n    at org.apache.zookeeper.server.ZooKeeperServerMain.main(ZooKeeperServerMain.java:52)\r\n    at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:116)\r\n    at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:78)\r\n2017-10-25 22:30:40,085 [myid:] - INFO  [PurgeTask:DatadirCleanupManager$PurgeTask@144] - Purge task completed.\r\n{noformat}\r\n\r\nthis is caused by the QuorumPeerMain thread and the PurgeTask thread both competing to create the directories.", "Comments": ["Attaching ZOOKEEPER-2925.patch", "[~rthille]  Thanks for reporting this issue.\r\nI also faced this issue recently. This issue is in all the branches.  Can you raise pull request. I will be happy review it.", "On quick comment is\r\ninstead of depending on exception and message can we synchronize  dataDir and snapDir creation.\r\nExample:\r\n{code}\r\nif (!this.dataDir.exists()) {\r\n            synchronized (FileTxnSnapLog.class)\r\n            {\r\n                if (!this.dataDir.exists()) {\r\n              //other existing code\r\n}\r\n        if (!this.snapDir.exists()) {\r\n            synchronized (FileTxnSnapLog.class)\r\n            {\r\n                if (!this.snapDir.exists()) {\r\n //other existing code\r\n{code}", "Looks like this issue is not addressed yet. And this seems a good starter ticket for me since I am trying to involve in the community, I can make a pull request if there is no objection. Thanks! cc: [~arshad.mohammad] [~rthille]", "-1 overall.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12894475/ZOOKEEPER-2925.patch\n  against trunk revision 7b679bc9dd98f06ee10bbb0978cfee5dab7b74dc.\n\n    +1 @author.  The patch does not contain any @author tags.\n\n    -1 tests included.  The patch doesn't appear to include any new or modified tests.\n                        Please justify why no new tests are needed for this patch.\n                        Also please list what manual steps were performed to verify this patch.\n\n    -1 patch.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/3706//console\n\nThis message is automatically generated.", "Hi [~dineshappavoo]\r\nWelcome to the community!\r\nFeel free to pick this up and investigate. I haven't faced this issue before, but if you can reproduce it, this will be a good one to work on.\r\nThanks for the contribution and happy coding!", "[~dineshappavoo], no objection at all, please go ahead and raise the pull request", "Thank you for the warm welcome [~andor] and [~arshad.mohammad]. I didn't try to reproduce it yet. I was looking for starter tickets and I thought it would be a good start. I will try to reproduce it. Also feel free to tag me in any newbie ticket you think it would be a good starter for me. That would be really helpful. Thanks!", "Reproducible in branch-3.5?"]}, {"Issue key": "ZOOKEEPER-2924", "Request type": "Bug", "Datetime creation": "2017-10-26 14:31:54", "Datetime resolution": "2017-12-12 18:01:24", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "andorm", "Assignee name": "Andor Molnar", "Status": "Resolved", "Description": "From https://builds.apache.org/job/ZooKeeper_branch34_openjdk7/1682/\r\n\r\nSame issue happens in jdk8 and jdk9 builds as well.\r\n\r\nIssue has already been fixed by https://issues.apache.org/jira/browse/ZOOKEEPER-2484 , but I believe that the root cause here is that test startup / cleanup code is included in the tests instead of using try-finally block or Before-After methods.\r\n\r\nAs a consequence, when exception happens during test execution, ZK test server doesn't get shutdown properly and still listening on the port bound to the test class.\r\n\r\nAs mentioned above there could be 2 approaches to address this:\r\n#1 Wrap cleanup code block with finally\r\n#2 Use JUnit's Before-After methods for initialization and cleanup\r\n\r\nTest where original issue happens:\r\n\r\n{noformat}\r\n...   \r\n     [junit] 2017-10-12 15:05:20,135 [myid:] - INFO  [ProcessThread(sid:0 cport:11221)::PrepRequestProcessor@653] - Got user-level KeeperException when processing sessionid:0x104cd7b190c0000 type:create cxid:0x8c zxid:0x8d txntype:-1 req$\r\n     [junit] 2017-10-12 15:05:20,137 [myid:] - INFO  [ProcessThread(sid:0 cport:11221)::PrepRequestProcessor@653] - Got user-level KeeperException when processing sessionid:0x104cd7b190c0000 type:create cxid:0x8d zxid:0x8e txntype:-1 req$\r\n     [junit] 2017-10-12 15:05:20,139 [myid:] - INFO  [ProcessThread(sid:0 cport:11221)::PrepRequestProcessor@653] - Got user-level KeeperException when processing sessionid:0x104cd7b190c0000 type:create cxid:0x8e zxid:0x8f txntype:-1 req$\r\n     [junit] 2017-10-12 15:05:20,142 [myid:] - INFO  [ProcessThread(sid:0 cport:11221)::PrepRequestProcessor@653] - Got user-level KeeperException when processing sessionid:0x104cd7b190c0000 type:create cxid:0x8f zxid:0x90 txntype:-1 req$\r\n     [junit] 2017-10-12 15:05:20,144 [myid:] - INFO  [ProcessThread(sid:0 cport:11221)::PrepRequestProcessor@653] - Got user-level KeeperException when processing sessionid:0x104cd7b190c0000 type:create cxid:0x90 zxid:0x91 txntype:-1 req$\r\n     [junit] 2017-10-12 15:05:30,479 [myid:] - INFO  [SessionTracker:ZooKeeperServer@354] - Expiring session 0x104cd7b190c0000, timeout of 6000ms exceeded\r\n     [junit] 2017-10-12 15:05:32,996 [myid:] - INFO  [ProcessThread(sid:0 cport:11221)::PrepRequestProcessor@653] - Got user-level KeeperException when processing sessionid:0x104cd7b190c0000 type:ping cxid:0xfffffffffffffffe zxid:0xfffff$\r\n     [junit] 2017-10-12 15:05:24,147 [myid:] - WARN  [main-SendThread(127.0.0.1:11221):ClientCnxn$SendThread@1111] - Client session timed out, have not heard from server in 4002ms for sessionid 0x104cd7b190c0000\r\n     [junit] 2017-10-12 15:05:32,996 [myid:] - INFO  [main-SendThread(127.0.0.1:11221):ClientCnxn$SendThread@1159] - Client session timed out, have not heard from server in 4002ms for sessionid 0x104cd7b190c0000, closing socket connectio$\r\n     [junit] 2017-10-12 15:05:21,479 [myid:] - INFO  [SessionTracker:SessionTrackerImpl@163] - SessionTrackerImpl exited loop!\r\n     [junit] 2017-10-12 15:05:32,998 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:NIOServerCnxn@376] - Unable to read additional data from client sessionid 0x104cd7b190c0000, likely client has closed socket\r\n     [junit] 2017-10-12 15:05:33,067 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:11221:NIOServerCnxn@1040] - Closed socket connection for client /127.0.0.1:45735 which had sessionid 0x104cd7b190c0000\r\n     [junit] 2017-10-12 15:05:32,996 [myid:] - INFO  [ProcessThread(sid:0 cport:11221)::PrepRequestProcessor@487] - Processed session termination for sessionid: 0x104cd7b190c0000\r\n     [junit] 2017-10-12 15:05:33,889 [myid:] - INFO  [main:ZooKeeper@687] - Session: 0x104cd7b190c0000 closed\r\n     [junit] 2017-10-12 15:05:33,890 [myid:] - INFO  [main-EventThread:ClientCnxn$EventThread@520] - EventThread shut down for session: 0x104cd7b190c0000\r\n     [junit] 2017-10-12 15:05:33,891 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@74] - TEST METHOD FAILED testRestoreWithTransactionErrors\r\n     [junit] org.apache.zookeeper.KeeperException$ConnectionLossException: KeeperErrorCode = ConnectionLoss for /invaliddir/test-\r\n     [junit]     at org.apache.zookeeper.KeeperException.create(KeeperException.java:102)\r\n     [junit]     at org.apache.zookeeper.KeeperException.create(KeeperException.java:54)\r\n     [junit]     at org.apache.zookeeper.ZooKeeper.create(ZooKeeper.java:786)\r\n     [junit]     at org.apache.zookeeper.test.LoadFromLogTest.testRestoreWithTransactionErrors(LoadFromLogTest.java:368)\r\n     [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n     [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n     [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n     [junit]     at java.lang.reflect.Method.invoke(Method.java:606)\r\n     [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\r\n     [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n     [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\r\n     [junit]     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\r\n     [junit]     at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:55)\r\n     [junit]     at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)\r\n     [junit]     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\r\n     [junit]     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n     [junit]     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\r\n     [junit]     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\r\n     [junit]     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\r\n     [junit]     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\r\n     [junit]     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\r\n     [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\r\n     [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\r\n     [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:535)\r\n     [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1182)\r\n     [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1033)\r\n{noformat}\r\n\r\nTest #2 where port is already in use:\r\n\r\n{noformat}\r\n     [junit] 2017-10-12 15:05:33,899 [myid:] - INFO  [main:ZKTestCase$1@59] - STARTING testReloadSnapshotWithMissingParent\r\n     [junit] 2017-10-12 15:05:33,899 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@53] - RUNNING TEST METHOD testReloadSnapshotWithMissingParent\r\n     [junit] 2017-10-12 15:05:33,900 [myid:] - INFO  [main:ZooKeeperServer@173] - Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000 datadir /home/jenkins/jenkins-slave/workspace/ZooKeeper_branch34_openjdk7/$\r\n     [junit] 2017-10-12 15:05:33,900 [myid:] - INFO  [main:ServerCnxnFactory@117] - Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory\r\n     [junit] 2017-10-12 15:05:33,900 [myid:] - INFO  [main:NIOServerCnxnFactory@89] - binding to port 0.0.0.0/0.0.0.0:11221\r\n     [junit] 2017-10-12 15:05:33,901 [myid:] - INFO  [main:JUnit4ZKTestRunner$LoggedInvokeMethod@74] - TEST METHOD FAILED testReloadSnapshotWithMissingParent\r\n     [junit] java.net.BindException: Address already in use\r\n     [junit]     at sun.nio.ch.Net.bind0(Native Method)\r\n     [junit]     at sun.nio.ch.Net.bind(Net.java:463)\r\n     [junit]     at sun.nio.ch.Net.bind(Net.java:455)\r\n     [junit]     at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)\r\n     [junit]     at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)\r\n     [junit]     at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:67)\r\n     [junit]     at org.apache.zookeeper.server.NIOServerCnxnFactory.configure(NIOServerCnxnFactory.java:90)\r\n     [junit]     at org.apache.zookeeper.server.ServerCnxnFactory.createFactory(ServerCnxnFactory.java:137)\r\n     [junit]     at org.apache.zookeeper.server.ServerCnxnFactory.createFactory(ServerCnxnFactory.java:130)\r\n     [junit]     at org.apache.zookeeper.test.LoadFromLogTest.testReloadSnapshotWithMissingParent(LoadFromLogTest.java:412)\r\n     [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n     [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n     [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n     [junit]     at java.lang.reflect.Method.invoke(Method.java:606)\r\n     [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\r\n     [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\r\n     [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\r\n     [junit]     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\r\n     [junit]     at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:55)\r\n     [junit]     at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)\r\n     [junit]     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\r\n     [junit]     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n     [junit]     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\r\n     [junit]     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\r\n     [junit]     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\r\n     [junit]     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\r\n     [junit]     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\r\n     [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\r\n     [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)\r\n     [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:535)\r\n     [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1182)\r\n     [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1033)\r\n{noformat}\r\n", "Comments": ["I think solution #2 would be the way to go. It is inline with what we do in other tests. ", "GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/409\n\n    ZOOKEEPER-2924: Refactor tests of LoadFromLogTest.java\n\n    Tests which don't need ZK test server to run have been extracted to\r\n    LoadFromLogNoServerTest.java.\r\n    Rest of them have been refactored to do init/shutdown in JUnit\r\n    Before/After methods.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2924\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/409.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #409\n    \n----\ncommit 552a7d2a8e4afe297fa36042fd60d7c55a00e9e5\nAuthor: Andor Moln\u00e1r <andor@cloudera.com>\nDate:   2017-10-27T09:49:07Z\n\n    ZOOKEEPER-2924: Refactor tests of LoadFromLogTest.java\n    \n    Tests which don't need ZK test server to run have been extracted to\n    LoadFromLogNoServerTest.java.\n    Rest of them have been refactored to do init/shutdown in JUnit\n    Before/After methods.\n\n----\n", "The refactor doesn't fix the original problem though: the ConnectionLossException.\r\nI'm planning to create another Jira on implementing some nice retry logic for that once this one has been accepted.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1124//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1124//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1124//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/409\n  \n    Thanks @afine . I've updated the PR.\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1127//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1127//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1127//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/409\n  \n    @phunt would you please kindly commit this patch?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/409\n  \n    @phunt Do you think we can merge this now into branch-3.4?\n", "GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/420\n\n    ZOOKEEPER-2924. Refactor tests of LoadFromLogTest.java\n\n    This patch is the trunk version of https://github.com/apache/zookeeper/pull/409\r\n\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2924-trunk\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/420.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #420\n    \n----\ncommit c2fa3e179bc73937863176ec8538cb065b38ee30\nAuthor: Andor Moln\u00e1r <andor@cloudera.com>\nDate:   2017-11-17T09:52:26Z\n\n    ZOOKEEPER-2924. Refactor tests of LoadFromLogTest.java\n\n----\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1239//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1239//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1239//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1240//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1240//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1240//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1241//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1241//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1241//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1242//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1242//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1242//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1237//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1237//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1237//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1238//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1238//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1238//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1245//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1245//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1245//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1246//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1246//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1246//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1244//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1244//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1244//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1243//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1243//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1243//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1247//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1247//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1247//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1248//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1248//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1248//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1275//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1275//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1275//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    -1 findbugs.  The patch appears to cause Findbugs (version 3.0.1) to fail.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1276//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1276//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1277//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1277//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1277//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1278//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1278//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1278//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    -1 contrib tests.  The patch failed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1279//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1279//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1279//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1280//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1280//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1280//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1292//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1292//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1292//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1304//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1304//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1304//console\n\nThis message is automatically generated.", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 33 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1305//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1305//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1305//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/420\n  \n    @phunt I rebased the branch on trunk and the build is now green. Thanks.\r\n    Please review.\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/420#discussion_r153354717\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java ---\n    @@ -69,25 +54,42 @@\n         private static final int TRANSACTION_OVERHEAD = 2;\n         private static final int TOTAL_TRANSACTIONS = NUM_MESSAGES + TRANSACTION_OVERHEAD;\n     \n    -    /**\n    -     * test that all transactions from the Log are loaded, and only once\n    -     * @throws Exception an exception might be thrown here\n    -     */\n    -    @Test\n    -    public void testLoad() throws Exception {\n    -        final String hostPort = HOST + PortAssignment.unique();\n    +    private String hostPort;\n    +    private int port;\n    +    private ZooKeeper zk;\n    +    private ServerCnxnFactory serverCnxnFactory;\n    +    private File tmpDir;\n    +    private ZooKeeperServer zks;\n    +\n    +    @Before\n    +    public void setUp() throws Exception {\n    +        hostPort = HOST + PortAssignment.unique();\n    --- End diff --\n    \n    While you're in here can you also fix this? We should be using this value from ClientBase. Is there a reason why we can't convert this class over to subclass ClientBase?\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/420#discussion_r153354864\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java ---\n    @@ -69,25 +54,42 @@\n         private static final int TRANSACTION_OVERHEAD = 2;\n         private static final int TOTAL_TRANSACTIONS = NUM_MESSAGES + TRANSACTION_OVERHEAD;\n     \n    -    /**\n    -     * test that all transactions from the Log are loaded, and only once\n    -     * @throws Exception an exception might be thrown here\n    -     */\n    -    @Test\n    -    public void testLoad() throws Exception {\n    -        final String hostPort = HOST + PortAssignment.unique();\n    +    private String hostPort;\n    +    private int port;\n    +    private ZooKeeper zk;\n    +    private ServerCnxnFactory serverCnxnFactory;\n    +    private File tmpDir;\n    +    private ZooKeeperServer zks;\n    +\n    +    @Before\n    +    public void setUp() throws Exception {\n    +        hostPort = HOST + PortAssignment.unique();\n    +        port = Integer.parseInt(hostPort.split(\":\")[1]);\n    +\n             // setup a single server cluster\n    -        File tmpDir = ClientBase.createTmpDir();\n    +        tmpDir = ClientBase.createTmpDir();\n             ClientBase.setupTestEnv();\n    -        ZooKeeperServer zks = new ZooKeeperServer(tmpDir, tmpDir, 3000);\n    +        zks = new ZooKeeperServer(tmpDir, tmpDir, 3000);\n             SyncRequestProcessor.setSnapCount(100);\n    -        final int PORT = Integer.parseInt(hostPort.split(\":\")[1]);\n    -        ServerCnxnFactory f = ServerCnxnFactory.createFactory(PORT, -1);\n    -        f.startup(zks);\n    +        serverCnxnFactory = ServerCnxnFactory.createFactory(port, -1);\n    +        serverCnxnFactory.startup(zks);\n             Assert.assertTrue(\"waiting for server being up \",\n                     ClientBase.waitForServerUp(hostPort,CONNECTION_TIMEOUT));\n    --- End diff --\n    \n    Notice the issue here - this class has defined it's own constant for CONNECTION_TIMEOUT which is too small. If we were a subclass of ClientBase this would be handled for us already (incl the setup and teardown).\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/409\n  \n    Same comments as in #420 \n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 34 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1315//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1315//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1315//console\n\nThis message is automatically generated.", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/420#discussion_r153584084\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java ---\n    @@ -18,77 +18,58 @@\n     \n     package org.apache.zookeeper.test;\n     \n    -import java.io.ByteArrayOutputStream;\n     import java.io.File;\n    -import java.io.FileInputStream;\n     import java.io.IOException;\n    -import java.nio.ByteBuffer;\n    -import java.util.ArrayList;\n    -import java.util.List;\n    -\n    -import org.apache.zookeeper.common.Time;\n    -import org.apache.jute.BinaryInputArchive;\n    -import org.apache.jute.BinaryOutputArchive;\n    -import org.apache.jute.Record;\n    +\n     import org.apache.zookeeper.CreateMode;\n     import org.apache.zookeeper.KeeperException.NoNodeException;\n    -import org.apache.zookeeper.PortAssignment;\n    -import org.apache.zookeeper.ZKTestCase;\n     import org.apache.zookeeper.ZooDefs.Ids;\n    -import org.apache.zookeeper.ZooDefs.OpCode;\n     import org.apache.zookeeper.ZooKeeper;\n     import org.apache.zookeeper.data.Stat;\n    -import org.apache.zookeeper.server.DataNode;\n    -import org.apache.zookeeper.server.DataTree;\n     import org.apache.zookeeper.server.ServerCnxnFactory;\n     import org.apache.zookeeper.server.SyncRequestProcessor;\n     import org.apache.zookeeper.server.ZooKeeperServer;\n    -import org.apache.zookeeper.server.persistence.FileHeader;\n     import org.apache.zookeeper.server.persistence.FileTxnLog;\n     import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n     import org.apache.zookeeper.server.persistence.Util;\n     import org.apache.zookeeper.server.persistence.FileTxnLog.FileTxnIterator;\n     import org.apache.zookeeper.server.persistence.TxnLog.TxnIterator;\n    -import org.apache.zookeeper.txn.CreateTxn;\n    -import org.apache.zookeeper.txn.DeleteTxn;\n    -import org.apache.zookeeper.txn.MultiTxn;\n    -import org.apache.zookeeper.txn.Txn;\n     import org.apache.zookeeper.txn.TxnHeader;\n    +import org.eclipse.jetty.util.SocketAddressResolver;\n    +import org.junit.After;\n     import org.junit.Assert;\n    +import org.junit.Before;\n     import org.junit.Test;\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    -public class LoadFromLogTest extends ZKTestCase {\n    -    private static final String HOST = \"127.0.0.1:\";\n    -    private static final int CONNECTION_TIMEOUT = 3000;\n    +public class LoadFromLogTest extends ClientBase {\n         private static final int NUM_MESSAGES = 300;\n         protected static final Logger LOG = LoggerFactory.getLogger(LoadFromLogTest.class);\n     \n         // setting up the quorum has a transaction overhead for creating and closing the session\n         private static final int TRANSACTION_OVERHEAD = 2;\n         private static final int TOTAL_TRANSACTIONS = NUM_MESSAGES + TRANSACTION_OVERHEAD;\n     \n    +    @Before\n    +    public void setUp() throws Exception {\n    +        SyncRequestProcessor.setSnapCount(100);\n    +        super.setUp();\n    +    }\n    +\n    +    @After\n    +    public void tearDown() throws Exception {\n    +        stopServer();\n    --- End diff --\n    \n    shouldn't this should be calling super.tearDown() ?\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/420#discussion_r153591967\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java ---\n    @@ -136,21 +113,10 @@ public void testLoad() throws Exception {\n          */\n         @Test\n         public void testLoadFailure() throws Exception {\n    -        final String hostPort = HOST + PortAssignment.unique();\n    -        // setup a single server cluster\n    -        File tmpDir = ClientBase.createTmpDir();\n    -        ClientBase.setupTestEnv();\n    -        ZooKeeperServer zks = new ZooKeeperServer(tmpDir, tmpDir, 3000);\n    -        // So we have at least 4 logs\n             SyncRequestProcessor.setSnapCount(50);\n    --- End diff --\n    \n    iiuc the server has already been started in setUp method and as a result this will have no effect. Am I reading that right. Instead you might need to set this then call setUp.\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/420#discussion_r153592257\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java ---\n    @@ -370,20 +202,17 @@ public void testRestore() throws Exception {\n             // Force snapshot and restore\n             zks.takeSnapshot();\n             zks.shutdown();\n    -        f.shutdown();\n    +        stopServer();\n     \n    -        zks = new ZooKeeperServer(tmpDir, tmpDir, 3000);\n             SyncRequestProcessor.setSnapCount(10000);\n    --- End diff --\n    \n    I believe this is ok as the server is restarted (but you might want to verify).\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/420#discussion_r153592781\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java ---\n    @@ -449,50 +267,25 @@ public void testRestoreWithTransactionErrors() throws Exception {\n             // Force snapshot and restore\n             zks.takeSnapshot();\n             zks.shutdown();\n    -        f.shutdown();\n    +        stopServer();\n     \n             zks = new ZooKeeperServer(tmpDir, tmpDir, 3000);\n             SyncRequestProcessor.setSnapCount(10000);\n    -        f = ServerCnxnFactory.createFactory(PORT, -1);\n    -        f.startup(zks);\n    -        Assert.assertTrue(\"waiting for server being up \", ClientBase\n    -                .waitForServerUp(hostPort, CONNECTION_TIMEOUT));\n    -\n    -        f.shutdown();\n    -        zks.shutdown();\n    +        startServer();\n         }\n     \n         /**\n          * Verify snap/log dir create with/without autocreate enabled.\n          */\n         @Test\n         public void testDatadirAutocreate() throws Exception {\n    -        ClientBase.setupTestEnv();\n    --- End diff --\n    \n    not sure if it matters here and in the following test method but the snapcount is different after the current patch.\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/420#discussion_r153591342\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java ---\n    @@ -18,77 +18,58 @@\n     \n     package org.apache.zookeeper.test;\n     \n    -import java.io.ByteArrayOutputStream;\n     import java.io.File;\n    -import java.io.FileInputStream;\n     import java.io.IOException;\n    -import java.nio.ByteBuffer;\n    -import java.util.ArrayList;\n    -import java.util.List;\n    -\n    -import org.apache.zookeeper.common.Time;\n    -import org.apache.jute.BinaryInputArchive;\n    -import org.apache.jute.BinaryOutputArchive;\n    -import org.apache.jute.Record;\n    +\n     import org.apache.zookeeper.CreateMode;\n     import org.apache.zookeeper.KeeperException.NoNodeException;\n    -import org.apache.zookeeper.PortAssignment;\n    -import org.apache.zookeeper.ZKTestCase;\n     import org.apache.zookeeper.ZooDefs.Ids;\n    -import org.apache.zookeeper.ZooDefs.OpCode;\n     import org.apache.zookeeper.ZooKeeper;\n     import org.apache.zookeeper.data.Stat;\n    -import org.apache.zookeeper.server.DataNode;\n    -import org.apache.zookeeper.server.DataTree;\n     import org.apache.zookeeper.server.ServerCnxnFactory;\n     import org.apache.zookeeper.server.SyncRequestProcessor;\n     import org.apache.zookeeper.server.ZooKeeperServer;\n    -import org.apache.zookeeper.server.persistence.FileHeader;\n     import org.apache.zookeeper.server.persistence.FileTxnLog;\n     import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n     import org.apache.zookeeper.server.persistence.Util;\n     import org.apache.zookeeper.server.persistence.FileTxnLog.FileTxnIterator;\n     import org.apache.zookeeper.server.persistence.TxnLog.TxnIterator;\n    -import org.apache.zookeeper.txn.CreateTxn;\n    -import org.apache.zookeeper.txn.DeleteTxn;\n    -import org.apache.zookeeper.txn.MultiTxn;\n    -import org.apache.zookeeper.txn.Txn;\n     import org.apache.zookeeper.txn.TxnHeader;\n    +import org.eclipse.jetty.util.SocketAddressResolver;\n    +import org.junit.After;\n     import org.junit.Assert;\n    +import org.junit.Before;\n     import org.junit.Test;\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    -public class LoadFromLogTest extends ZKTestCase {\n    -    private static final String HOST = \"127.0.0.1:\";\n    -    private static final int CONNECTION_TIMEOUT = 3000;\n    +public class LoadFromLogTest extends ClientBase {\n         private static final int NUM_MESSAGES = 300;\n         protected static final Logger LOG = LoggerFactory.getLogger(LoadFromLogTest.class);\n     \n         // setting up the quorum has a transaction overhead for creating and closing the session\n         private static final int TRANSACTION_OVERHEAD = 2;\n         private static final int TOTAL_TRANSACTIONS = NUM_MESSAGES + TRANSACTION_OVERHEAD;\n     \n    +    @Before\n    +    public void setUp() throws Exception {\n    +        SyncRequestProcessor.setSnapCount(100);\n    --- End diff --\n    \n    Unfortunately this is going to have the side-effect that all servers of all the tests in this class will be started with a snapCount of 100. Subsequently setting this value in the test itself will have no effect as the server has already been started (syncprocessor thread running). Unless the server is restarted of course.\r\n    \r\n    See comments below and please verify this finding yourself.\r\n    \r\n    I'm thinking that you might need to make this setup empty, and call setUp from the very beginning of the test after setting the count explicitly.\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/420#discussion_r153592079\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java ---\n    @@ -332,20 +173,10 @@ public void testPad() throws Exception {\n          */\n         @Test\n         public void testRestore() throws Exception {\n    -        final String hostPort = HOST + PortAssignment.unique();\n    -        // setup a single server cluster\n    -        File tmpDir = ClientBase.createTmpDir();\n    -        ClientBase.setupTestEnv();\n    -        ZooKeeperServer zks = new ZooKeeperServer(tmpDir, tmpDir, 3000);\n             SyncRequestProcessor.setSnapCount(10000);\n    --- End diff --\n    \n    Same issue here...\n", "Github user phunt commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/420#discussion_r153592393\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java ---\n    @@ -413,20 +240,10 @@ public void testRestore() throws Exception {\n          */\n         @Test\n         public void testRestoreWithTransactionErrors() throws Exception {\n    -        final String hostPort = HOST + PortAssignment.unique();\n    -        // setup a single server cluster\n    -        File tmpDir = ClientBase.createTmpDir();\n    -        ClientBase.setupTestEnv();\n    -        ZooKeeperServer zks = new ZooKeeperServer(tmpDir, tmpDir, 3000);\n             SyncRequestProcessor.setSnapCount(10000);\n    --- End diff --\n    \n    same...\n", "Github user anmolnar commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/420#discussion_r153610044\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java ---\n    @@ -18,77 +18,58 @@\n     \n     package org.apache.zookeeper.test;\n     \n    -import java.io.ByteArrayOutputStream;\n     import java.io.File;\n    -import java.io.FileInputStream;\n     import java.io.IOException;\n    -import java.nio.ByteBuffer;\n    -import java.util.ArrayList;\n    -import java.util.List;\n    -\n    -import org.apache.zookeeper.common.Time;\n    -import org.apache.jute.BinaryInputArchive;\n    -import org.apache.jute.BinaryOutputArchive;\n    -import org.apache.jute.Record;\n    +\n     import org.apache.zookeeper.CreateMode;\n     import org.apache.zookeeper.KeeperException.NoNodeException;\n    -import org.apache.zookeeper.PortAssignment;\n    -import org.apache.zookeeper.ZKTestCase;\n     import org.apache.zookeeper.ZooDefs.Ids;\n    -import org.apache.zookeeper.ZooDefs.OpCode;\n     import org.apache.zookeeper.ZooKeeper;\n     import org.apache.zookeeper.data.Stat;\n    -import org.apache.zookeeper.server.DataNode;\n    -import org.apache.zookeeper.server.DataTree;\n     import org.apache.zookeeper.server.ServerCnxnFactory;\n     import org.apache.zookeeper.server.SyncRequestProcessor;\n     import org.apache.zookeeper.server.ZooKeeperServer;\n    -import org.apache.zookeeper.server.persistence.FileHeader;\n     import org.apache.zookeeper.server.persistence.FileTxnLog;\n     import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n     import org.apache.zookeeper.server.persistence.Util;\n     import org.apache.zookeeper.server.persistence.FileTxnLog.FileTxnIterator;\n     import org.apache.zookeeper.server.persistence.TxnLog.TxnIterator;\n    -import org.apache.zookeeper.txn.CreateTxn;\n    -import org.apache.zookeeper.txn.DeleteTxn;\n    -import org.apache.zookeeper.txn.MultiTxn;\n    -import org.apache.zookeeper.txn.Txn;\n     import org.apache.zookeeper.txn.TxnHeader;\n    +import org.eclipse.jetty.util.SocketAddressResolver;\n    +import org.junit.After;\n     import org.junit.Assert;\n    +import org.junit.Before;\n     import org.junit.Test;\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    -public class LoadFromLogTest extends ZKTestCase {\n    -    private static final String HOST = \"127.0.0.1:\";\n    -    private static final int CONNECTION_TIMEOUT = 3000;\n    +public class LoadFromLogTest extends ClientBase {\n         private static final int NUM_MESSAGES = 300;\n         protected static final Logger LOG = LoggerFactory.getLogger(LoadFromLogTest.class);\n     \n         // setting up the quorum has a transaction overhead for creating and closing the session\n         private static final int TRANSACTION_OVERHEAD = 2;\n         private static final int TOTAL_TRANSACTIONS = NUM_MESSAGES + TRANSACTION_OVERHEAD;\n     \n    +    @Before\n    +    public void setUp() throws Exception {\n    +        SyncRequestProcessor.setSnapCount(100);\n    +        super.setUp();\n    +    }\n    +\n    +    @After\n    +    public void tearDown() throws Exception {\n    +        stopServer();\n    --- End diff --\n    \n    Good point. super.tearDown() includes stopServer() so I'll remove this one completely.\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/420#discussion_r153652218\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java ---\n    @@ -18,77 +18,58 @@\n     \n     package org.apache.zookeeper.test;\n     \n    -import java.io.ByteArrayOutputStream;\n     import java.io.File;\n    -import java.io.FileInputStream;\n     import java.io.IOException;\n    -import java.nio.ByteBuffer;\n    -import java.util.ArrayList;\n    -import java.util.List;\n    -\n    -import org.apache.zookeeper.common.Time;\n    -import org.apache.jute.BinaryInputArchive;\n    -import org.apache.jute.BinaryOutputArchive;\n    -import org.apache.jute.Record;\n    +\n     import org.apache.zookeeper.CreateMode;\n     import org.apache.zookeeper.KeeperException.NoNodeException;\n    -import org.apache.zookeeper.PortAssignment;\n    -import org.apache.zookeeper.ZKTestCase;\n     import org.apache.zookeeper.ZooDefs.Ids;\n    -import org.apache.zookeeper.ZooDefs.OpCode;\n     import org.apache.zookeeper.ZooKeeper;\n     import org.apache.zookeeper.data.Stat;\n    -import org.apache.zookeeper.server.DataNode;\n    -import org.apache.zookeeper.server.DataTree;\n     import org.apache.zookeeper.server.ServerCnxnFactory;\n     import org.apache.zookeeper.server.SyncRequestProcessor;\n     import org.apache.zookeeper.server.ZooKeeperServer;\n    -import org.apache.zookeeper.server.persistence.FileHeader;\n     import org.apache.zookeeper.server.persistence.FileTxnLog;\n     import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n     import org.apache.zookeeper.server.persistence.Util;\n     import org.apache.zookeeper.server.persistence.FileTxnLog.FileTxnIterator;\n     import org.apache.zookeeper.server.persistence.TxnLog.TxnIterator;\n    -import org.apache.zookeeper.txn.CreateTxn;\n    -import org.apache.zookeeper.txn.DeleteTxn;\n    -import org.apache.zookeeper.txn.MultiTxn;\n    -import org.apache.zookeeper.txn.Txn;\n     import org.apache.zookeeper.txn.TxnHeader;\n    +import org.eclipse.jetty.util.SocketAddressResolver;\n    +import org.junit.After;\n     import org.junit.Assert;\n    +import org.junit.Before;\n     import org.junit.Test;\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    -public class LoadFromLogTest extends ZKTestCase {\n    -    private static final String HOST = \"127.0.0.1:\";\n    -    private static final int CONNECTION_TIMEOUT = 3000;\n    +public class LoadFromLogTest extends ClientBase {\n         private static final int NUM_MESSAGES = 300;\n         protected static final Logger LOG = LoggerFactory.getLogger(LoadFromLogTest.class);\n     \n         // setting up the quorum has a transaction overhead for creating and closing the session\n         private static final int TRANSACTION_OVERHEAD = 2;\n         private static final int TOTAL_TRANSACTIONS = NUM_MESSAGES + TRANSACTION_OVERHEAD;\n     \n    +    @Before\n    +    public void setUp() throws Exception {\n    +        SyncRequestProcessor.setSnapCount(100);\n    --- End diff --\n    \n    I think @phunt is mostly correct. There are a couple issues with `snapCount`. \r\n    \r\n    First, if want to change it while the syncProcessor thread has started, shouldn't it be volatile? \r\n    \r\n    Second, I disagree that it has \"no effect\" on a server that has already been started but the effect is not the desired behavior. Taking the issue of the `snapCount` field not being volatile out of the picture, the code in `SyncProcessor` looks like:\r\n    ```java\r\n        public void run() {\r\n            try {\r\n                int randRoll = r.nextInt(snapCount/2);\r\n                while (true) {\r\n                    Request si = null;\r\n                    //get a request\r\n                    if (si != null) {\r\n                        // track the number of records written to the log\r\n                        if (zks.getZKDatabase().append(si)) {\r\n                            logCount++;\r\n                            if (logCount > (snapCount / 2 + randRoll)) {\r\n                                randRoll = r.nextInt(snapCount/2);\r\n    ```\r\n    \r\n    So my reading is that if `snapCount` is changed from `previousSnapCount` while the `SyncProcessor` is already running to `desiredSnapCount` it will take at least `desiredSnapCount` and at worst `desiredSnapCount + previousSnapCount/2` transactions for the \"effective\" `snapCount` to become `desiredSnapCount` (again ignoring the volatility issue).\r\n    \r\n    I agree with @phunt's solution.\r\n\n", "Github user afine commented on a diff in the pull request:\n\n    https://github.com/apache/zookeeper/pull/420#discussion_r153636108\n  \n    --- Diff: src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java ---\n    @@ -18,77 +18,58 @@\n     \n     package org.apache.zookeeper.test;\n     \n    -import java.io.ByteArrayOutputStream;\n     import java.io.File;\n    -import java.io.FileInputStream;\n     import java.io.IOException;\n    -import java.nio.ByteBuffer;\n    -import java.util.ArrayList;\n    -import java.util.List;\n    -\n    -import org.apache.zookeeper.common.Time;\n    -import org.apache.jute.BinaryInputArchive;\n    -import org.apache.jute.BinaryOutputArchive;\n    -import org.apache.jute.Record;\n    +\n     import org.apache.zookeeper.CreateMode;\n     import org.apache.zookeeper.KeeperException.NoNodeException;\n    -import org.apache.zookeeper.PortAssignment;\n    -import org.apache.zookeeper.ZKTestCase;\n     import org.apache.zookeeper.ZooDefs.Ids;\n    -import org.apache.zookeeper.ZooDefs.OpCode;\n     import org.apache.zookeeper.ZooKeeper;\n     import org.apache.zookeeper.data.Stat;\n    -import org.apache.zookeeper.server.DataNode;\n    -import org.apache.zookeeper.server.DataTree;\n     import org.apache.zookeeper.server.ServerCnxnFactory;\n     import org.apache.zookeeper.server.SyncRequestProcessor;\n     import org.apache.zookeeper.server.ZooKeeperServer;\n    -import org.apache.zookeeper.server.persistence.FileHeader;\n     import org.apache.zookeeper.server.persistence.FileTxnLog;\n     import org.apache.zookeeper.server.persistence.FileTxnSnapLog;\n     import org.apache.zookeeper.server.persistence.Util;\n     import org.apache.zookeeper.server.persistence.FileTxnLog.FileTxnIterator;\n     import org.apache.zookeeper.server.persistence.TxnLog.TxnIterator;\n    -import org.apache.zookeeper.txn.CreateTxn;\n    -import org.apache.zookeeper.txn.DeleteTxn;\n    -import org.apache.zookeeper.txn.MultiTxn;\n    -import org.apache.zookeeper.txn.Txn;\n     import org.apache.zookeeper.txn.TxnHeader;\n    +import org.eclipse.jetty.util.SocketAddressResolver;\n    --- End diff --\n    \n    nit: not sure this import is needed\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/420\n  \n    @phunt @afine thanks for the detail comments.\r\n    I think @afine made a good point, I've removed setting the SnapCount explicitly in each test, leaving only a common setting in the setUp method. Only those 2 tests really care about the setting and with a little modification, they can share the same setting.\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 34 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1320//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1320//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1320//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/420\n  \n    I thought @afine 's comment was that only the two tests that actually need the snapcount to be set should have it set. The other two tests should not have it set. Am I mistaken?\r\n    \r\n    My concern (remaining) is that we've effectively changed the parameters of the tests if we change these values. I'm assuming the original author verified that the tests failed before submitting the fix (incl tests). However unless we do that ourselves I'd be concerned that the test no longer recreates the environment that originally caused the problem. As such that's why I was suggesting we ensure the original values are used.\r\n    \r\n    Unless you both looked at what the tests are doing and are confident? (I didn't look that deep) I do see that num messages is 300. If we do go this route perhaps we should use the smaller of the two original values? (50 iiuc).\r\n    \r\n    And please remove the lines themselves (rather than just commenting them out).\r\n    \r\n    Thanks!\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/420\n  \n    @phunt I think it's fine to always modify the `snapCount`. My concern was primarily modifying it once the zookeeper server was running created nondeterministic behavior.\r\n    \r\n    In addition, I don't think most of these tests make any assertions that could be impacted by the `snapCount`. So I think the current iteration of the tests is fine.\r\n    \r\n    Also, +1 on removing the lines instead of commenting them out and using a smaller snapCount.\r\n    \r\n    Otherwise lgtm.\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 34 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1323//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1323//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1323//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/420\n  \n    Tests don't seem to be related to the snapCount apart from the 2 that @afine mentioned previously. This way we can keep the structure of this testfile nice and clean with doing the initialization in the setUp method and reusing everything from the base class. I prefer to keep it this way.\r\n    \r\n    Regarding making it volatile: ability to change the snapCount is for testing-purposes only. Which is already not the nicest thing in the world, I wouldn't make it even worse by making it thread safe just for test code.\r\n    \r\n    Commented lines have been removed, were there by accident.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/420\n  \n    > I don't think most of these tests make any assertions that could be impacted by the snapCount.\r\n    \r\n    This is an ambiguous statement to me. You do see that some of the tests are impacted though, right? \r\n    \r\n    e.g.:\r\n            // Verify that we have at least NUM_MESSAGES / SNAPCOUNT txnlog\r\n            etc....\r\n    \r\n    I am I missing something? In testLoadFailure we need at least two log files or otw the test will fail. Not setting the snapcount appropriately (small relative to num messages) would be an issue, no?\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/420\n  \n    @phunt Correct. These 2 tests: testLoad and testLoadFailure make assertion on the number of log files. Rest of the tests don't care. Originally they've reset snapCount to 10000 to produce only 1 test file, but they work perfectly with other setting as well. \n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/420\n  \n    @phunt do you still have concerns?\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/420\n  \n    lgtm - +1. Thanks @anmolnar !\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/420\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/409\n  \n    @anmolnar does this need to be updated to reflect the changes in #420 ? (looks that way to me...)\n", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #3645 (See [https://builds.apache.org/job/ZooKeeper-trunk/3645/])\nZOOKEEPER-2924: Refactor tests of LoadFromLogTest.java (phunt: rev d857e042fe4d188a7ba750ea6947f93f39cb7ed1)\n* (edit) src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java\n* (add) src/java/test/org/apache/zookeeper/test/LoadFromLogNoServerTest.java\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/409\n  \n    @phunt Yes, I'm working on it.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/409\n  \n    @phunt Patch has been updated with the trunk review changes. Please take a look.\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 34 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1337//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1337//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1337//console\n\nThis message is automatically generated.", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/409\n  \n    @phunt Build is green now. Please review & commit if you have a chance.\n", "LGTM - +1 thanks Andor.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/409\n  \n    +1 thanks Andor. I committed this to branch-3.4 - you'll need to close this PR manually.\n", "Github user anmolnar closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/409\n"]}, {"Issue key": "ZOOKEEPER-2923", "Request type": "Bug", "Datetime creation": "2017-10-23 02:25:09", "Datetime resolution": "2017-11-15 21:48:13", "Reporter login": "jiangjiafu", "Reporter name": "Jiafu Jiang", "Assignee login": "jiangjiafu", "Assignee name": "Jiafu Jiang", "Status": "Resolved", "Description": "The comment of the  variable matchSyncs in class CommitProcessor says:\r\n\r\n\r\n{code:java}\r\n    /**\r\n     * This flag indicates whether we need to wait for a response to come back from the\r\n     * leader or we just let the sync operation flow through like a read. The flag will\r\n     * be true if the CommitProcessor is in a Leader pipeline.\r\n     */\r\n    boolean matchSyncs;\r\n{code}\r\n\r\nI search the source code and find that matchSyncs will be false if  the CommitProcessor is in a Leader pipeline, and it will be true if the CommitProcessor  is in a Follower pipeline.\r\nTherefore I think the comment should be modified to match the code.", "Comments": ["GitHub user JiangJiafu opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/408\n\n    ZOOKEEPER-2923\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/JiangJiafu/zookeeper ZOOKEEPER-2923\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/408.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #408\n    \n----\ncommit b6eb491d7dd1bd8a4db93813bb62c6abf4efe31e\nAuthor: Jiafu Jiang <jiangjiafu1989@gmail.com>\nDate:   2017-10-26T10:05:05Z\n\n    ZOOKEEPER-2923\n\n----\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/408\n", "+1 - thanks Jiafu!", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3610 (See [https://builds.apache.org/job/ZooKeeper-trunk/3610/])\nZOOKEEPER-2923: The comment of the variable matchSyncs in class (phunt: rev 0fe7a09ab57c73c3a5c91e68a889f600c0739136)\n* (edit) src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java\n"]}, {"Issue key": "ZOOKEEPER-2922", "Request type": "Test", "Datetime creation": "2017-10-20 08:56:22", "Datetime resolution": "2018-03-26 19:21:46", "Reporter login": "andorm", "Reporter name": "Andor Molnar", "Assignee login": "abrahamfine", "Assignee name": "Abraham Fine", "Status": "Resolved", "Description": "Backport changes of flaky test fix to branch-3.4 :\r\n\r\nhttps://issues.apache.org/jira/browse/ZOOKEEPER-2484\r\n ", "Comments": ["GitHub user anmolnar opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/402\n\n    ZOOKEEPER-2922: Flaky Test fix: org.apache.zookeeper.test.LoadFromLogTest\n\n    This patch is the backport of \r\n    https://issues.apache.org/jira/browse/ZOOKEEPER-2484\r\n    in order to fix related flaky tests on branch-3.4.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/anmolnar/zookeeper ZOOKEEPER-2922\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/402.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #402\n    \n----\ncommit c78ae610b4283135c10d4541f08df0ef3cc72948\nAuthor: Andor Moln\u00e1r <andor@cloudera.com>\nDate:   2017-10-20T09:42:03Z\n\n    ZOOKEEPER-2922: Flaky Test fix: org.apache.zookeeper.test.LoadFromLogTest\n\n----\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +1 tests included.  The patch appears to include 3 new or modified tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1109//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1109//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1109//console\n\nThis message is automatically generated.", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/402\n  \n    I think there is a better way to do this. Picking a new port for each test seems to be a workaround for failing to clean up the resources utilized by a failing test. It would be better if we cleaned up properly after a test execution. \r\n    \r\n    Since this is the method we used to fix the test in another branch I think it is up to the discretion of the committers, but it would be nice to not leak any resources from our tests.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/402\n  \n    I got your point @afine, however I'm still under the impression that the root cause is that tests are running in parallel and multiple instances of Zookeeper are trying to run. I've seen \"Address already in use exception\" as an example of this.\r\n    \r\n    I also have a feeling that in some rare cases tests are trying to use the same instance in parallel and modifying each other's state.\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/402\n  \n    @anmolnar my understanding was that tests for branch-3.4 do not run in parallel. Let me know if I'm incorrect.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/402\n  \n    @afine Here is the command I've extracted from build logs showing that junit runs tests on 8 threads:\r\n    `[ZooKeeper_branch34_jdk8] $ ant -Dtest.output=yes -Dtest.junit.threads=8 -Dtest.junit.output.format=xml -Djavac.target=1.8 clean test-core-java`\r\n    \r\n    Please let me know if I need to check something else too.\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/402\n  \n    @anmolnar You are correct that the command is executed with argument that would allow the tests to run in parallel but if you take a look at the build.xml on branch-3.4 it looks like the code to use \"test.junit.threads\" is not there. I believe the JIRA to add this was https://issues.apache.org/jira/browse/ZOOKEEPER-2183 which shows the change only touched 3.5 and master.\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/402\n  \n    @afine Do you think it's better to cancel this change? Affected tests have been running fine for a couple of builds.\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/402\n  \n    @anmolnar It would be great to have a complete understanding of the root problem. Can you try changing the patch to cleanup after each test to see what happens?\n", "Github user anmolnar closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/402\n", "Github user anmolnar commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/402\n  \n    Obsoleted by https://github.com/apache/zookeeper/pull/409\r\n\n", "Sould be \"Won't Fix\""]}, {"Issue key": "ZOOKEEPER-2921", "Request type": "Improvement", "Datetime creation": "2017-10-19 10:09:33", "Datetime resolution": null, "Reporter login": "randgalt", "Reporter name": "Jordan Zimmerman", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "FileTxnLog.commit() has a warning when an individual sync takes longer than {{fsyncWarningThresholdMS}}. However, it would also be useful to warn when the entire commit operation takes longer than {{fsyncWarningThresholdMS}} as this can cause client connection failures. Currently, commit() can take longer than 2/3 of a session but still not log a warning.", "Comments": ["Agree with the sentiment, however not the wording. Disagree with \"more useful\" as the fsync warning is specifically there to identify when the fsync is slow - the typical case being when ZK is colocated with other services. Having this indication makes debugging a breeze for this issue. Don't change the existing funcationality. \r\n\r\nThat said having such a warning when request latency exceeds some threshold would also be useful. However it should not be overloaded/combined/replacing/etc... the existing fsync check.", "Fair point - I updated the description...\r\n\r\nDo we need a new threshold value or is re-using {{fsyncWarningThresholdMS}} sufficient?", "I would not reuse.\r\n\r\nAnother thing to keep in mind - the metrics already capture min/max/avg request latency on the server. Capturing this indication in the log can be useful to get insight after the fact, however you should already be monitoring these metrics and could get this information in the current releases.", "Hi [~randgalt] and [~phunt] \r\n\r\n{quote}\r\nThat said having such a warning when request latency exceeds some threshold would also be useful.\r\n{quote}\r\n\r\nIsn't that what ZOOKEEPER-2770 is all about? Or I misunderstood this issue? There's a corresponding stale patch already: https://github.com/apache/zookeeper/pull/307\r\n\r\nWdyt? Please, let me know.\r\n\r\nCheers!\r\n"]}, {"Issue key": "ZOOKEEPER-2920", "Request type": "Bug", "Datetime creation": "2017-10-17 21:49:16", "Datetime resolution": "2018-05-31 03:58:07", "Reporter login": "abrahamfine", "Reporter name": "Abraham Fine", "Assignee login": "phunt", "Assignee name": "Patrick D. Hunt", "Status": "Closed", "Description": null, "Comments": ["-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1769//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1769//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1769//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1770//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1770//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1770//console\n\nThis message is automatically generated.", "SUCCESS: Integrated in Jenkins build ZooKeeper-trunk #45 (See [https://builds.apache.org/job/ZooKeeper-trunk/45/])\nZOOKEEPER-2920: Upgrade OWASP Dependency Check to 3.2.1 (hanm: rev 4c5674ce4ca1ca473c897bfe8d7f848227e8b706)\n* (edit) build.xml\n"]}, {"Issue key": "ZOOKEEPER-2919", "Request type": "Bug", "Datetime creation": "2017-10-16 22:58:47", "Datetime resolution": null, "Reporter login": "junrao", "Reporter name": "Jun Rao", "Assignee login": "hanm", "Assignee name": "Michael Han", "Status": "Open", "Description": "We found the following issue when using ZK. A client (a Kafka broker) registered an ephemeral node in ZK. The client then received a session expiration event and created the new session. The client tried to create the same ephemeral node in ZK in the new session but received a NodeExistException. The following are the details.\r\n\r\nFrom Kafka broker 1:\r\nBroker 1 received the expiration of session 55bcff0f02d0002 at 13:33:26.\r\n\r\n{code:java}\r\n[2017-07-29 13:33:26,706] INFO Unable to reconnect to ZooKeeper service, session 0x55bcff0f02d0002 has expired, closing socket connection (org.apache.zookeeper.ClientCnxn)\r\n{code}\r\n\r\nIt then established a new session 55d8f690ca20038 at 13:33:33.\r\n\r\n{code:java}\r\n[2017-07-29 13:33:33,405] INFO Session establishment complete on server rdalnydbbdqs10/10.122.104.12:2181, sessionid = 0x55d8f690ca20038, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)\r\n{code}\r\n\r\nHowever, the re-registration of the broker id fails.\r\n\r\n{code:java}\r\n[2017-07-29 13:33:33,408] INFO Result of znode creation is: NODEEXISTS (kafka.utils.ZKCheckedEphemeral)\r\n[2017-07-29 13:33:33,408] ERROR Error handling event ZkEvent[New session event sent to kafka.server.KafkaHealthcheck$SessionExpireListener@74ad6d14] (org.I0Itec.zkclient.ZkEvent\r\nThread)\r\njava.lang.RuntimeException: A broker is already registered on the path /brokers/ids/1. This probably indicates that you either have configured a brokerid that is already in use, or else you have shutdown this broker and restarted it faster than the zookeeper timeout so it appears to be re-registering.\r\n        at kafka.utils.ZkUtils.registerBrokerInZk(ZkUtils.scala:375)\r\n        at kafka.utils.ZkUtils.registerBrokerInZk(ZkUtils.scala:361)\r\n        at kafka.server.KafkaHealthcheck.register(KafkaHealthcheck.scala:71)\r\n        at kafka.server.KafkaHealthcheck$SessionExpireListener.handleNewSession(KafkaHealthcheck.scala:105)\r\n        at org.I0Itec.zkclient.ZkClient$6.run(ZkClient.java:736)\r\n        at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:72)\r\n{code}\r\n\r\nFrom ZK server (my id 4) :\r\nIt expired the old session 55bcff0f02d0002 correctly before broker received the session expiration. It then went to ZK leader election soon after.\r\n\r\n{code:java}\r\n[2017-07-29 13:33:26,000] INFO Expiring session 0x55bcff0f02d0002, timeout of 6000ms exceeded (org.apache.zookeeper.server.ZooKeeperServer)\r\n[2017-07-29 13:33:26,019] INFO Processed session termination for sessionid: 0x55bcff0f02d0002 (org.apache.zookeeper.server.PrepRequestProcessor)\r\n[2017-07-29 13:33:33,582] INFO Shutting down (org.apache.zookeeper.server.quorum.CommitProcessor)\r\n[2017-07-29 13:33:34,344] INFO New election. My id =  4, proposed zxid=0x5830d1163b (org.apache.zookeeper.server.quorum.FastLeaderElection)\r\n[2017-07-29 13:34:22,499] INFO FOLLOWING - LEADER ELECTION TOOK - 48915 (org.apache.zookeeper.server.quorum.Learner)\r\n{code}\r\n\r\nFrom ZK server (my id 5):\r\nIt lost the connection to the old session 55bcff0f02d0002 before the session got expired. It then went into ZK leader election and became the leader. However, it didn't think the old session 55bcff0f02d0002 was expired after becoming the leader. Therefore, the new session 55d8f690ca20038 failed to create /brokers/ids/1. Only after that, it eventually expired the old session 55bcff0f02d0002.\r\n\r\n{code:java}\r\n[2017-07-29 13:33:24,216] WARN caught end of stream exception (org.apache.zookeeper.server.NIOServerCnxn)\r\nEndOfStreamException: Unable to read additional data from client sessionid 0x55bcff0f02d0002, likely client has closed socket\r\n        at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:228)\r\n        at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:203)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n2017-07-29 13:33:24,216] INFO Closed socket connection for client /10.122.73.147:59615 which had sessionid 0x55bcff0f02d0002 (org.apache.zookeeper.server.NIOServerCnxn)\r\n[2017-07-29 13:33:30,921] INFO New election. My id =  5, proposed zxid=0x5830d1113f (org.apache.zookeeper.server.quorum.FastLeaderElection)\r\n[2017-07-29 13:33:31,126] INFO LEADING - LEADER ELECTION TOOK - 1122 (org.apache.zookeeper.server.quorum.Leader)\r\n[2017-07-29 13:33:33,405] INFO Established session 0x55d8f690ca20038 with negotiated timeout 6000 for client /10.122.73.147:47106 (org.apache.zookeeper.server.ZooKeeperServer)\r\n[2017-07-29 13:33:33,407] INFO Got user-level KeeperException when processing sessionid:0x55d8f690ca20038 type:create cxid:0x5 zxid:0x5900000352 txntype:-1 reqpath:n/a Error Path:/brokers/ids/1 Error:KeeperErrorCode = NodeExists for /brokers/ids/1 (org.apache.zookeeper.server.PrepRequestProcessor)\r\n[2017-07-29 13:33:40,002] INFO Expiring session 0x55bcff0f02d0002, timeout of 6000ms exceeded (org.apache.zookeeper.server.ZooKeeperServer)\r\n[2017-07-29 13:33:40,074] INFO Processed session termination for sessionid: 0x55bcff0f02d0002 (org.apache.zookeeper.server.PrepRequestProcessor)\r\n{code}\r\n\r\nAccording to http://mail-archives.apache.org/mod_mbox/zookeeper-user/201701.mbox/%3CB512F6DE-C0BF-45CE-8102-6F242988268E%40apache.org%3E from [~fpj], a ZK client in a new session shouldn't see the ephemeral node created in its previous session. So, could this be a potential bug in ZK during ZK leader transition?\r\n", "Comments": ["Attached are the logs from 2 ZK servers.", "[~hanm], do you think this is a real issue in ZK? Thanks.", "[~junrao] Give me sometime to figure out this.. still in the process of figuring out legal issues after job change.", "[~junrao] I think this is a bug in ZK. We promised (as [~fpj] also pointed in the [email thread|http://mail-archives.apache.org/mod_mbox/zookeeper-user/201701.mbox/%3CB512F6DE-C0BF-45CE-8102-6F242988268E%40apache.org%3E]) that {quote} Receiving a session expiration means\r\nthat a closeSession has been committed {quote}, but this is not true in every case, and sometimes even when a client receives session expire event it's possible the session close is not committed across the quorum. This is because we don't differentiate \"session closing\" with \"session closed\" state internally at ZK. Between a session starts expiring and the session expired, a client will receive session expire for its requests to server but if the quorum is down at the same time, it's possible the close session is not committed.\r\n\r\nHere is a canonical example similar to this Kafka case: \r\n\r\nClient A connects to Server 1. Server 1, 2 and 3 forms an ensemble.\r\n1. For some reasons like network interruption, Server 1 thinks A is dead, so it starts expiring the session. It starts by setting the \"is Closing\" property of session object associated with A to true.\r\n2. A fires a request to Server 1 (and network heals) and gets back session expire event. A thinks its session is expired but actually the session expiration was not finished yet. A gave up and starts a new session.\r\n3. Meanwhile, Server 1 proposes to close the old session of A and at the same time, the quorum is down (1 was leader but got partitioned from 2 and 3). The proposal never landed at Server 2 and Server 3. \r\n4. 2 and 3 can talk, and they elects 2 as leader, who still has old session of A.\r\n5. Network heals, 1 reconnects to ensemble, and found there is already a leader 2, sync with 2, truncate its log when needed.\r\n6. 2 now happily accepts a new session request from A.\r\n7. Eventually 2 expired old session object because there was not active client associates with that old session. Now between the new session established and the old session expiration, the old ephemeral nodes will be visible to clients.\r\n\r\nThere are two approaches to solve this issue. \r\n\r\n1. ZK users (e.g. Kafka ZK util client) could check the presence of the old ephemeral (either through polling or register a watcher) before trying recreate another ephemeral with same old path.\r\n2. ZK fixes the semantic of session expire so when a client sees session expired, the session is really expired (instead of expiring). \r\n\r\nI'll propose a fix for 2, starting with a test case that can deterministically reproduce this issue.", "[~hanm]Is this fixed in the latest ZK 3.5.x release?", "[~xiaotao183] unfortunately it's not fixed for any releases yet. I was working on a solution but then got side tracked on something else. Let me put my old solution together and will send a pull request soon."]}, {"Issue key": "ZOOKEEPER-2918", "Request type": "Improvement", "Datetime creation": "2017-10-09 21:57:46", "Datetime resolution": null, "Reporter login": "abrahamfine", "Reporter name": "Abraham Fine", "Assignee login": "abrahamfine", "Assignee name": "Abraham Fine", "Status": "Open", "Description": null, "Comments": []}, {"Issue key": "ZOOKEEPER-2917", "Request type": "Bug", "Datetime creation": "2017-10-08 20:12:20", "Datetime resolution": null, "Reporter login": "sraspudic", "Reporter name": "Steven Raspudic", "Assignee login": null, "Assignee name": null, "Status": "Open", "Description": "Basically seeing the same issue as documtented in \r\n\r\nhttps://github.com/zk-ruby/zookeeper/pull/54#issuecomment-28764204\r\n\r\ne.g.\r\n\r\n[myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@349] - caught end of stream exception\r\nEndOfStreamException: Unable to read additional data from client sessionid 0x14252332fe501c9, likely client has closed socket\r\n        at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:220)\r\n        at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:208)\r\n        at java.lang.Thread.run(Thread.java:724)\r\n2013-11-19 01:57:53,625 [myid:] - INFO  [ProcessThread(sid:0 cport:-1)::PrepRequestProcessor@476] - Processed session termination for sessionid: 0x14252332fe501c9\r\n2013-11-19 01:57:53,626 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1001] - Closed socket connection for client /127.0.0.1:58253 which had sessionid 0x\r\n14252332fe501c9\r\n\r\n", "Comments": []}, {"Issue key": "ZOOKEEPER-2916", "Request type": "Sub-task", "Datetime creation": "2017-10-07 21:33:09", "Datetime resolution": null, "Reporter login": "phunt", "Reporter name": "Patrick D. Hunt", "Assignee login": "bkanivets", "Assignee name": "Bogdan Kanivets", "Status": "Open", "Description": "startSingleServerTest seems to be failing intermittently. 10 times in the first few days of this month. Can someone take a look?\n", "Comments": ["I've only see this failing in 3.5/trunk.", "Noticed \"newbie\" tag, can I take this?", "Sure thing.", "I'm still seeing this quite a bit - can someone pick this one up and help resolve it asap. thx.", "I don't have the solution yet, but when comparing successful and failed runs the problem seems to be around leader election after \r\n\r\n{code:java}\r\nstartObservers(observerStrings);\r\ntestReconfig(follower2, true, reconfigServers); //add partcipants\r\ntestReconfig(follower2, true, observerStrings); //change to observers\r\n{code}\r\n\r\nObservers here are started as participants and take part in election, but later they are converted to observers\r\n\r\nLooking at failed run\r\nhttps://builds.apache.org/job/ZooKeeper-trunk-openjdk7/1701/\r\n\r\nWhen I filter by assigned ports \r\n\r\n{code:java}\r\ngrep \"1122[2-9]\\|1123[0-6]\" consoleFull-jdk7.html\r\n{code}\r\n\r\n\r\nafter the second observer is up:\r\n[junit] 2017-11-16 19:53:26,403 [myid:4] - INFO  [Thread-11:NIOServerCnxnFactory@686] - binding to port localhost/127.0.0.1:11234\r\n\r\nthere will be only one \"Restarting Leader Election\":\r\n[junit] 2017-11-16 19:53:26,737 [myid:3] - WARN  [QuorumPeer[myid=3](plain=/127.0.0.1:11231)(secure=disabled):QuorumPeer@1427] - Restarting Leader Election\r\nthen 20s later \r\n[junit] 2017-11-16 19:53:46,715 [myid:3] - WARN  [localhost/127.0.0.1:11233:QuorumCnxManager@348] - Exception reading or writing challenge: java.net.SocketTimeoutException: Read timed out\r\n\r\nOn the successful run:\r\nhttps://builds.apache.org/job/ZooKeeper-trunk-openjdk7/1702\r\n\r\n{code:java}\r\ngrep \"2738[0-9]\\|2739[0-4]\" consoleFull-jdk7-success.html\r\n{code}\r\n\r\n\r\nafter second observer start:\r\n[junit] 2017-11-17 20:18:40,311 [myid:4] - INFO  [Thread-11:NIOServerCnxnFactory@686] - binding to port localhost/127.0.0.1:27392\r\n\r\nThere are leader election restarts from two peers\r\n[junit] 2017-11-17 20:18:43,891 [myid:4] - WARN  [QuorumPeer[myid=4](plain=/127.0.0.1:27392)(secure=disabled):QuorumPeer@1427] - Restarting Leader Election\r\n[junit] 2017-11-17 20:18:43,894 [myid:3] - WARN  [QuorumPeer[myid=3](plain=/127.0.0.1:27389)(secure=disabled):QuorumPeer@1427] - Restarting Leader Election\r\n\r\nThere is no \"Read timed out\", and test is done after 3s\r\n[junit] 2017-11-17 20:18:46,133 [myid:] - INFO  [main:StandaloneDisabledTest@114] - Configuration after adding two observers:\r\n[junit] server.2=localhost:27387:27388:participant;localhost:27386\r\n[junit] server.3=localhost:27390:27391:observer;localhost:27389\r\n[junit] server.4=localhost:27393:27394:observer;localhost:27392\r\n\r\n", "[~hanm] or [~shralex] can you provide insight on this one?", "Reproducible in current branch-3.5?", "[~mkedwards]\r\n\r\nYes [https://builds.apache.org/job/ZooKeeper_branch35_jdk8/1195/]\r\n\r\nAlso, I've seen in on trunk.\r\n\r\nPart of the problem is that fail frequency is low. Maybe needs some extra logging to understand what's going on.\r\n\r\n", "The root cause is hidden inside {{...[truncated 395348 chars]...}}.  But it looks to me like the server failed to bind the port, which seems to be a common cause of spurious test failures in CI.  See https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/2708/consoleText for an example (search for {{BindException}})."]}, {"Issue key": "ZOOKEEPER-2915", "Request type": "Improvement", "Datetime creation": "2017-10-06 21:38:16", "Datetime resolution": "2017-12-01 23:31:36", "Reporter login": "abrahamfine", "Reporter name": "Abraham Fine", "Assignee login": "abrahamfine", "Assignee name": "Abraham Fine", "Status": "Resolved", "Description": "Currently it is very difficult to tell exactly which dependencies make it into the final classpath of zookeeper. We do not perform any conflict resolution between the test and default classpaths (this has resulted in strange behavior with the slf4j-log4j12 binding) and have no way of telling if a change to the dependencies has altered the transitive dependencies pulled down by the project. \n\nOur dependency list is relatively small so we should use \"strict\" conflict management (break the build when we try to pull two versions of the same dependency) so we can exercise maximum control over the classpath. \n\nNote: I also attempted to find a way to see if I could always prefer transitive dependencies from the default configuration over those pulled by the test configuration (to make sure that the zookeeper we test against has the same dependencies as the one we ship) but this appears to be impossible (or at least incredibly difficult) with ivy. Any opinions here would be greatly appreciated.", "Comments": ["GitHub user afine opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/396\n\n    ZOOKEEPER-2915: Use \"strict\" conflict management in ivy\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/afine/zookeeper ZOOKEEPER-2915_3.4\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/396.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #396\n    \n----\ncommit ea28ddc7ecc4eebe0fe1af2fb54dcabe578348c1\nAuthor: Abraham Fine <afine@apache.org>\nDate:   2017-10-06T21:43:05Z\n\n    ZOOKEEPER-2915: Use \"strict\" conflict management in ivy\n\n----\n", "GitHub user afine opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/397\n\n    ZOOKEEPER-2915: Use \"strict\" conflict management in ivy\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/afine/zookeeper ZOOKEEPER-2915\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/397.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #397\n    \n----\ncommit 18d5c7f26e43f87c4c0e7b41c0cc6f398a892f0a\nAuthor: Abraham Fine <afine@apache.org>\nDate:   2017-10-07T22:19:45Z\n\n    ZOOKEEPER-2915: Use \"strict\" conflict management in ivy\n\n----\n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1089//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1089//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1089//console\n\nThis message is automatically generated.", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1088//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1088//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1088//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/396\n  \n    @afine something seems wrong with this patch compared to master patch #397 \r\n    \r\n    On master there are no dup'd libraries in build/test/lib after \"ant clean compile-test\" - in this patch (3.4) I see many of the main libs dup'd into build/test/lib. Can you LMK what's what?\n", "Github user afine commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/396\n  \n    @phunt Egah. This patch is correct and I fixed the other one (the one based on master). \r\n    \r\n    The end result of this patch should be, when running the tests, all dependencies from ivy should be available in one directory (build/test/lib) and build/lib should NOT be in the classpath. \n", "-1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    -1 core tests.  The patch failed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1096//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1096//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1096//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/396\n  \n    lgtm. +1 Thanks Abe.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/397\n  \n    lgtm. +1 Thanks Abe.\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/396\n  \n    @afine please close this PR manually.\n", "Github user asfgit closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/397\n", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/397\n  \n    @afine this applies to branch-3.5 however it fails to build. master looks ok though. Can you either change this PR or submit a separate PR for 3.5? thankx.\n", "FAILURE: Integrated in Jenkins build ZooKeeper-trunk #3574 (See [https://builds.apache.org/job/ZooKeeper-trunk/3574/])\nZOOKEEPER-2915: Use \"strict\" conflict management in ivy (phunt: rev 575e850c4d75191e27368e87ad5945cc5aba673d)\n* (edit) build.xml\n* (edit) ivy.xml\n", "Github user afine closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/396\n", "GitHub user afine opened a pull request:\n\n    https://github.com/apache/zookeeper/pull/426\n\n    ZOOKEEPER-2915: Use \"strict\" conflict management in ivy\n\n    Same as https://github.com/apache/zookeeper/pull/397 just targeting https://github.com/apache/zookeeper/pull/397\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/afine/zookeeper ZOOKEEPER-2915_3.5\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/zookeeper/pull/426.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #426\n    \n----\ncommit d6d79561c9658a007f8e57222fefbfe0645a29e0\nAuthor: Abraham Fine <afine@apache.org>\nDate:   2017-11-30T21:30:30Z\n\n    ZOOKEEPER-2915: Use \"strict\" conflict management in ivy\n\n----\n", "+1 overall.  GitHub Pull Request  Build\n      \n\n    +1 @author.  The patch does not contain any @author tags.\n\n    +0 tests included.  The patch appears to be a documentation patch that doesn't require tests.\n\n    +1 javadoc.  The javadoc tool did not generate any warning messages.\n\n    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.\n\n    +1 findbugs.  The patch does not introduce any new Findbugs (version 3.0.1) warnings.\n\n    +1 release audit.  The applied patch does not increase the total number of release audit warnings.\n\n    +1 core tests.  The patch passed core unit tests.\n\n    +1 contrib tests.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1324//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1324//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html\nConsole output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-github-pr-build/1324//console\n\nThis message is automatically generated.", "Github user phunt commented on the issue:\n\n    https://github.com/apache/zookeeper/pull/426\n  \n    Look good. +1 thanks Abe. Please close this as it's not the default branch.\n", "Github user afine closed the pull request at:\n\n    https://github.com/apache/zookeeper/pull/426\n"]}]